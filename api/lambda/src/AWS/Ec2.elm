module AWS.Ec2 exposing (service)

import AWS.Core.Decode
import AWS.Core.Http
import AWS.Core.Service
import Codec exposing (Codec)
import Enum exposing (Enum)
import Json.Decode exposing (Decoder)
import Json.Encode exposing (Value)
import Refined exposing (IntError, Refined, StringError)


{-| Configuration for this service. -}
service : AWS.Core.Service.Service
service =
    let
        optionsFn =
            AWS.Core.Service.setXmlNamespace "http://ec2.amazonaws.com/doc/2016-11-15"
    in
    AWS.Core.Service.defineGlobal "ec2" "2016-11-15" AWS.Core.Service.EC2 AWS.Core.Service.SignV4 optionsFn


{-| AWS Endpoint. -}
withdrawByoipCidr :
    WithdrawByoipCidrRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper WithdrawByoipCidrResult)
withdrawByoipCidr req =
    let
        jsonBody =
            req |> Codec.encoder withdrawByoipCidrRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "WithdrawByoipCidr"
                (AWS.Core.Decode.ResultDecoder "WithdrawByoipCidrResult" (Codec.decoder withdrawByoipCidrResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
updateSecurityGroupRuleDescriptionsIngress :
    UpdateSecurityGroupRuleDescriptionsIngressRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper UpdateSecurityGroupRuleDescriptionsIngressResult)
updateSecurityGroupRuleDescriptionsIngress req =
    let
        jsonBody =
            req |> Codec.encoder updateSecurityGroupRuleDescriptionsIngressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "UpdateSecurityGroupRuleDescriptionsIngress"
                (AWS.Core.Decode.ResultDecoder
                    "UpdateSecurityGroupRuleDescriptionsIngressResult"
                    (Codec.decoder updateSecurityGroupRuleDescriptionsIngressResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
updateSecurityGroupRuleDescriptionsEgress :
    UpdateSecurityGroupRuleDescriptionsEgressRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper UpdateSecurityGroupRuleDescriptionsEgressResult)
updateSecurityGroupRuleDescriptionsEgress req =
    let
        jsonBody =
            req |> Codec.encoder updateSecurityGroupRuleDescriptionsEgressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "UpdateSecurityGroupRuleDescriptionsEgress"
                (AWS.Core.Decode.ResultDecoder
                    "UpdateSecurityGroupRuleDescriptionsEgressResult"
                    (Codec.decoder updateSecurityGroupRuleDescriptionsEgressResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
unmonitorInstances :
    UnmonitorInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper UnmonitorInstancesResult)
unmonitorInstances req =
    let
        jsonBody =
            req |> Codec.encoder unmonitorInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "UnmonitorInstances"
                (AWS.Core.Decode.ResultDecoder "UnmonitorInstancesResult" (Codec.decoder unmonitorInstancesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
unassignPrivateIpAddresses :
    UnassignPrivateIpAddressesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
unassignPrivateIpAddresses req =
    let
        jsonBody =
            req |> Codec.encoder unassignPrivateIpAddressesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "UnassignPrivateIpAddresses" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
unassignIpv6Addresses :
    UnassignIpv6AddressesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper UnassignIpv6AddressesResult)
unassignIpv6Addresses req =
    let
        jsonBody =
            req |> Codec.encoder unassignIpv6AddressesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "UnassignIpv6Addresses"
                (AWS.Core.Decode.ResultDecoder
                    "UnassignIpv6AddressesResult"
                    (Codec.decoder unassignIpv6AddressesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
terminateInstances :
    TerminateInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper TerminateInstancesResult)
terminateInstances req =
    let
        jsonBody =
            req |> Codec.encoder terminateInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "TerminateInstances"
                (AWS.Core.Decode.ResultDecoder "TerminateInstancesResult" (Codec.decoder terminateInstancesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
terminateClientVpnConnections :
    TerminateClientVpnConnectionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper TerminateClientVpnConnectionsResult)
terminateClientVpnConnections req =
    let
        jsonBody =
            req |> Codec.encoder terminateClientVpnConnectionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "TerminateClientVpnConnections"
                (AWS.Core.Decode.ResultDecoder
                    "TerminateClientVpnConnectionsResult"
                    (Codec.decoder terminateClientVpnConnectionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
stopInstances : StopInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper StopInstancesResult)
stopInstances req =
    let
        jsonBody =
            req |> Codec.encoder stopInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "StopInstances"
                (AWS.Core.Decode.ResultDecoder "StopInstancesResult" (Codec.decoder stopInstancesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
startInstances : StartInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper StartInstancesResult)
startInstances req =
    let
        jsonBody =
            req |> Codec.encoder startInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "StartInstances"
                (AWS.Core.Decode.ResultDecoder "StartInstancesResult" (Codec.decoder startInstancesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
searchTransitGatewayRoutes :
    SearchTransitGatewayRoutesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper SearchTransitGatewayRoutesResult)
searchTransitGatewayRoutes req =
    let
        jsonBody =
            req |> Codec.encoder searchTransitGatewayRoutesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "SearchTransitGatewayRoutes"
                (AWS.Core.Decode.ResultDecoder
                    "SearchTransitGatewayRoutesResult"
                    (Codec.decoder searchTransitGatewayRoutesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
runScheduledInstances :
    RunScheduledInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RunScheduledInstancesResult)
runScheduledInstances req =
    let
        jsonBody =
            req |> Codec.encoder runScheduledInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RunScheduledInstances"
                (AWS.Core.Decode.ResultDecoder
                    "RunScheduledInstancesResult"
                    (Codec.decoder runScheduledInstancesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
runInstances : RunInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper Reservation)
runInstances req =
    let
        jsonBody =
            req |> Codec.encoder runInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RunInstances"
                (AWS.Core.Decode.ResultDecoder "Reservation" (Codec.decoder reservationCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
revokeSecurityGroupIngress :
    RevokeSecurityGroupIngressRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
revokeSecurityGroupIngress req =
    let
        jsonBody =
            req |> Codec.encoder revokeSecurityGroupIngressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "RevokeSecurityGroupIngress" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
revokeSecurityGroupEgress :
    RevokeSecurityGroupEgressRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
revokeSecurityGroupEgress req =
    let
        jsonBody =
            req |> Codec.encoder revokeSecurityGroupEgressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "RevokeSecurityGroupEgress" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
revokeClientVpnIngress :
    RevokeClientVpnIngressRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RevokeClientVpnIngressResult)
revokeClientVpnIngress req =
    let
        jsonBody =
            req |> Codec.encoder revokeClientVpnIngressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RevokeClientVpnIngress"
                (AWS.Core.Decode.ResultDecoder
                    "RevokeClientVpnIngressResult"
                    (Codec.decoder revokeClientVpnIngressResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
restoreAddressToClassic :
    RestoreAddressToClassicRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RestoreAddressToClassicResult)
restoreAddressToClassic req =
    let
        jsonBody =
            req |> Codec.encoder restoreAddressToClassicRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RestoreAddressToClassic"
                (AWS.Core.Decode.ResultDecoder
                    "RestoreAddressToClassicResult"
                    (Codec.decoder restoreAddressToClassicResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
resetSnapshotAttribute : ResetSnapshotAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
resetSnapshotAttribute req =
    let
        jsonBody =
            req |> Codec.encoder resetSnapshotAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ResetSnapshotAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
resetNetworkInterfaceAttribute :
    ResetNetworkInterfaceAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
resetNetworkInterfaceAttribute req =
    let
        jsonBody =
            req |> Codec.encoder resetNetworkInterfaceAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ResetNetworkInterfaceAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
resetInstanceAttribute : ResetInstanceAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
resetInstanceAttribute req =
    let
        jsonBody =
            req |> Codec.encoder resetInstanceAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ResetInstanceAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
resetImageAttribute : ResetImageAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
resetImageAttribute req =
    let
        jsonBody =
            req |> Codec.encoder resetImageAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ResetImageAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
resetFpgaImageAttribute :
    ResetFpgaImageAttributeRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ResetFpgaImageAttributeResult)
resetFpgaImageAttribute req =
    let
        jsonBody =
            req |> Codec.encoder resetFpgaImageAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ResetFpgaImageAttribute"
                (AWS.Core.Decode.ResultDecoder
                    "ResetFpgaImageAttributeResult"
                    (Codec.decoder resetFpgaImageAttributeResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
resetEbsDefaultKmsKeyId :
    ResetEbsDefaultKmsKeyIdRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ResetEbsDefaultKmsKeyIdResult)
resetEbsDefaultKmsKeyId req =
    let
        jsonBody =
            req |> Codec.encoder resetEbsDefaultKmsKeyIdRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ResetEbsDefaultKmsKeyId"
                (AWS.Core.Decode.ResultDecoder
                    "ResetEbsDefaultKmsKeyIdResult"
                    (Codec.decoder resetEbsDefaultKmsKeyIdResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
requestSpotInstances :
    RequestSpotInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RequestSpotInstancesResult)
requestSpotInstances req =
    let
        jsonBody =
            req |> Codec.encoder requestSpotInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RequestSpotInstances"
                (AWS.Core.Decode.ResultDecoder
                    "RequestSpotInstancesResult"
                    (Codec.decoder requestSpotInstancesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
requestSpotFleet :
    RequestSpotFleetRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RequestSpotFleetResponse)
requestSpotFleet req =
    let
        jsonBody =
            req |> Codec.encoder requestSpotFleetRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RequestSpotFleet"
                (AWS.Core.Decode.ResultDecoder "RequestSpotFleetResponse" (Codec.decoder requestSpotFleetResponseCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
reportInstanceStatus : ReportInstanceStatusRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
reportInstanceStatus req =
    let
        jsonBody =
            req |> Codec.encoder reportInstanceStatusRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ReportInstanceStatus" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
replaceTransitGatewayRoute :
    ReplaceTransitGatewayRouteRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ReplaceTransitGatewayRouteResult)
replaceTransitGatewayRoute req =
    let
        jsonBody =
            req |> Codec.encoder replaceTransitGatewayRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ReplaceTransitGatewayRoute"
                (AWS.Core.Decode.ResultDecoder
                    "ReplaceTransitGatewayRouteResult"
                    (Codec.decoder replaceTransitGatewayRouteResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
replaceRouteTableAssociation :
    ReplaceRouteTableAssociationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ReplaceRouteTableAssociationResult)
replaceRouteTableAssociation req =
    let
        jsonBody =
            req |> Codec.encoder replaceRouteTableAssociationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ReplaceRouteTableAssociation"
                (AWS.Core.Decode.ResultDecoder
                    "ReplaceRouteTableAssociationResult"
                    (Codec.decoder replaceRouteTableAssociationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
replaceRoute : ReplaceRouteRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
replaceRoute req =
    let
        jsonBody =
            req |> Codec.encoder replaceRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ReplaceRoute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
replaceNetworkAclEntry : ReplaceNetworkAclEntryRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
replaceNetworkAclEntry req =
    let
        jsonBody =
            req |> Codec.encoder replaceNetworkAclEntryRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ReplaceNetworkAclEntry" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
replaceNetworkAclAssociation :
    ReplaceNetworkAclAssociationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ReplaceNetworkAclAssociationResult)
replaceNetworkAclAssociation req =
    let
        jsonBody =
            req |> Codec.encoder replaceNetworkAclAssociationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ReplaceNetworkAclAssociation"
                (AWS.Core.Decode.ResultDecoder
                    "ReplaceNetworkAclAssociationResult"
                    (Codec.decoder replaceNetworkAclAssociationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
replaceIamInstanceProfileAssociation :
    ReplaceIamInstanceProfileAssociationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ReplaceIamInstanceProfileAssociationResult)
replaceIamInstanceProfileAssociation req =
    let
        jsonBody =
            req |> Codec.encoder replaceIamInstanceProfileAssociationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ReplaceIamInstanceProfileAssociation"
                (AWS.Core.Decode.ResultDecoder
                    "ReplaceIamInstanceProfileAssociationResult"
                    (Codec.decoder replaceIamInstanceProfileAssociationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
releaseHosts : ReleaseHostsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ReleaseHostsResult)
releaseHosts req =
    let
        jsonBody =
            req |> Codec.encoder releaseHostsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ReleaseHosts"
                (AWS.Core.Decode.ResultDecoder "ReleaseHostsResult" (Codec.decoder releaseHostsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
releaseAddress : ReleaseAddressRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
releaseAddress req =
    let
        jsonBody =
            req |> Codec.encoder releaseAddressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ReleaseAddress" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
rejectVpcPeeringConnection :
    RejectVpcPeeringConnectionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RejectVpcPeeringConnectionResult)
rejectVpcPeeringConnection req =
    let
        jsonBody =
            req |> Codec.encoder rejectVpcPeeringConnectionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RejectVpcPeeringConnection"
                (AWS.Core.Decode.ResultDecoder
                    "RejectVpcPeeringConnectionResult"
                    (Codec.decoder rejectVpcPeeringConnectionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
rejectVpcEndpointConnections :
    RejectVpcEndpointConnectionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RejectVpcEndpointConnectionsResult)
rejectVpcEndpointConnections req =
    let
        jsonBody =
            req |> Codec.encoder rejectVpcEndpointConnectionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RejectVpcEndpointConnections"
                (AWS.Core.Decode.ResultDecoder
                    "RejectVpcEndpointConnectionsResult"
                    (Codec.decoder rejectVpcEndpointConnectionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
rejectTransitGatewayVpcAttachment :
    RejectTransitGatewayVpcAttachmentRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RejectTransitGatewayVpcAttachmentResult)
rejectTransitGatewayVpcAttachment req =
    let
        jsonBody =
            req |> Codec.encoder rejectTransitGatewayVpcAttachmentRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RejectTransitGatewayVpcAttachment"
                (AWS.Core.Decode.ResultDecoder
                    "RejectTransitGatewayVpcAttachmentResult"
                    (Codec.decoder rejectTransitGatewayVpcAttachmentResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
registerImage : RegisterImageRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper RegisterImageResult)
registerImage req =
    let
        jsonBody =
            req |> Codec.encoder registerImageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "RegisterImage"
                (AWS.Core.Decode.ResultDecoder "RegisterImageResult" (Codec.decoder registerImageResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
rebootInstances : RebootInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
rebootInstances req =
    let
        jsonBody =
            req |> Codec.encoder rebootInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "RebootInstances" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
purchaseScheduledInstances :
    PurchaseScheduledInstancesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper PurchaseScheduledInstancesResult)
purchaseScheduledInstances req =
    let
        jsonBody =
            req |> Codec.encoder purchaseScheduledInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "PurchaseScheduledInstances"
                (AWS.Core.Decode.ResultDecoder
                    "PurchaseScheduledInstancesResult"
                    (Codec.decoder purchaseScheduledInstancesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
purchaseReservedInstancesOffering :
    PurchaseReservedInstancesOfferingRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper PurchaseReservedInstancesOfferingResult)
purchaseReservedInstancesOffering req =
    let
        jsonBody =
            req |> Codec.encoder purchaseReservedInstancesOfferingRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "PurchaseReservedInstancesOffering"
                (AWS.Core.Decode.ResultDecoder
                    "PurchaseReservedInstancesOfferingResult"
                    (Codec.decoder purchaseReservedInstancesOfferingResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
purchaseHostReservation :
    PurchaseHostReservationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper PurchaseHostReservationResult)
purchaseHostReservation req =
    let
        jsonBody =
            req |> Codec.encoder purchaseHostReservationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "PurchaseHostReservation"
                (AWS.Core.Decode.ResultDecoder
                    "PurchaseHostReservationResult"
                    (Codec.decoder purchaseHostReservationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
provisionByoipCidr :
    ProvisionByoipCidrRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ProvisionByoipCidrResult)
provisionByoipCidr req =
    let
        jsonBody =
            req |> Codec.encoder provisionByoipCidrRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ProvisionByoipCidr"
                (AWS.Core.Decode.ResultDecoder "ProvisionByoipCidrResult" (Codec.decoder provisionByoipCidrResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
moveAddressToVpc :
    MoveAddressToVpcRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper MoveAddressToVpcResult)
moveAddressToVpc req =
    let
        jsonBody =
            req |> Codec.encoder moveAddressToVpcRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "MoveAddressToVpc"
                (AWS.Core.Decode.ResultDecoder "MoveAddressToVpcResult" (Codec.decoder moveAddressToVpcResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
monitorInstances :
    MonitorInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper MonitorInstancesResult)
monitorInstances req =
    let
        jsonBody =
            req |> Codec.encoder monitorInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "MonitorInstances"
                (AWS.Core.Decode.ResultDecoder "MonitorInstancesResult" (Codec.decoder monitorInstancesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVpnConnection :
    ModifyVpnConnectionRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyVpnConnectionResult)
modifyVpnConnection req =
    let
        jsonBody =
            req |> Codec.encoder modifyVpnConnectionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyVpnConnection"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyVpnConnectionResult"
                    (Codec.decoder modifyVpnConnectionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVpcTenancy :
    ModifyVpcTenancyRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyVpcTenancyResult)
modifyVpcTenancy req =
    let
        jsonBody =
            req |> Codec.encoder modifyVpcTenancyRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyVpcTenancy"
                (AWS.Core.Decode.ResultDecoder "ModifyVpcTenancyResult" (Codec.decoder modifyVpcTenancyResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVpcPeeringConnectionOptions :
    ModifyVpcPeeringConnectionOptionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyVpcPeeringConnectionOptionsResult)
modifyVpcPeeringConnectionOptions req =
    let
        jsonBody =
            req |> Codec.encoder modifyVpcPeeringConnectionOptionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyVpcPeeringConnectionOptions"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyVpcPeeringConnectionOptionsResult"
                    (Codec.decoder modifyVpcPeeringConnectionOptionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVpcEndpointServicePermissions :
    ModifyVpcEndpointServicePermissionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyVpcEndpointServicePermissionsResult)
modifyVpcEndpointServicePermissions req =
    let
        jsonBody =
            req |> Codec.encoder modifyVpcEndpointServicePermissionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyVpcEndpointServicePermissions"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyVpcEndpointServicePermissionsResult"
                    (Codec.decoder modifyVpcEndpointServicePermissionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVpcEndpointServiceConfiguration :
    ModifyVpcEndpointServiceConfigurationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyVpcEndpointServiceConfigurationResult)
modifyVpcEndpointServiceConfiguration req =
    let
        jsonBody =
            req |> Codec.encoder modifyVpcEndpointServiceConfigurationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyVpcEndpointServiceConfiguration"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyVpcEndpointServiceConfigurationResult"
                    (Codec.decoder modifyVpcEndpointServiceConfigurationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVpcEndpointConnectionNotification :
    ModifyVpcEndpointConnectionNotificationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyVpcEndpointConnectionNotificationResult)
modifyVpcEndpointConnectionNotification req =
    let
        jsonBody =
            req |> Codec.encoder modifyVpcEndpointConnectionNotificationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyVpcEndpointConnectionNotification"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyVpcEndpointConnectionNotificationResult"
                    (Codec.decoder modifyVpcEndpointConnectionNotificationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVpcEndpoint :
    ModifyVpcEndpointRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyVpcEndpointResult)
modifyVpcEndpoint req =
    let
        jsonBody =
            req |> Codec.encoder modifyVpcEndpointRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyVpcEndpoint"
                (AWS.Core.Decode.ResultDecoder "ModifyVpcEndpointResult" (Codec.decoder modifyVpcEndpointResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVpcAttribute : ModifyVpcAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifyVpcAttribute req =
    let
        jsonBody =
            req |> Codec.encoder modifyVpcAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifyVpcAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVolumeAttribute : ModifyVolumeAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifyVolumeAttribute req =
    let
        jsonBody =
            req |> Codec.encoder modifyVolumeAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifyVolumeAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyVolume : ModifyVolumeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyVolumeResult)
modifyVolume req =
    let
        jsonBody =
            req |> Codec.encoder modifyVolumeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyVolume"
                (AWS.Core.Decode.ResultDecoder "ModifyVolumeResult" (Codec.decoder modifyVolumeResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyTransitGatewayVpcAttachment :
    ModifyTransitGatewayVpcAttachmentRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyTransitGatewayVpcAttachmentResult)
modifyTransitGatewayVpcAttachment req =
    let
        jsonBody =
            req |> Codec.encoder modifyTransitGatewayVpcAttachmentRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyTransitGatewayVpcAttachment"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyTransitGatewayVpcAttachmentResult"
                    (Codec.decoder modifyTransitGatewayVpcAttachmentResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyTrafficMirrorSession :
    ModifyTrafficMirrorSessionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyTrafficMirrorSessionResult)
modifyTrafficMirrorSession req =
    let
        jsonBody =
            req |> Codec.encoder modifyTrafficMirrorSessionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyTrafficMirrorSession"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyTrafficMirrorSessionResult"
                    (Codec.decoder modifyTrafficMirrorSessionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyTrafficMirrorFilterRule :
    ModifyTrafficMirrorFilterRuleRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyTrafficMirrorFilterRuleResult)
modifyTrafficMirrorFilterRule req =
    let
        jsonBody =
            req |> Codec.encoder modifyTrafficMirrorFilterRuleRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyTrafficMirrorFilterRule"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyTrafficMirrorFilterRuleResult"
                    (Codec.decoder modifyTrafficMirrorFilterRuleResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyTrafficMirrorFilterNetworkServices :
    ModifyTrafficMirrorFilterNetworkServicesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyTrafficMirrorFilterNetworkServicesResult)
modifyTrafficMirrorFilterNetworkServices req =
    let
        jsonBody =
            req |> Codec.encoder modifyTrafficMirrorFilterNetworkServicesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyTrafficMirrorFilterNetworkServices"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyTrafficMirrorFilterNetworkServicesResult"
                    (Codec.decoder modifyTrafficMirrorFilterNetworkServicesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifySubnetAttribute : ModifySubnetAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifySubnetAttribute req =
    let
        jsonBody =
            req |> Codec.encoder modifySubnetAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifySubnetAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifySpotFleetRequest :
    ModifySpotFleetRequestRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifySpotFleetRequestResponse)
modifySpotFleetRequest req =
    let
        jsonBody =
            req |> Codec.encoder modifySpotFleetRequestRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifySpotFleetRequest"
                (AWS.Core.Decode.ResultDecoder
                    "ModifySpotFleetRequestResponse"
                    (Codec.decoder modifySpotFleetRequestResponseCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifySnapshotAttribute : ModifySnapshotAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifySnapshotAttribute req =
    let
        jsonBody =
            req |> Codec.encoder modifySnapshotAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifySnapshotAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyReservedInstances :
    ModifyReservedInstancesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyReservedInstancesResult)
modifyReservedInstances req =
    let
        jsonBody =
            req |> Codec.encoder modifyReservedInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyReservedInstances"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyReservedInstancesResult"
                    (Codec.decoder modifyReservedInstancesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyNetworkInterfaceAttribute :
    ModifyNetworkInterfaceAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifyNetworkInterfaceAttribute req =
    let
        jsonBody =
            req |> Codec.encoder modifyNetworkInterfaceAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifyNetworkInterfaceAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyLaunchTemplate :
    ModifyLaunchTemplateRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyLaunchTemplateResult)
modifyLaunchTemplate req =
    let
        jsonBody =
            req |> Codec.encoder modifyLaunchTemplateRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyLaunchTemplate"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyLaunchTemplateResult"
                    (Codec.decoder modifyLaunchTemplateResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyInstancePlacement :
    ModifyInstancePlacementRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyInstancePlacementResult)
modifyInstancePlacement req =
    let
        jsonBody =
            req |> Codec.encoder modifyInstancePlacementRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyInstancePlacement"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyInstancePlacementResult"
                    (Codec.decoder modifyInstancePlacementResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyInstanceEventStartTime :
    ModifyInstanceEventStartTimeRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyInstanceEventStartTimeResult)
modifyInstanceEventStartTime req =
    let
        jsonBody =
            req |> Codec.encoder modifyInstanceEventStartTimeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyInstanceEventStartTime"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyInstanceEventStartTimeResult"
                    (Codec.decoder modifyInstanceEventStartTimeResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyInstanceCreditSpecification :
    ModifyInstanceCreditSpecificationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyInstanceCreditSpecificationResult)
modifyInstanceCreditSpecification req =
    let
        jsonBody =
            req |> Codec.encoder modifyInstanceCreditSpecificationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyInstanceCreditSpecification"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyInstanceCreditSpecificationResult"
                    (Codec.decoder modifyInstanceCreditSpecificationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyInstanceCapacityReservationAttributes :
    ModifyInstanceCapacityReservationAttributesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyInstanceCapacityReservationAttributesResult)
modifyInstanceCapacityReservationAttributes req =
    let
        jsonBody =
            req |> Codec.encoder modifyInstanceCapacityReservationAttributesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyInstanceCapacityReservationAttributes"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyInstanceCapacityReservationAttributesResult"
                    (Codec.decoder modifyInstanceCapacityReservationAttributesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyInstanceAttribute : ModifyInstanceAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifyInstanceAttribute req =
    let
        jsonBody =
            req |> Codec.encoder modifyInstanceAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifyInstanceAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyImageAttribute : ModifyImageAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifyImageAttribute req =
    let
        jsonBody =
            req |> Codec.encoder modifyImageAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifyImageAttribute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyIdentityIdFormat : ModifyIdentityIdFormatRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifyIdentityIdFormat req =
    let
        jsonBody =
            req |> Codec.encoder modifyIdentityIdFormatRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifyIdentityIdFormat" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyIdFormat : ModifyIdFormatRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
modifyIdFormat req =
    let
        jsonBody =
            req |> Codec.encoder modifyIdFormatRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "ModifyIdFormat" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyHosts : ModifyHostsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyHostsResult)
modifyHosts req =
    let
        jsonBody =
            req |> Codec.encoder modifyHostsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyHosts"
                (AWS.Core.Decode.ResultDecoder "ModifyHostsResult" (Codec.decoder modifyHostsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyFpgaImageAttribute :
    ModifyFpgaImageAttributeRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyFpgaImageAttributeResult)
modifyFpgaImageAttribute req =
    let
        jsonBody =
            req |> Codec.encoder modifyFpgaImageAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyFpgaImageAttribute"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyFpgaImageAttributeResult"
                    (Codec.decoder modifyFpgaImageAttributeResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyFleet : ModifyFleetRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyFleetResult)
modifyFleet req =
    let
        jsonBody =
            req |> Codec.encoder modifyFleetRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyFleet"
                (AWS.Core.Decode.ResultDecoder "ModifyFleetResult" (Codec.decoder modifyFleetResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyEbsDefaultKmsKeyId :
    ModifyEbsDefaultKmsKeyIdRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyEbsDefaultKmsKeyIdResult)
modifyEbsDefaultKmsKeyId req =
    let
        jsonBody =
            req |> Codec.encoder modifyEbsDefaultKmsKeyIdRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyEbsDefaultKmsKeyId"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyEbsDefaultKmsKeyIdResult"
                    (Codec.decoder modifyEbsDefaultKmsKeyIdResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyClientVpnEndpoint :
    ModifyClientVpnEndpointRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyClientVpnEndpointResult)
modifyClientVpnEndpoint req =
    let
        jsonBody =
            req |> Codec.encoder modifyClientVpnEndpointRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyClientVpnEndpoint"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyClientVpnEndpointResult"
                    (Codec.decoder modifyClientVpnEndpointResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
modifyCapacityReservation :
    ModifyCapacityReservationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ModifyCapacityReservationResult)
modifyCapacityReservation req =
    let
        jsonBody =
            req |> Codec.encoder modifyCapacityReservationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ModifyCapacityReservation"
                (AWS.Core.Decode.ResultDecoder
                    "ModifyCapacityReservationResult"
                    (Codec.decoder modifyCapacityReservationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
importVolume : ImportVolumeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ImportVolumeResult)
importVolume req =
    let
        jsonBody =
            req |> Codec.encoder importVolumeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ImportVolume"
                (AWS.Core.Decode.ResultDecoder "ImportVolumeResult" (Codec.decoder importVolumeResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
importSnapshot : ImportSnapshotRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ImportSnapshotResult)
importSnapshot req =
    let
        jsonBody =
            req |> Codec.encoder importSnapshotRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ImportSnapshot"
                (AWS.Core.Decode.ResultDecoder "ImportSnapshotResult" (Codec.decoder importSnapshotResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
importKeyPair : ImportKeyPairRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ImportKeyPairResult)
importKeyPair req =
    let
        jsonBody =
            req |> Codec.encoder importKeyPairRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ImportKeyPair"
                (AWS.Core.Decode.ResultDecoder "ImportKeyPairResult" (Codec.decoder importKeyPairResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
importInstance : ImportInstanceRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ImportInstanceResult)
importInstance req =
    let
        jsonBody =
            req |> Codec.encoder importInstanceRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ImportInstance"
                (AWS.Core.Decode.ResultDecoder "ImportInstanceResult" (Codec.decoder importInstanceResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
importImage : ImportImageRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ImportImageResult)
importImage req =
    let
        jsonBody =
            req |> Codec.encoder importImageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ImportImage"
                (AWS.Core.Decode.ResultDecoder "ImportImageResult" (Codec.decoder importImageResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
importClientVpnClientCertificateRevocationList :
    ImportClientVpnClientCertificateRevocationListRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ImportClientVpnClientCertificateRevocationListResult)
importClientVpnClientCertificateRevocationList req =
    let
        jsonBody =
            req |> Codec.encoder importClientVpnClientCertificateRevocationListRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ImportClientVpnClientCertificateRevocationList"
                (AWS.Core.Decode.ResultDecoder
                    "ImportClientVpnClientCertificateRevocationListResult"
                    (Codec.decoder importClientVpnClientCertificateRevocationListResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getTransitGatewayRouteTablePropagations :
    GetTransitGatewayRouteTablePropagationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetTransitGatewayRouteTablePropagationsResult)
getTransitGatewayRouteTablePropagations req =
    let
        jsonBody =
            req |> Codec.encoder getTransitGatewayRouteTablePropagationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetTransitGatewayRouteTablePropagations"
                (AWS.Core.Decode.ResultDecoder
                    "GetTransitGatewayRouteTablePropagationsResult"
                    (Codec.decoder getTransitGatewayRouteTablePropagationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getTransitGatewayRouteTableAssociations :
    GetTransitGatewayRouteTableAssociationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetTransitGatewayRouteTableAssociationsResult)
getTransitGatewayRouteTableAssociations req =
    let
        jsonBody =
            req |> Codec.encoder getTransitGatewayRouteTableAssociationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetTransitGatewayRouteTableAssociations"
                (AWS.Core.Decode.ResultDecoder
                    "GetTransitGatewayRouteTableAssociationsResult"
                    (Codec.decoder getTransitGatewayRouteTableAssociationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getTransitGatewayAttachmentPropagations :
    GetTransitGatewayAttachmentPropagationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetTransitGatewayAttachmentPropagationsResult)
getTransitGatewayAttachmentPropagations req =
    let
        jsonBody =
            req |> Codec.encoder getTransitGatewayAttachmentPropagationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetTransitGatewayAttachmentPropagations"
                (AWS.Core.Decode.ResultDecoder
                    "GetTransitGatewayAttachmentPropagationsResult"
                    (Codec.decoder getTransitGatewayAttachmentPropagationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getReservedInstancesExchangeQuote :
    GetReservedInstancesExchangeQuoteRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetReservedInstancesExchangeQuoteResult)
getReservedInstancesExchangeQuote req =
    let
        jsonBody =
            req |> Codec.encoder getReservedInstancesExchangeQuoteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetReservedInstancesExchangeQuote"
                (AWS.Core.Decode.ResultDecoder
                    "GetReservedInstancesExchangeQuoteResult"
                    (Codec.decoder getReservedInstancesExchangeQuoteResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getPasswordData :
    GetPasswordDataRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetPasswordDataResult)
getPasswordData req =
    let
        jsonBody =
            req |> Codec.encoder getPasswordDataRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetPasswordData"
                (AWS.Core.Decode.ResultDecoder "GetPasswordDataResult" (Codec.decoder getPasswordDataResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getLaunchTemplateData :
    GetLaunchTemplateDataRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetLaunchTemplateDataResult)
getLaunchTemplateData req =
    let
        jsonBody =
            req |> Codec.encoder getLaunchTemplateDataRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetLaunchTemplateData"
                (AWS.Core.Decode.ResultDecoder
                    "GetLaunchTemplateDataResult"
                    (Codec.decoder getLaunchTemplateDataResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getHostReservationPurchasePreview :
    GetHostReservationPurchasePreviewRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetHostReservationPurchasePreviewResult)
getHostReservationPurchasePreview req =
    let
        jsonBody =
            req |> Codec.encoder getHostReservationPurchasePreviewRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetHostReservationPurchasePreview"
                (AWS.Core.Decode.ResultDecoder
                    "GetHostReservationPurchasePreviewResult"
                    (Codec.decoder getHostReservationPurchasePreviewResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getEbsEncryptionByDefault :
    GetEbsEncryptionByDefaultRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetEbsEncryptionByDefaultResult)
getEbsEncryptionByDefault req =
    let
        jsonBody =
            req |> Codec.encoder getEbsEncryptionByDefaultRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetEbsEncryptionByDefault"
                (AWS.Core.Decode.ResultDecoder
                    "GetEbsEncryptionByDefaultResult"
                    (Codec.decoder getEbsEncryptionByDefaultResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getEbsDefaultKmsKeyId :
    GetEbsDefaultKmsKeyIdRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetEbsDefaultKmsKeyIdResult)
getEbsDefaultKmsKeyId req =
    let
        jsonBody =
            req |> Codec.encoder getEbsDefaultKmsKeyIdRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetEbsDefaultKmsKeyId"
                (AWS.Core.Decode.ResultDecoder
                    "GetEbsDefaultKmsKeyIdResult"
                    (Codec.decoder getEbsDefaultKmsKeyIdResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getConsoleScreenshot :
    GetConsoleScreenshotRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetConsoleScreenshotResult)
getConsoleScreenshot req =
    let
        jsonBody =
            req |> Codec.encoder getConsoleScreenshotRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetConsoleScreenshot"
                (AWS.Core.Decode.ResultDecoder
                    "GetConsoleScreenshotResult"
                    (Codec.decoder getConsoleScreenshotResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getConsoleOutput :
    GetConsoleOutputRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetConsoleOutputResult)
getConsoleOutput req =
    let
        jsonBody =
            req |> Codec.encoder getConsoleOutputRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetConsoleOutput"
                (AWS.Core.Decode.ResultDecoder "GetConsoleOutputResult" (Codec.decoder getConsoleOutputResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
getCapacityReservationUsage :
    GetCapacityReservationUsageRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper GetCapacityReservationUsageResult)
getCapacityReservationUsage req =
    let
        jsonBody =
            req |> Codec.encoder getCapacityReservationUsageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "GetCapacityReservationUsage"
                (AWS.Core.Decode.ResultDecoder
                    "GetCapacityReservationUsageResult"
                    (Codec.decoder getCapacityReservationUsageResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
exportTransitGatewayRoutes :
    ExportTransitGatewayRoutesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ExportTransitGatewayRoutesResult)
exportTransitGatewayRoutes req =
    let
        jsonBody =
            req |> Codec.encoder exportTransitGatewayRoutesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ExportTransitGatewayRoutes"
                (AWS.Core.Decode.ResultDecoder
                    "ExportTransitGatewayRoutesResult"
                    (Codec.decoder exportTransitGatewayRoutesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
exportClientVpnClientConfiguration :
    ExportClientVpnClientConfigurationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ExportClientVpnClientConfigurationResult)
exportClientVpnClientConfiguration req =
    let
        jsonBody =
            req |> Codec.encoder exportClientVpnClientConfigurationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ExportClientVpnClientConfiguration"
                (AWS.Core.Decode.ResultDecoder
                    "ExportClientVpnClientConfigurationResult"
                    (Codec.decoder exportClientVpnClientConfigurationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
exportClientVpnClientCertificateRevocationList :
    ExportClientVpnClientCertificateRevocationListRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ExportClientVpnClientCertificateRevocationListResult)
exportClientVpnClientCertificateRevocationList req =
    let
        jsonBody =
            req |> Codec.encoder exportClientVpnClientCertificateRevocationListRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ExportClientVpnClientCertificateRevocationList"
                (AWS.Core.Decode.ResultDecoder
                    "ExportClientVpnClientCertificateRevocationListResult"
                    (Codec.decoder exportClientVpnClientCertificateRevocationListResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
enableVpcClassicLinkDnsSupport :
    EnableVpcClassicLinkDnsSupportRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper EnableVpcClassicLinkDnsSupportResult)
enableVpcClassicLinkDnsSupport req =
    let
        jsonBody =
            req |> Codec.encoder enableVpcClassicLinkDnsSupportRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "EnableVpcClassicLinkDnsSupport"
                (AWS.Core.Decode.ResultDecoder
                    "EnableVpcClassicLinkDnsSupportResult"
                    (Codec.decoder enableVpcClassicLinkDnsSupportResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
enableVpcClassicLink :
    EnableVpcClassicLinkRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper EnableVpcClassicLinkResult)
enableVpcClassicLink req =
    let
        jsonBody =
            req |> Codec.encoder enableVpcClassicLinkRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "EnableVpcClassicLink"
                (AWS.Core.Decode.ResultDecoder
                    "EnableVpcClassicLinkResult"
                    (Codec.decoder enableVpcClassicLinkResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
enableVolumeIo : EnableVolumeIorequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
enableVolumeIo req =
    let
        jsonBody =
            req |> Codec.encoder enableVolumeIorequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "EnableVolumeIo" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
enableVgwRoutePropagation :
    EnableVgwRoutePropagationRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
enableVgwRoutePropagation req =
    let
        jsonBody =
            req |> Codec.encoder enableVgwRoutePropagationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "EnableVgwRoutePropagation" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
enableTransitGatewayRouteTablePropagation :
    EnableTransitGatewayRouteTablePropagationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper EnableTransitGatewayRouteTablePropagationResult)
enableTransitGatewayRouteTablePropagation req =
    let
        jsonBody =
            req |> Codec.encoder enableTransitGatewayRouteTablePropagationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "EnableTransitGatewayRouteTablePropagation"
                (AWS.Core.Decode.ResultDecoder
                    "EnableTransitGatewayRouteTablePropagationResult"
                    (Codec.decoder enableTransitGatewayRouteTablePropagationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
enableEbsEncryptionByDefault :
    EnableEbsEncryptionByDefaultRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper EnableEbsEncryptionByDefaultResult)
enableEbsEncryptionByDefault req =
    let
        jsonBody =
            req |> Codec.encoder enableEbsEncryptionByDefaultRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "EnableEbsEncryptionByDefault"
                (AWS.Core.Decode.ResultDecoder
                    "EnableEbsEncryptionByDefaultResult"
                    (Codec.decoder enableEbsEncryptionByDefaultResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disassociateVpcCidrBlock :
    DisassociateVpcCidrBlockRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisassociateVpcCidrBlockResult)
disassociateVpcCidrBlock req =
    let
        jsonBody =
            req |> Codec.encoder disassociateVpcCidrBlockRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisassociateVpcCidrBlock"
                (AWS.Core.Decode.ResultDecoder
                    "DisassociateVpcCidrBlockResult"
                    (Codec.decoder disassociateVpcCidrBlockResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disassociateTransitGatewayRouteTable :
    DisassociateTransitGatewayRouteTableRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisassociateTransitGatewayRouteTableResult)
disassociateTransitGatewayRouteTable req =
    let
        jsonBody =
            req |> Codec.encoder disassociateTransitGatewayRouteTableRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisassociateTransitGatewayRouteTable"
                (AWS.Core.Decode.ResultDecoder
                    "DisassociateTransitGatewayRouteTableResult"
                    (Codec.decoder disassociateTransitGatewayRouteTableResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disassociateSubnetCidrBlock :
    DisassociateSubnetCidrBlockRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisassociateSubnetCidrBlockResult)
disassociateSubnetCidrBlock req =
    let
        jsonBody =
            req |> Codec.encoder disassociateSubnetCidrBlockRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisassociateSubnetCidrBlock"
                (AWS.Core.Decode.ResultDecoder
                    "DisassociateSubnetCidrBlockResult"
                    (Codec.decoder disassociateSubnetCidrBlockResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disassociateRouteTable : DisassociateRouteTableRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
disassociateRouteTable req =
    let
        jsonBody =
            req |> Codec.encoder disassociateRouteTableRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DisassociateRouteTable" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disassociateIamInstanceProfile :
    DisassociateIamInstanceProfileRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisassociateIamInstanceProfileResult)
disassociateIamInstanceProfile req =
    let
        jsonBody =
            req |> Codec.encoder disassociateIamInstanceProfileRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisassociateIamInstanceProfile"
                (AWS.Core.Decode.ResultDecoder
                    "DisassociateIamInstanceProfileResult"
                    (Codec.decoder disassociateIamInstanceProfileResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disassociateClientVpnTargetNetwork :
    DisassociateClientVpnTargetNetworkRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisassociateClientVpnTargetNetworkResult)
disassociateClientVpnTargetNetwork req =
    let
        jsonBody =
            req |> Codec.encoder disassociateClientVpnTargetNetworkRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisassociateClientVpnTargetNetwork"
                (AWS.Core.Decode.ResultDecoder
                    "DisassociateClientVpnTargetNetworkResult"
                    (Codec.decoder disassociateClientVpnTargetNetworkResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disassociateAddress : DisassociateAddressRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
disassociateAddress req =
    let
        jsonBody =
            req |> Codec.encoder disassociateAddressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DisassociateAddress" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disableVpcClassicLinkDnsSupport :
    DisableVpcClassicLinkDnsSupportRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisableVpcClassicLinkDnsSupportResult)
disableVpcClassicLinkDnsSupport req =
    let
        jsonBody =
            req |> Codec.encoder disableVpcClassicLinkDnsSupportRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisableVpcClassicLinkDnsSupport"
                (AWS.Core.Decode.ResultDecoder
                    "DisableVpcClassicLinkDnsSupportResult"
                    (Codec.decoder disableVpcClassicLinkDnsSupportResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disableVpcClassicLink :
    DisableVpcClassicLinkRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisableVpcClassicLinkResult)
disableVpcClassicLink req =
    let
        jsonBody =
            req |> Codec.encoder disableVpcClassicLinkRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisableVpcClassicLink"
                (AWS.Core.Decode.ResultDecoder
                    "DisableVpcClassicLinkResult"
                    (Codec.decoder disableVpcClassicLinkResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disableVgwRoutePropagation :
    DisableVgwRoutePropagationRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
disableVgwRoutePropagation req =
    let
        jsonBody =
            req |> Codec.encoder disableVgwRoutePropagationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DisableVgwRoutePropagation" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disableTransitGatewayRouteTablePropagation :
    DisableTransitGatewayRouteTablePropagationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisableTransitGatewayRouteTablePropagationResult)
disableTransitGatewayRouteTablePropagation req =
    let
        jsonBody =
            req |> Codec.encoder disableTransitGatewayRouteTablePropagationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisableTransitGatewayRouteTablePropagation"
                (AWS.Core.Decode.ResultDecoder
                    "DisableTransitGatewayRouteTablePropagationResult"
                    (Codec.decoder disableTransitGatewayRouteTablePropagationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
disableEbsEncryptionByDefault :
    DisableEbsEncryptionByDefaultRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DisableEbsEncryptionByDefaultResult)
disableEbsEncryptionByDefault req =
    let
        jsonBody =
            req |> Codec.encoder disableEbsEncryptionByDefaultRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DisableEbsEncryptionByDefault"
                (AWS.Core.Decode.ResultDecoder
                    "DisableEbsEncryptionByDefaultResult"
                    (Codec.decoder disableEbsEncryptionByDefaultResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
detachVpnGateway : DetachVpnGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
detachVpnGateway req =
    let
        jsonBody =
            req |> Codec.encoder detachVpnGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DetachVpnGateway" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
detachVolume : DetachVolumeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper VolumeAttachment)
detachVolume req =
    let
        jsonBody =
            req |> Codec.encoder detachVolumeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DetachVolume"
                (AWS.Core.Decode.ResultDecoder "VolumeAttachment" (Codec.decoder volumeAttachmentCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
detachNetworkInterface : DetachNetworkInterfaceRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
detachNetworkInterface req =
    let
        jsonBody =
            req |> Codec.encoder detachNetworkInterfaceRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DetachNetworkInterface" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
detachInternetGateway : DetachInternetGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
detachInternetGateway req =
    let
        jsonBody =
            req |> Codec.encoder detachInternetGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DetachInternetGateway" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
detachClassicLinkVpc :
    DetachClassicLinkVpcRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DetachClassicLinkVpcResult)
detachClassicLinkVpc req =
    let
        jsonBody =
            req |> Codec.encoder detachClassicLinkVpcRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DetachClassicLinkVpc"
                (AWS.Core.Decode.ResultDecoder
                    "DetachClassicLinkVpcResult"
                    (Codec.decoder detachClassicLinkVpcResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpnGateways :
    DescribeVpnGatewaysRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpnGatewaysResult)
describeVpnGateways req =
    let
        jsonBody =
            req |> Codec.encoder describeVpnGatewaysRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpnGateways"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpnGatewaysResult"
                    (Codec.decoder describeVpnGatewaysResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpnConnections :
    DescribeVpnConnectionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpnConnectionsResult)
describeVpnConnections req =
    let
        jsonBody =
            req |> Codec.encoder describeVpnConnectionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpnConnections"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpnConnectionsResult"
                    (Codec.decoder describeVpnConnectionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcs : DescribeVpcsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcsResult)
describeVpcs req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcs"
                (AWS.Core.Decode.ResultDecoder "DescribeVpcsResult" (Codec.decoder describeVpcsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcPeeringConnections :
    DescribeVpcPeeringConnectionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcPeeringConnectionsResult)
describeVpcPeeringConnections req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcPeeringConnectionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcPeeringConnections"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcPeeringConnectionsResult"
                    (Codec.decoder describeVpcPeeringConnectionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcEndpoints :
    DescribeVpcEndpointsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcEndpointsResult)
describeVpcEndpoints req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcEndpointsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcEndpoints"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcEndpointsResult"
                    (Codec.decoder describeVpcEndpointsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcEndpointServices :
    DescribeVpcEndpointServicesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcEndpointServicesResult)
describeVpcEndpointServices req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcEndpointServicesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcEndpointServices"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcEndpointServicesResult"
                    (Codec.decoder describeVpcEndpointServicesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcEndpointServicePermissions :
    DescribeVpcEndpointServicePermissionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcEndpointServicePermissionsResult)
describeVpcEndpointServicePermissions req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcEndpointServicePermissionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcEndpointServicePermissions"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcEndpointServicePermissionsResult"
                    (Codec.decoder describeVpcEndpointServicePermissionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcEndpointServiceConfigurations :
    DescribeVpcEndpointServiceConfigurationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcEndpointServiceConfigurationsResult)
describeVpcEndpointServiceConfigurations req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcEndpointServiceConfigurationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcEndpointServiceConfigurations"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcEndpointServiceConfigurationsResult"
                    (Codec.decoder describeVpcEndpointServiceConfigurationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcEndpointConnections :
    DescribeVpcEndpointConnectionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcEndpointConnectionsResult)
describeVpcEndpointConnections req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcEndpointConnectionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcEndpointConnections"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcEndpointConnectionsResult"
                    (Codec.decoder describeVpcEndpointConnectionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcEndpointConnectionNotifications :
    DescribeVpcEndpointConnectionNotificationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcEndpointConnectionNotificationsResult)
describeVpcEndpointConnectionNotifications req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcEndpointConnectionNotificationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcEndpointConnectionNotifications"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcEndpointConnectionNotificationsResult"
                    (Codec.decoder describeVpcEndpointConnectionNotificationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcClassicLinkDnsSupport :
    DescribeVpcClassicLinkDnsSupportRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcClassicLinkDnsSupportResult)
describeVpcClassicLinkDnsSupport req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcClassicLinkDnsSupportRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcClassicLinkDnsSupport"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcClassicLinkDnsSupportResult"
                    (Codec.decoder describeVpcClassicLinkDnsSupportResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcClassicLink :
    DescribeVpcClassicLinkRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcClassicLinkResult)
describeVpcClassicLink req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcClassicLinkRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcClassicLink"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcClassicLinkResult"
                    (Codec.decoder describeVpcClassicLinkResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVpcAttribute :
    DescribeVpcAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVpcAttributeResult)
describeVpcAttribute req =
    let
        jsonBody =
            req |> Codec.encoder describeVpcAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVpcAttribute"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVpcAttributeResult"
                    (Codec.decoder describeVpcAttributeResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVolumesModifications :
    DescribeVolumesModificationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVolumesModificationsResult)
describeVolumesModifications req =
    let
        jsonBody =
            req |> Codec.encoder describeVolumesModificationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVolumesModifications"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVolumesModificationsResult"
                    (Codec.decoder describeVolumesModificationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVolumes :
    DescribeVolumesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVolumesResult)
describeVolumes req =
    let
        jsonBody =
            req |> Codec.encoder describeVolumesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVolumes"
                (AWS.Core.Decode.ResultDecoder "DescribeVolumesResult" (Codec.decoder describeVolumesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVolumeStatus :
    DescribeVolumeStatusRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVolumeStatusResult)
describeVolumeStatus req =
    let
        jsonBody =
            req |> Codec.encoder describeVolumeStatusRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVolumeStatus"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVolumeStatusResult"
                    (Codec.decoder describeVolumeStatusResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeVolumeAttribute :
    DescribeVolumeAttributeRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeVolumeAttributeResult)
describeVolumeAttribute req =
    let
        jsonBody =
            req |> Codec.encoder describeVolumeAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeVolumeAttribute"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeVolumeAttributeResult"
                    (Codec.decoder describeVolumeAttributeResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeTransitGateways :
    DescribeTransitGatewaysRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeTransitGatewaysResult)
describeTransitGateways req =
    let
        jsonBody =
            req |> Codec.encoder describeTransitGatewaysRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeTransitGateways"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeTransitGatewaysResult"
                    (Codec.decoder describeTransitGatewaysResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeTransitGatewayVpcAttachments :
    DescribeTransitGatewayVpcAttachmentsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeTransitGatewayVpcAttachmentsResult)
describeTransitGatewayVpcAttachments req =
    let
        jsonBody =
            req |> Codec.encoder describeTransitGatewayVpcAttachmentsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeTransitGatewayVpcAttachments"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeTransitGatewayVpcAttachmentsResult"
                    (Codec.decoder describeTransitGatewayVpcAttachmentsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeTransitGatewayRouteTables :
    DescribeTransitGatewayRouteTablesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeTransitGatewayRouteTablesResult)
describeTransitGatewayRouteTables req =
    let
        jsonBody =
            req |> Codec.encoder describeTransitGatewayRouteTablesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeTransitGatewayRouteTables"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeTransitGatewayRouteTablesResult"
                    (Codec.decoder describeTransitGatewayRouteTablesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeTransitGatewayAttachments :
    DescribeTransitGatewayAttachmentsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeTransitGatewayAttachmentsResult)
describeTransitGatewayAttachments req =
    let
        jsonBody =
            req |> Codec.encoder describeTransitGatewayAttachmentsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeTransitGatewayAttachments"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeTransitGatewayAttachmentsResult"
                    (Codec.decoder describeTransitGatewayAttachmentsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeTrafficMirrorTargets :
    DescribeTrafficMirrorTargetsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeTrafficMirrorTargetsResult)
describeTrafficMirrorTargets req =
    let
        jsonBody =
            req |> Codec.encoder describeTrafficMirrorTargetsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeTrafficMirrorTargets"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeTrafficMirrorTargetsResult"
                    (Codec.decoder describeTrafficMirrorTargetsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeTrafficMirrorSessions :
    DescribeTrafficMirrorSessionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeTrafficMirrorSessionsResult)
describeTrafficMirrorSessions req =
    let
        jsonBody =
            req |> Codec.encoder describeTrafficMirrorSessionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeTrafficMirrorSessions"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeTrafficMirrorSessionsResult"
                    (Codec.decoder describeTrafficMirrorSessionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeTrafficMirrorFilters :
    DescribeTrafficMirrorFiltersRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeTrafficMirrorFiltersResult)
describeTrafficMirrorFilters req =
    let
        jsonBody =
            req |> Codec.encoder describeTrafficMirrorFiltersRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeTrafficMirrorFilters"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeTrafficMirrorFiltersResult"
                    (Codec.decoder describeTrafficMirrorFiltersResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeTags : DescribeTagsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeTagsResult)
describeTags req =
    let
        jsonBody =
            req |> Codec.encoder describeTagsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeTags"
                (AWS.Core.Decode.ResultDecoder "DescribeTagsResult" (Codec.decoder describeTagsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSubnets :
    DescribeSubnetsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSubnetsResult)
describeSubnets req =
    let
        jsonBody =
            req |> Codec.encoder describeSubnetsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSubnets"
                (AWS.Core.Decode.ResultDecoder "DescribeSubnetsResult" (Codec.decoder describeSubnetsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeStaleSecurityGroups :
    DescribeStaleSecurityGroupsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeStaleSecurityGroupsResult)
describeStaleSecurityGroups req =
    let
        jsonBody =
            req |> Codec.encoder describeStaleSecurityGroupsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeStaleSecurityGroups"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeStaleSecurityGroupsResult"
                    (Codec.decoder describeStaleSecurityGroupsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSpotPriceHistory :
    DescribeSpotPriceHistoryRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSpotPriceHistoryResult)
describeSpotPriceHistory req =
    let
        jsonBody =
            req |> Codec.encoder describeSpotPriceHistoryRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSpotPriceHistory"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSpotPriceHistoryResult"
                    (Codec.decoder describeSpotPriceHistoryResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSpotInstanceRequests :
    DescribeSpotInstanceRequestsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSpotInstanceRequestsResult)
describeSpotInstanceRequests req =
    let
        jsonBody =
            req |> Codec.encoder describeSpotInstanceRequestsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSpotInstanceRequests"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSpotInstanceRequestsResult"
                    (Codec.decoder describeSpotInstanceRequestsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSpotFleetRequests :
    DescribeSpotFleetRequestsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSpotFleetRequestsResponse)
describeSpotFleetRequests req =
    let
        jsonBody =
            req |> Codec.encoder describeSpotFleetRequestsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSpotFleetRequests"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSpotFleetRequestsResponse"
                    (Codec.decoder describeSpotFleetRequestsResponseCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSpotFleetRequestHistory :
    DescribeSpotFleetRequestHistoryRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSpotFleetRequestHistoryResponse)
describeSpotFleetRequestHistory req =
    let
        jsonBody =
            req |> Codec.encoder describeSpotFleetRequestHistoryRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSpotFleetRequestHistory"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSpotFleetRequestHistoryResponse"
                    (Codec.decoder describeSpotFleetRequestHistoryResponseCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSpotFleetInstances :
    DescribeSpotFleetInstancesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSpotFleetInstancesResponse)
describeSpotFleetInstances req =
    let
        jsonBody =
            req |> Codec.encoder describeSpotFleetInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSpotFleetInstances"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSpotFleetInstancesResponse"
                    (Codec.decoder describeSpotFleetInstancesResponseCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSpotDatafeedSubscription :
    DescribeSpotDatafeedSubscriptionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSpotDatafeedSubscriptionResult)
describeSpotDatafeedSubscription req =
    let
        jsonBody =
            req |> Codec.encoder describeSpotDatafeedSubscriptionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSpotDatafeedSubscription"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSpotDatafeedSubscriptionResult"
                    (Codec.decoder describeSpotDatafeedSubscriptionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSnapshots :
    DescribeSnapshotsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSnapshotsResult)
describeSnapshots req =
    let
        jsonBody =
            req |> Codec.encoder describeSnapshotsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSnapshots"
                (AWS.Core.Decode.ResultDecoder "DescribeSnapshotsResult" (Codec.decoder describeSnapshotsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSnapshotAttribute :
    DescribeSnapshotAttributeRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSnapshotAttributeResult)
describeSnapshotAttribute req =
    let
        jsonBody =
            req |> Codec.encoder describeSnapshotAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSnapshotAttribute"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSnapshotAttributeResult"
                    (Codec.decoder describeSnapshotAttributeResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSecurityGroups :
    DescribeSecurityGroupsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSecurityGroupsResult)
describeSecurityGroups req =
    let
        jsonBody =
            req |> Codec.encoder describeSecurityGroupsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSecurityGroups"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSecurityGroupsResult"
                    (Codec.decoder describeSecurityGroupsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeSecurityGroupReferences :
    DescribeSecurityGroupReferencesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeSecurityGroupReferencesResult)
describeSecurityGroupReferences req =
    let
        jsonBody =
            req |> Codec.encoder describeSecurityGroupReferencesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeSecurityGroupReferences"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeSecurityGroupReferencesResult"
                    (Codec.decoder describeSecurityGroupReferencesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeScheduledInstances :
    DescribeScheduledInstancesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeScheduledInstancesResult)
describeScheduledInstances req =
    let
        jsonBody =
            req |> Codec.encoder describeScheduledInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeScheduledInstances"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeScheduledInstancesResult"
                    (Codec.decoder describeScheduledInstancesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeScheduledInstanceAvailability :
    DescribeScheduledInstanceAvailabilityRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeScheduledInstanceAvailabilityResult)
describeScheduledInstanceAvailability req =
    let
        jsonBody =
            req |> Codec.encoder describeScheduledInstanceAvailabilityRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeScheduledInstanceAvailability"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeScheduledInstanceAvailabilityResult"
                    (Codec.decoder describeScheduledInstanceAvailabilityResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeRouteTables :
    DescribeRouteTablesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeRouteTablesResult)
describeRouteTables req =
    let
        jsonBody =
            req |> Codec.encoder describeRouteTablesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeRouteTables"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeRouteTablesResult"
                    (Codec.decoder describeRouteTablesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeReservedInstancesOfferings :
    DescribeReservedInstancesOfferingsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeReservedInstancesOfferingsResult)
describeReservedInstancesOfferings req =
    let
        jsonBody =
            req |> Codec.encoder describeReservedInstancesOfferingsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeReservedInstancesOfferings"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeReservedInstancesOfferingsResult"
                    (Codec.decoder describeReservedInstancesOfferingsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeReservedInstancesModifications :
    DescribeReservedInstancesModificationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeReservedInstancesModificationsResult)
describeReservedInstancesModifications req =
    let
        jsonBody =
            req |> Codec.encoder describeReservedInstancesModificationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeReservedInstancesModifications"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeReservedInstancesModificationsResult"
                    (Codec.decoder describeReservedInstancesModificationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeReservedInstancesListings :
    DescribeReservedInstancesListingsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeReservedInstancesListingsResult)
describeReservedInstancesListings req =
    let
        jsonBody =
            req |> Codec.encoder describeReservedInstancesListingsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeReservedInstancesListings"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeReservedInstancesListingsResult"
                    (Codec.decoder describeReservedInstancesListingsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeReservedInstances :
    DescribeReservedInstancesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeReservedInstancesResult)
describeReservedInstances req =
    let
        jsonBody =
            req |> Codec.encoder describeReservedInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeReservedInstances"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeReservedInstancesResult"
                    (Codec.decoder describeReservedInstancesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeRegions :
    DescribeRegionsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeRegionsResult)
describeRegions req =
    let
        jsonBody =
            req |> Codec.encoder describeRegionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeRegions"
                (AWS.Core.Decode.ResultDecoder "DescribeRegionsResult" (Codec.decoder describeRegionsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describePublicIpv4Pools :
    DescribePublicIpv4PoolsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribePublicIpv4PoolsResult)
describePublicIpv4Pools req =
    let
        jsonBody =
            req |> Codec.encoder describePublicIpv4PoolsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribePublicIpv4Pools"
                (AWS.Core.Decode.ResultDecoder
                    "DescribePublicIpv4PoolsResult"
                    (Codec.decoder describePublicIpv4PoolsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describePrincipalIdFormat :
    DescribePrincipalIdFormatRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribePrincipalIdFormatResult)
describePrincipalIdFormat req =
    let
        jsonBody =
            req |> Codec.encoder describePrincipalIdFormatRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribePrincipalIdFormat"
                (AWS.Core.Decode.ResultDecoder
                    "DescribePrincipalIdFormatResult"
                    (Codec.decoder describePrincipalIdFormatResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describePrefixLists :
    DescribePrefixListsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribePrefixListsResult)
describePrefixLists req =
    let
        jsonBody =
            req |> Codec.encoder describePrefixListsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribePrefixLists"
                (AWS.Core.Decode.ResultDecoder
                    "DescribePrefixListsResult"
                    (Codec.decoder describePrefixListsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describePlacementGroups :
    DescribePlacementGroupsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribePlacementGroupsResult)
describePlacementGroups req =
    let
        jsonBody =
            req |> Codec.encoder describePlacementGroupsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribePlacementGroups"
                (AWS.Core.Decode.ResultDecoder
                    "DescribePlacementGroupsResult"
                    (Codec.decoder describePlacementGroupsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeNetworkInterfaces :
    DescribeNetworkInterfacesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeNetworkInterfacesResult)
describeNetworkInterfaces req =
    let
        jsonBody =
            req |> Codec.encoder describeNetworkInterfacesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeNetworkInterfaces"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeNetworkInterfacesResult"
                    (Codec.decoder describeNetworkInterfacesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeNetworkInterfacePermissions :
    DescribeNetworkInterfacePermissionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeNetworkInterfacePermissionsResult)
describeNetworkInterfacePermissions req =
    let
        jsonBody =
            req |> Codec.encoder describeNetworkInterfacePermissionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeNetworkInterfacePermissions"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeNetworkInterfacePermissionsResult"
                    (Codec.decoder describeNetworkInterfacePermissionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeNetworkInterfaceAttribute :
    DescribeNetworkInterfaceAttributeRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeNetworkInterfaceAttributeResult)
describeNetworkInterfaceAttribute req =
    let
        jsonBody =
            req |> Codec.encoder describeNetworkInterfaceAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeNetworkInterfaceAttribute"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeNetworkInterfaceAttributeResult"
                    (Codec.decoder describeNetworkInterfaceAttributeResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeNetworkAcls :
    DescribeNetworkAclsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeNetworkAclsResult)
describeNetworkAcls req =
    let
        jsonBody =
            req |> Codec.encoder describeNetworkAclsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeNetworkAcls"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeNetworkAclsResult"
                    (Codec.decoder describeNetworkAclsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeNatGateways :
    DescribeNatGatewaysRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeNatGatewaysResult)
describeNatGateways req =
    let
        jsonBody =
            req |> Codec.encoder describeNatGatewaysRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeNatGateways"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeNatGatewaysResult"
                    (Codec.decoder describeNatGatewaysResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeMovingAddresses :
    DescribeMovingAddressesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeMovingAddressesResult)
describeMovingAddresses req =
    let
        jsonBody =
            req |> Codec.encoder describeMovingAddressesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeMovingAddresses"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeMovingAddressesResult"
                    (Codec.decoder describeMovingAddressesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeLaunchTemplates :
    DescribeLaunchTemplatesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeLaunchTemplatesResult)
describeLaunchTemplates req =
    let
        jsonBody =
            req |> Codec.encoder describeLaunchTemplatesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeLaunchTemplates"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeLaunchTemplatesResult"
                    (Codec.decoder describeLaunchTemplatesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeLaunchTemplateVersions :
    DescribeLaunchTemplateVersionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeLaunchTemplateVersionsResult)
describeLaunchTemplateVersions req =
    let
        jsonBody =
            req |> Codec.encoder describeLaunchTemplateVersionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeLaunchTemplateVersions"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeLaunchTemplateVersionsResult"
                    (Codec.decoder describeLaunchTemplateVersionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeKeyPairs :
    DescribeKeyPairsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeKeyPairsResult)
describeKeyPairs req =
    let
        jsonBody =
            req |> Codec.encoder describeKeyPairsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeKeyPairs"
                (AWS.Core.Decode.ResultDecoder "DescribeKeyPairsResult" (Codec.decoder describeKeyPairsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeInternetGateways :
    DescribeInternetGatewaysRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeInternetGatewaysResult)
describeInternetGateways req =
    let
        jsonBody =
            req |> Codec.encoder describeInternetGatewaysRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeInternetGateways"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeInternetGatewaysResult"
                    (Codec.decoder describeInternetGatewaysResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeInstances :
    DescribeInstancesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeInstancesResult)
describeInstances req =
    let
        jsonBody =
            req |> Codec.encoder describeInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeInstances"
                (AWS.Core.Decode.ResultDecoder "DescribeInstancesResult" (Codec.decoder describeInstancesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeInstanceStatus :
    DescribeInstanceStatusRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeInstanceStatusResult)
describeInstanceStatus req =
    let
        jsonBody =
            req |> Codec.encoder describeInstanceStatusRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeInstanceStatus"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeInstanceStatusResult"
                    (Codec.decoder describeInstanceStatusResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeInstanceCreditSpecifications :
    DescribeInstanceCreditSpecificationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeInstanceCreditSpecificationsResult)
describeInstanceCreditSpecifications req =
    let
        jsonBody =
            req |> Codec.encoder describeInstanceCreditSpecificationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeInstanceCreditSpecifications"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeInstanceCreditSpecificationsResult"
                    (Codec.decoder describeInstanceCreditSpecificationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeInstanceAttribute :
    DescribeInstanceAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper InstanceAttribute)
describeInstanceAttribute req =
    let
        jsonBody =
            req |> Codec.encoder describeInstanceAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeInstanceAttribute"
                (AWS.Core.Decode.ResultDecoder "InstanceAttribute" (Codec.decoder instanceAttributeCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeImportSnapshotTasks :
    DescribeImportSnapshotTasksRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeImportSnapshotTasksResult)
describeImportSnapshotTasks req =
    let
        jsonBody =
            req |> Codec.encoder describeImportSnapshotTasksRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeImportSnapshotTasks"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeImportSnapshotTasksResult"
                    (Codec.decoder describeImportSnapshotTasksResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeImportImageTasks :
    DescribeImportImageTasksRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeImportImageTasksResult)
describeImportImageTasks req =
    let
        jsonBody =
            req |> Codec.encoder describeImportImageTasksRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeImportImageTasks"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeImportImageTasksResult"
                    (Codec.decoder describeImportImageTasksResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeImages : DescribeImagesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeImagesResult)
describeImages req =
    let
        jsonBody =
            req |> Codec.encoder describeImagesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeImages"
                (AWS.Core.Decode.ResultDecoder "DescribeImagesResult" (Codec.decoder describeImagesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeImageAttribute :
    DescribeImageAttributeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ImageAttribute)
describeImageAttribute req =
    let
        jsonBody =
            req |> Codec.encoder describeImageAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeImageAttribute"
                (AWS.Core.Decode.ResultDecoder "ImageAttribute" (Codec.decoder imageAttributeCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeIdentityIdFormat :
    DescribeIdentityIdFormatRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeIdentityIdFormatResult)
describeIdentityIdFormat req =
    let
        jsonBody =
            req |> Codec.encoder describeIdentityIdFormatRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeIdentityIdFormat"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeIdentityIdFormatResult"
                    (Codec.decoder describeIdentityIdFormatResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeIdFormat :
    DescribeIdFormatRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeIdFormatResult)
describeIdFormat req =
    let
        jsonBody =
            req |> Codec.encoder describeIdFormatRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeIdFormat"
                (AWS.Core.Decode.ResultDecoder "DescribeIdFormatResult" (Codec.decoder describeIdFormatResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeIamInstanceProfileAssociations :
    DescribeIamInstanceProfileAssociationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeIamInstanceProfileAssociationsResult)
describeIamInstanceProfileAssociations req =
    let
        jsonBody =
            req |> Codec.encoder describeIamInstanceProfileAssociationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeIamInstanceProfileAssociations"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeIamInstanceProfileAssociationsResult"
                    (Codec.decoder describeIamInstanceProfileAssociationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeHosts : DescribeHostsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeHostsResult)
describeHosts req =
    let
        jsonBody =
            req |> Codec.encoder describeHostsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeHosts"
                (AWS.Core.Decode.ResultDecoder "DescribeHostsResult" (Codec.decoder describeHostsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeHostReservations :
    DescribeHostReservationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeHostReservationsResult)
describeHostReservations req =
    let
        jsonBody =
            req |> Codec.encoder describeHostReservationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeHostReservations"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeHostReservationsResult"
                    (Codec.decoder describeHostReservationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeHostReservationOfferings :
    DescribeHostReservationOfferingsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeHostReservationOfferingsResult)
describeHostReservationOfferings req =
    let
        jsonBody =
            req |> Codec.encoder describeHostReservationOfferingsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeHostReservationOfferings"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeHostReservationOfferingsResult"
                    (Codec.decoder describeHostReservationOfferingsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeFpgaImages :
    DescribeFpgaImagesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeFpgaImagesResult)
describeFpgaImages req =
    let
        jsonBody =
            req |> Codec.encoder describeFpgaImagesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeFpgaImages"
                (AWS.Core.Decode.ResultDecoder "DescribeFpgaImagesResult" (Codec.decoder describeFpgaImagesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeFpgaImageAttribute :
    DescribeFpgaImageAttributeRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeFpgaImageAttributeResult)
describeFpgaImageAttribute req =
    let
        jsonBody =
            req |> Codec.encoder describeFpgaImageAttributeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeFpgaImageAttribute"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeFpgaImageAttributeResult"
                    (Codec.decoder describeFpgaImageAttributeResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeFlowLogs :
    DescribeFlowLogsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeFlowLogsResult)
describeFlowLogs req =
    let
        jsonBody =
            req |> Codec.encoder describeFlowLogsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeFlowLogs"
                (AWS.Core.Decode.ResultDecoder "DescribeFlowLogsResult" (Codec.decoder describeFlowLogsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeFleets : DescribeFleetsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeFleetsResult)
describeFleets req =
    let
        jsonBody =
            req |> Codec.encoder describeFleetsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeFleets"
                (AWS.Core.Decode.ResultDecoder "DescribeFleetsResult" (Codec.decoder describeFleetsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeFleetInstances :
    DescribeFleetInstancesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeFleetInstancesResult)
describeFleetInstances req =
    let
        jsonBody =
            req |> Codec.encoder describeFleetInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeFleetInstances"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeFleetInstancesResult"
                    (Codec.decoder describeFleetInstancesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeFleetHistory :
    DescribeFleetHistoryRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeFleetHistoryResult)
describeFleetHistory req =
    let
        jsonBody =
            req |> Codec.encoder describeFleetHistoryRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeFleetHistory"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeFleetHistoryResult"
                    (Codec.decoder describeFleetHistoryResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeExportTasks :
    DescribeExportTasksRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeExportTasksResult)
describeExportTasks req =
    let
        jsonBody =
            req |> Codec.encoder describeExportTasksRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeExportTasks"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeExportTasksResult"
                    (Codec.decoder describeExportTasksResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeElasticGpus :
    DescribeElasticGpusRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeElasticGpusResult)
describeElasticGpus req =
    let
        jsonBody =
            req |> Codec.encoder describeElasticGpusRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeElasticGpus"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeElasticGpusResult"
                    (Codec.decoder describeElasticGpusResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeEgressOnlyInternetGateways :
    DescribeEgressOnlyInternetGatewaysRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeEgressOnlyInternetGatewaysResult)
describeEgressOnlyInternetGateways req =
    let
        jsonBody =
            req |> Codec.encoder describeEgressOnlyInternetGatewaysRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeEgressOnlyInternetGateways"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeEgressOnlyInternetGatewaysResult"
                    (Codec.decoder describeEgressOnlyInternetGatewaysResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeDhcpOptions :
    DescribeDhcpOptionsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeDhcpOptionsResult)
describeDhcpOptions req =
    let
        jsonBody =
            req |> Codec.encoder describeDhcpOptionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeDhcpOptions"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeDhcpOptionsResult"
                    (Codec.decoder describeDhcpOptionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeCustomerGateways :
    DescribeCustomerGatewaysRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeCustomerGatewaysResult)
describeCustomerGateways req =
    let
        jsonBody =
            req |> Codec.encoder describeCustomerGatewaysRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeCustomerGateways"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeCustomerGatewaysResult"
                    (Codec.decoder describeCustomerGatewaysResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeConversionTasks :
    DescribeConversionTasksRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeConversionTasksResult)
describeConversionTasks req =
    let
        jsonBody =
            req |> Codec.encoder describeConversionTasksRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeConversionTasks"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeConversionTasksResult"
                    (Codec.decoder describeConversionTasksResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeClientVpnTargetNetworks :
    DescribeClientVpnTargetNetworksRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeClientVpnTargetNetworksResult)
describeClientVpnTargetNetworks req =
    let
        jsonBody =
            req |> Codec.encoder describeClientVpnTargetNetworksRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeClientVpnTargetNetworks"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeClientVpnTargetNetworksResult"
                    (Codec.decoder describeClientVpnTargetNetworksResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeClientVpnRoutes :
    DescribeClientVpnRoutesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeClientVpnRoutesResult)
describeClientVpnRoutes req =
    let
        jsonBody =
            req |> Codec.encoder describeClientVpnRoutesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeClientVpnRoutes"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeClientVpnRoutesResult"
                    (Codec.decoder describeClientVpnRoutesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeClientVpnEndpoints :
    DescribeClientVpnEndpointsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeClientVpnEndpointsResult)
describeClientVpnEndpoints req =
    let
        jsonBody =
            req |> Codec.encoder describeClientVpnEndpointsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeClientVpnEndpoints"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeClientVpnEndpointsResult"
                    (Codec.decoder describeClientVpnEndpointsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeClientVpnConnections :
    DescribeClientVpnConnectionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeClientVpnConnectionsResult)
describeClientVpnConnections req =
    let
        jsonBody =
            req |> Codec.encoder describeClientVpnConnectionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeClientVpnConnections"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeClientVpnConnectionsResult"
                    (Codec.decoder describeClientVpnConnectionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeClientVpnAuthorizationRules :
    DescribeClientVpnAuthorizationRulesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeClientVpnAuthorizationRulesResult)
describeClientVpnAuthorizationRules req =
    let
        jsonBody =
            req |> Codec.encoder describeClientVpnAuthorizationRulesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeClientVpnAuthorizationRules"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeClientVpnAuthorizationRulesResult"
                    (Codec.decoder describeClientVpnAuthorizationRulesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeClassicLinkInstances :
    DescribeClassicLinkInstancesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeClassicLinkInstancesResult)
describeClassicLinkInstances req =
    let
        jsonBody =
            req |> Codec.encoder describeClassicLinkInstancesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeClassicLinkInstances"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeClassicLinkInstancesResult"
                    (Codec.decoder describeClassicLinkInstancesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeCapacityReservations :
    DescribeCapacityReservationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeCapacityReservationsResult)
describeCapacityReservations req =
    let
        jsonBody =
            req |> Codec.encoder describeCapacityReservationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeCapacityReservations"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeCapacityReservationsResult"
                    (Codec.decoder describeCapacityReservationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeByoipCidrs :
    DescribeByoipCidrsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeByoipCidrsResult)
describeByoipCidrs req =
    let
        jsonBody =
            req |> Codec.encoder describeByoipCidrsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeByoipCidrs"
                (AWS.Core.Decode.ResultDecoder "DescribeByoipCidrsResult" (Codec.decoder describeByoipCidrsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeBundleTasks :
    DescribeBundleTasksRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeBundleTasksResult)
describeBundleTasks req =
    let
        jsonBody =
            req |> Codec.encoder describeBundleTasksRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeBundleTasks"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeBundleTasksResult"
                    (Codec.decoder describeBundleTasksResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeAvailabilityZones :
    DescribeAvailabilityZonesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeAvailabilityZonesResult)
describeAvailabilityZones req =
    let
        jsonBody =
            req |> Codec.encoder describeAvailabilityZonesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeAvailabilityZones"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeAvailabilityZonesResult"
                    (Codec.decoder describeAvailabilityZonesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeAggregateIdFormat :
    DescribeAggregateIdFormatRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeAggregateIdFormatResult)
describeAggregateIdFormat req =
    let
        jsonBody =
            req |> Codec.encoder describeAggregateIdFormatRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeAggregateIdFormat"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeAggregateIdFormatResult"
                    (Codec.decoder describeAggregateIdFormatResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeAddresses :
    DescribeAddressesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeAddressesResult)
describeAddresses req =
    let
        jsonBody =
            req |> Codec.encoder describeAddressesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeAddresses"
                (AWS.Core.Decode.ResultDecoder "DescribeAddressesResult" (Codec.decoder describeAddressesResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
describeAccountAttributes :
    DescribeAccountAttributesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DescribeAccountAttributesResult)
describeAccountAttributes req =
    let
        jsonBody =
            req |> Codec.encoder describeAccountAttributesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DescribeAccountAttributes"
                (AWS.Core.Decode.ResultDecoder
                    "DescribeAccountAttributesResult"
                    (Codec.decoder describeAccountAttributesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deregisterImage : DeregisterImageRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deregisterImage req =
    let
        jsonBody =
            req |> Codec.encoder deregisterImageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeregisterImage" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deprovisionByoipCidr :
    DeprovisionByoipCidrRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeprovisionByoipCidrResult)
deprovisionByoipCidr req =
    let
        jsonBody =
            req |> Codec.encoder deprovisionByoipCidrRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeprovisionByoipCidr"
                (AWS.Core.Decode.ResultDecoder
                    "DeprovisionByoipCidrResult"
                    (Codec.decoder deprovisionByoipCidrResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVpnGateway : DeleteVpnGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteVpnGateway req =
    let
        jsonBody =
            req |> Codec.encoder deleteVpnGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteVpnGateway" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVpnConnectionRoute : DeleteVpnConnectionRouteRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteVpnConnectionRoute req =
    let
        jsonBody =
            req |> Codec.encoder deleteVpnConnectionRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteVpnConnectionRoute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVpnConnection : DeleteVpnConnectionRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteVpnConnection req =
    let
        jsonBody =
            req |> Codec.encoder deleteVpnConnectionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteVpnConnection" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVpcPeeringConnection :
    DeleteVpcPeeringConnectionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteVpcPeeringConnectionResult)
deleteVpcPeeringConnection req =
    let
        jsonBody =
            req |> Codec.encoder deleteVpcPeeringConnectionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteVpcPeeringConnection"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteVpcPeeringConnectionResult"
                    (Codec.decoder deleteVpcPeeringConnectionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVpcEndpoints :
    DeleteVpcEndpointsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteVpcEndpointsResult)
deleteVpcEndpoints req =
    let
        jsonBody =
            req |> Codec.encoder deleteVpcEndpointsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteVpcEndpoints"
                (AWS.Core.Decode.ResultDecoder "DeleteVpcEndpointsResult" (Codec.decoder deleteVpcEndpointsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVpcEndpointServiceConfigurations :
    DeleteVpcEndpointServiceConfigurationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteVpcEndpointServiceConfigurationsResult)
deleteVpcEndpointServiceConfigurations req =
    let
        jsonBody =
            req |> Codec.encoder deleteVpcEndpointServiceConfigurationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteVpcEndpointServiceConfigurations"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteVpcEndpointServiceConfigurationsResult"
                    (Codec.decoder deleteVpcEndpointServiceConfigurationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVpcEndpointConnectionNotifications :
    DeleteVpcEndpointConnectionNotificationsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteVpcEndpointConnectionNotificationsResult)
deleteVpcEndpointConnectionNotifications req =
    let
        jsonBody =
            req |> Codec.encoder deleteVpcEndpointConnectionNotificationsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteVpcEndpointConnectionNotifications"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteVpcEndpointConnectionNotificationsResult"
                    (Codec.decoder deleteVpcEndpointConnectionNotificationsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVpc : DeleteVpcRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteVpc req =
    let
        jsonBody =
            req |> Codec.encoder deleteVpcRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteVpc" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteVolume : DeleteVolumeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteVolume req =
    let
        jsonBody =
            req |> Codec.encoder deleteVolumeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteVolume" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTransitGatewayVpcAttachment :
    DeleteTransitGatewayVpcAttachmentRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteTransitGatewayVpcAttachmentResult)
deleteTransitGatewayVpcAttachment req =
    let
        jsonBody =
            req |> Codec.encoder deleteTransitGatewayVpcAttachmentRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteTransitGatewayVpcAttachment"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteTransitGatewayVpcAttachmentResult"
                    (Codec.decoder deleteTransitGatewayVpcAttachmentResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTransitGatewayRouteTable :
    DeleteTransitGatewayRouteTableRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteTransitGatewayRouteTableResult)
deleteTransitGatewayRouteTable req =
    let
        jsonBody =
            req |> Codec.encoder deleteTransitGatewayRouteTableRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteTransitGatewayRouteTable"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteTransitGatewayRouteTableResult"
                    (Codec.decoder deleteTransitGatewayRouteTableResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTransitGatewayRoute :
    DeleteTransitGatewayRouteRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteTransitGatewayRouteResult)
deleteTransitGatewayRoute req =
    let
        jsonBody =
            req |> Codec.encoder deleteTransitGatewayRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteTransitGatewayRoute"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteTransitGatewayRouteResult"
                    (Codec.decoder deleteTransitGatewayRouteResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTransitGateway :
    DeleteTransitGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteTransitGatewayResult)
deleteTransitGateway req =
    let
        jsonBody =
            req |> Codec.encoder deleteTransitGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteTransitGateway"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteTransitGatewayResult"
                    (Codec.decoder deleteTransitGatewayResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTrafficMirrorTarget :
    DeleteTrafficMirrorTargetRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteTrafficMirrorTargetResult)
deleteTrafficMirrorTarget req =
    let
        jsonBody =
            req |> Codec.encoder deleteTrafficMirrorTargetRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteTrafficMirrorTarget"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteTrafficMirrorTargetResult"
                    (Codec.decoder deleteTrafficMirrorTargetResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTrafficMirrorSession :
    DeleteTrafficMirrorSessionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteTrafficMirrorSessionResult)
deleteTrafficMirrorSession req =
    let
        jsonBody =
            req |> Codec.encoder deleteTrafficMirrorSessionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteTrafficMirrorSession"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteTrafficMirrorSessionResult"
                    (Codec.decoder deleteTrafficMirrorSessionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTrafficMirrorFilterRule :
    DeleteTrafficMirrorFilterRuleRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteTrafficMirrorFilterRuleResult)
deleteTrafficMirrorFilterRule req =
    let
        jsonBody =
            req |> Codec.encoder deleteTrafficMirrorFilterRuleRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteTrafficMirrorFilterRule"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteTrafficMirrorFilterRuleResult"
                    (Codec.decoder deleteTrafficMirrorFilterRuleResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTrafficMirrorFilter :
    DeleteTrafficMirrorFilterRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteTrafficMirrorFilterResult)
deleteTrafficMirrorFilter req =
    let
        jsonBody =
            req |> Codec.encoder deleteTrafficMirrorFilterRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteTrafficMirrorFilter"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteTrafficMirrorFilterResult"
                    (Codec.decoder deleteTrafficMirrorFilterResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteTags : DeleteTagsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteTags req =
    let
        jsonBody =
            req |> Codec.encoder deleteTagsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteTags" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteSubnet : DeleteSubnetRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteSubnet req =
    let
        jsonBody =
            req |> Codec.encoder deleteSubnetRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteSubnet" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteSpotDatafeedSubscription :
    DeleteSpotDatafeedSubscriptionRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteSpotDatafeedSubscription req =
    let
        jsonBody =
            req |> Codec.encoder deleteSpotDatafeedSubscriptionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteSpotDatafeedSubscription" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteSnapshot : DeleteSnapshotRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteSnapshot req =
    let
        jsonBody =
            req |> Codec.encoder deleteSnapshotRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteSnapshot" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteSecurityGroup : DeleteSecurityGroupRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteSecurityGroup req =
    let
        jsonBody =
            req |> Codec.encoder deleteSecurityGroupRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteSecurityGroup" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteRouteTable : DeleteRouteTableRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteRouteTable req =
    let
        jsonBody =
            req |> Codec.encoder deleteRouteTableRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteRouteTable" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteRoute : DeleteRouteRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteRoute req =
    let
        jsonBody =
            req |> Codec.encoder deleteRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteRoute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deletePlacementGroup : DeletePlacementGroupRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deletePlacementGroup req =
    let
        jsonBody =
            req |> Codec.encoder deletePlacementGroupRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeletePlacementGroup" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteNetworkInterfacePermission :
    DeleteNetworkInterfacePermissionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteNetworkInterfacePermissionResult)
deleteNetworkInterfacePermission req =
    let
        jsonBody =
            req |> Codec.encoder deleteNetworkInterfacePermissionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteNetworkInterfacePermission"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteNetworkInterfacePermissionResult"
                    (Codec.decoder deleteNetworkInterfacePermissionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteNetworkInterface : DeleteNetworkInterfaceRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteNetworkInterface req =
    let
        jsonBody =
            req |> Codec.encoder deleteNetworkInterfaceRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteNetworkInterface" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteNetworkAclEntry : DeleteNetworkAclEntryRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteNetworkAclEntry req =
    let
        jsonBody =
            req |> Codec.encoder deleteNetworkAclEntryRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteNetworkAclEntry" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteNetworkAcl : DeleteNetworkAclRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteNetworkAcl req =
    let
        jsonBody =
            req |> Codec.encoder deleteNetworkAclRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteNetworkAcl" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteNatGateway :
    DeleteNatGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteNatGatewayResult)
deleteNatGateway req =
    let
        jsonBody =
            req |> Codec.encoder deleteNatGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteNatGateway"
                (AWS.Core.Decode.ResultDecoder "DeleteNatGatewayResult" (Codec.decoder deleteNatGatewayResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteLaunchTemplateVersions :
    DeleteLaunchTemplateVersionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteLaunchTemplateVersionsResult)
deleteLaunchTemplateVersions req =
    let
        jsonBody =
            req |> Codec.encoder deleteLaunchTemplateVersionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteLaunchTemplateVersions"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteLaunchTemplateVersionsResult"
                    (Codec.decoder deleteLaunchTemplateVersionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteLaunchTemplate :
    DeleteLaunchTemplateRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteLaunchTemplateResult)
deleteLaunchTemplate req =
    let
        jsonBody =
            req |> Codec.encoder deleteLaunchTemplateRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteLaunchTemplate"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteLaunchTemplateResult"
                    (Codec.decoder deleteLaunchTemplateResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteKeyPair : DeleteKeyPairRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteKeyPair req =
    let
        jsonBody =
            req |> Codec.encoder deleteKeyPairRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteKeyPair" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteInternetGateway : DeleteInternetGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteInternetGateway req =
    let
        jsonBody =
            req |> Codec.encoder deleteInternetGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteInternetGateway" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteFpgaImage :
    DeleteFpgaImageRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteFpgaImageResult)
deleteFpgaImage req =
    let
        jsonBody =
            req |> Codec.encoder deleteFpgaImageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteFpgaImage"
                (AWS.Core.Decode.ResultDecoder "DeleteFpgaImageResult" (Codec.decoder deleteFpgaImageResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteFlowLogs : DeleteFlowLogsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteFlowLogsResult)
deleteFlowLogs req =
    let
        jsonBody =
            req |> Codec.encoder deleteFlowLogsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteFlowLogs"
                (AWS.Core.Decode.ResultDecoder "DeleteFlowLogsResult" (Codec.decoder deleteFlowLogsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteFleets : DeleteFleetsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteFleetsResult)
deleteFleets req =
    let
        jsonBody =
            req |> Codec.encoder deleteFleetsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteFleets"
                (AWS.Core.Decode.ResultDecoder "DeleteFleetsResult" (Codec.decoder deleteFleetsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteEgressOnlyInternetGateway :
    DeleteEgressOnlyInternetGatewayRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteEgressOnlyInternetGatewayResult)
deleteEgressOnlyInternetGateway req =
    let
        jsonBody =
            req |> Codec.encoder deleteEgressOnlyInternetGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteEgressOnlyInternetGateway"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteEgressOnlyInternetGatewayResult"
                    (Codec.decoder deleteEgressOnlyInternetGatewayResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteDhcpOptions : DeleteDhcpOptionsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteDhcpOptions req =
    let
        jsonBody =
            req |> Codec.encoder deleteDhcpOptionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteDhcpOptions" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteCustomerGateway : DeleteCustomerGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
deleteCustomerGateway req =
    let
        jsonBody =
            req |> Codec.encoder deleteCustomerGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "DeleteCustomerGateway" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteClientVpnRoute :
    DeleteClientVpnRouteRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteClientVpnRouteResult)
deleteClientVpnRoute req =
    let
        jsonBody =
            req |> Codec.encoder deleteClientVpnRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteClientVpnRoute"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteClientVpnRouteResult"
                    (Codec.decoder deleteClientVpnRouteResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
deleteClientVpnEndpoint :
    DeleteClientVpnEndpointRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper DeleteClientVpnEndpointResult)
deleteClientVpnEndpoint req =
    let
        jsonBody =
            req |> Codec.encoder deleteClientVpnEndpointRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "DeleteClientVpnEndpoint"
                (AWS.Core.Decode.ResultDecoder
                    "DeleteClientVpnEndpointResult"
                    (Codec.decoder deleteClientVpnEndpointResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVpnGateway :
    CreateVpnGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateVpnGatewayResult)
createVpnGateway req =
    let
        jsonBody =
            req |> Codec.encoder createVpnGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateVpnGateway"
                (AWS.Core.Decode.ResultDecoder "CreateVpnGatewayResult" (Codec.decoder createVpnGatewayResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVpnConnectionRoute : CreateVpnConnectionRouteRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
createVpnConnectionRoute req =
    let
        jsonBody =
            req |> Codec.encoder createVpnConnectionRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "CreateVpnConnectionRoute" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVpnConnection :
    CreateVpnConnectionRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateVpnConnectionResult)
createVpnConnection req =
    let
        jsonBody =
            req |> Codec.encoder createVpnConnectionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateVpnConnection"
                (AWS.Core.Decode.ResultDecoder
                    "CreateVpnConnectionResult"
                    (Codec.decoder createVpnConnectionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVpcPeeringConnection :
    CreateVpcPeeringConnectionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateVpcPeeringConnectionResult)
createVpcPeeringConnection req =
    let
        jsonBody =
            req |> Codec.encoder createVpcPeeringConnectionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateVpcPeeringConnection"
                (AWS.Core.Decode.ResultDecoder
                    "CreateVpcPeeringConnectionResult"
                    (Codec.decoder createVpcPeeringConnectionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVpcEndpointServiceConfiguration :
    CreateVpcEndpointServiceConfigurationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateVpcEndpointServiceConfigurationResult)
createVpcEndpointServiceConfiguration req =
    let
        jsonBody =
            req |> Codec.encoder createVpcEndpointServiceConfigurationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateVpcEndpointServiceConfiguration"
                (AWS.Core.Decode.ResultDecoder
                    "CreateVpcEndpointServiceConfigurationResult"
                    (Codec.decoder createVpcEndpointServiceConfigurationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVpcEndpointConnectionNotification :
    CreateVpcEndpointConnectionNotificationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateVpcEndpointConnectionNotificationResult)
createVpcEndpointConnectionNotification req =
    let
        jsonBody =
            req |> Codec.encoder createVpcEndpointConnectionNotificationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateVpcEndpointConnectionNotification"
                (AWS.Core.Decode.ResultDecoder
                    "CreateVpcEndpointConnectionNotificationResult"
                    (Codec.decoder createVpcEndpointConnectionNotificationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVpcEndpoint :
    CreateVpcEndpointRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateVpcEndpointResult)
createVpcEndpoint req =
    let
        jsonBody =
            req |> Codec.encoder createVpcEndpointRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateVpcEndpoint"
                (AWS.Core.Decode.ResultDecoder "CreateVpcEndpointResult" (Codec.decoder createVpcEndpointResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVpc : CreateVpcRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateVpcResult)
createVpc req =
    let
        jsonBody =
            req |> Codec.encoder createVpcRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateVpc"
                (AWS.Core.Decode.ResultDecoder "CreateVpcResult" (Codec.decoder createVpcResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createVolume : CreateVolumeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper Volume)
createVolume req =
    let
        jsonBody =
            req |> Codec.encoder createVolumeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateVolume"
                (AWS.Core.Decode.ResultDecoder "Volume" (Codec.decoder volumeCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTransitGatewayVpcAttachment :
    CreateTransitGatewayVpcAttachmentRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateTransitGatewayVpcAttachmentResult)
createTransitGatewayVpcAttachment req =
    let
        jsonBody =
            req |> Codec.encoder createTransitGatewayVpcAttachmentRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateTransitGatewayVpcAttachment"
                (AWS.Core.Decode.ResultDecoder
                    "CreateTransitGatewayVpcAttachmentResult"
                    (Codec.decoder createTransitGatewayVpcAttachmentResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTransitGatewayRouteTable :
    CreateTransitGatewayRouteTableRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateTransitGatewayRouteTableResult)
createTransitGatewayRouteTable req =
    let
        jsonBody =
            req |> Codec.encoder createTransitGatewayRouteTableRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateTransitGatewayRouteTable"
                (AWS.Core.Decode.ResultDecoder
                    "CreateTransitGatewayRouteTableResult"
                    (Codec.decoder createTransitGatewayRouteTableResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTransitGatewayRoute :
    CreateTransitGatewayRouteRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateTransitGatewayRouteResult)
createTransitGatewayRoute req =
    let
        jsonBody =
            req |> Codec.encoder createTransitGatewayRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateTransitGatewayRoute"
                (AWS.Core.Decode.ResultDecoder
                    "CreateTransitGatewayRouteResult"
                    (Codec.decoder createTransitGatewayRouteResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTransitGateway :
    CreateTransitGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateTransitGatewayResult)
createTransitGateway req =
    let
        jsonBody =
            req |> Codec.encoder createTransitGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateTransitGateway"
                (AWS.Core.Decode.ResultDecoder
                    "CreateTransitGatewayResult"
                    (Codec.decoder createTransitGatewayResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTrafficMirrorTarget :
    CreateTrafficMirrorTargetRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateTrafficMirrorTargetResult)
createTrafficMirrorTarget req =
    let
        jsonBody =
            req |> Codec.encoder createTrafficMirrorTargetRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateTrafficMirrorTarget"
                (AWS.Core.Decode.ResultDecoder
                    "CreateTrafficMirrorTargetResult"
                    (Codec.decoder createTrafficMirrorTargetResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTrafficMirrorSession :
    CreateTrafficMirrorSessionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateTrafficMirrorSessionResult)
createTrafficMirrorSession req =
    let
        jsonBody =
            req |> Codec.encoder createTrafficMirrorSessionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateTrafficMirrorSession"
                (AWS.Core.Decode.ResultDecoder
                    "CreateTrafficMirrorSessionResult"
                    (Codec.decoder createTrafficMirrorSessionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTrafficMirrorFilterRule :
    CreateTrafficMirrorFilterRuleRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateTrafficMirrorFilterRuleResult)
createTrafficMirrorFilterRule req =
    let
        jsonBody =
            req |> Codec.encoder createTrafficMirrorFilterRuleRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateTrafficMirrorFilterRule"
                (AWS.Core.Decode.ResultDecoder
                    "CreateTrafficMirrorFilterRuleResult"
                    (Codec.decoder createTrafficMirrorFilterRuleResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTrafficMirrorFilter :
    CreateTrafficMirrorFilterRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateTrafficMirrorFilterResult)
createTrafficMirrorFilter req =
    let
        jsonBody =
            req |> Codec.encoder createTrafficMirrorFilterRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateTrafficMirrorFilter"
                (AWS.Core.Decode.ResultDecoder
                    "CreateTrafficMirrorFilterResult"
                    (Codec.decoder createTrafficMirrorFilterResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createTags : CreateTagsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
createTags req =
    let
        jsonBody =
            req |> Codec.encoder createTagsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "CreateTags" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createSubnet : CreateSubnetRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateSubnetResult)
createSubnet req =
    let
        jsonBody =
            req |> Codec.encoder createSubnetRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateSubnet"
                (AWS.Core.Decode.ResultDecoder "CreateSubnetResult" (Codec.decoder createSubnetResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createSpotDatafeedSubscription :
    CreateSpotDatafeedSubscriptionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateSpotDatafeedSubscriptionResult)
createSpotDatafeedSubscription req =
    let
        jsonBody =
            req |> Codec.encoder createSpotDatafeedSubscriptionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateSpotDatafeedSubscription"
                (AWS.Core.Decode.ResultDecoder
                    "CreateSpotDatafeedSubscriptionResult"
                    (Codec.decoder createSpotDatafeedSubscriptionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createSnapshots :
    CreateSnapshotsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateSnapshotsResult)
createSnapshots req =
    let
        jsonBody =
            req |> Codec.encoder createSnapshotsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateSnapshots"
                (AWS.Core.Decode.ResultDecoder "CreateSnapshotsResult" (Codec.decoder createSnapshotsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createSnapshot : CreateSnapshotRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper Snapshot)
createSnapshot req =
    let
        jsonBody =
            req |> Codec.encoder createSnapshotRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateSnapshot"
                (AWS.Core.Decode.ResultDecoder "Snapshot" (Codec.decoder snapshotCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createSecurityGroup :
    CreateSecurityGroupRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateSecurityGroupResult)
createSecurityGroup req =
    let
        jsonBody =
            req |> Codec.encoder createSecurityGroupRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateSecurityGroup"
                (AWS.Core.Decode.ResultDecoder
                    "CreateSecurityGroupResult"
                    (Codec.decoder createSecurityGroupResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createRouteTable :
    CreateRouteTableRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateRouteTableResult)
createRouteTable req =
    let
        jsonBody =
            req |> Codec.encoder createRouteTableRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateRouteTable"
                (AWS.Core.Decode.ResultDecoder "CreateRouteTableResult" (Codec.decoder createRouteTableResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createRoute : CreateRouteRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateRouteResult)
createRoute req =
    let
        jsonBody =
            req |> Codec.encoder createRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateRoute"
                (AWS.Core.Decode.ResultDecoder "CreateRouteResult" (Codec.decoder createRouteResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createReservedInstancesListing :
    CreateReservedInstancesListingRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateReservedInstancesListingResult)
createReservedInstancesListing req =
    let
        jsonBody =
            req |> Codec.encoder createReservedInstancesListingRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateReservedInstancesListing"
                (AWS.Core.Decode.ResultDecoder
                    "CreateReservedInstancesListingResult"
                    (Codec.decoder createReservedInstancesListingResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createPlacementGroup : CreatePlacementGroupRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
createPlacementGroup req =
    let
        jsonBody =
            req |> Codec.encoder createPlacementGroupRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "CreatePlacementGroup" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createNetworkInterfacePermission :
    CreateNetworkInterfacePermissionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateNetworkInterfacePermissionResult)
createNetworkInterfacePermission req =
    let
        jsonBody =
            req |> Codec.encoder createNetworkInterfacePermissionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateNetworkInterfacePermission"
                (AWS.Core.Decode.ResultDecoder
                    "CreateNetworkInterfacePermissionResult"
                    (Codec.decoder createNetworkInterfacePermissionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createNetworkInterface :
    CreateNetworkInterfaceRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateNetworkInterfaceResult)
createNetworkInterface req =
    let
        jsonBody =
            req |> Codec.encoder createNetworkInterfaceRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateNetworkInterface"
                (AWS.Core.Decode.ResultDecoder
                    "CreateNetworkInterfaceResult"
                    (Codec.decoder createNetworkInterfaceResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createNetworkAclEntry : CreateNetworkAclEntryRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
createNetworkAclEntry req =
    let
        jsonBody =
            req |> Codec.encoder createNetworkAclEntryRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "CreateNetworkAclEntry" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createNetworkAcl :
    CreateNetworkAclRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateNetworkAclResult)
createNetworkAcl req =
    let
        jsonBody =
            req |> Codec.encoder createNetworkAclRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateNetworkAcl"
                (AWS.Core.Decode.ResultDecoder "CreateNetworkAclResult" (Codec.decoder createNetworkAclResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createNatGateway :
    CreateNatGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateNatGatewayResult)
createNatGateway req =
    let
        jsonBody =
            req |> Codec.encoder createNatGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateNatGateway"
                (AWS.Core.Decode.ResultDecoder "CreateNatGatewayResult" (Codec.decoder createNatGatewayResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createLaunchTemplateVersion :
    CreateLaunchTemplateVersionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateLaunchTemplateVersionResult)
createLaunchTemplateVersion req =
    let
        jsonBody =
            req |> Codec.encoder createLaunchTemplateVersionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateLaunchTemplateVersion"
                (AWS.Core.Decode.ResultDecoder
                    "CreateLaunchTemplateVersionResult"
                    (Codec.decoder createLaunchTemplateVersionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createLaunchTemplate :
    CreateLaunchTemplateRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateLaunchTemplateResult)
createLaunchTemplate req =
    let
        jsonBody =
            req |> Codec.encoder createLaunchTemplateRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateLaunchTemplate"
                (AWS.Core.Decode.ResultDecoder
                    "CreateLaunchTemplateResult"
                    (Codec.decoder createLaunchTemplateResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createKeyPair : CreateKeyPairRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper KeyPair)
createKeyPair req =
    let
        jsonBody =
            req |> Codec.encoder createKeyPairRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateKeyPair"
                (AWS.Core.Decode.ResultDecoder "KeyPair" (Codec.decoder keyPairCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createInternetGateway :
    CreateInternetGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateInternetGatewayResult)
createInternetGateway req =
    let
        jsonBody =
            req |> Codec.encoder createInternetGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateInternetGateway"
                (AWS.Core.Decode.ResultDecoder
                    "CreateInternetGatewayResult"
                    (Codec.decoder createInternetGatewayResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createInstanceExportTask :
    CreateInstanceExportTaskRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateInstanceExportTaskResult)
createInstanceExportTask req =
    let
        jsonBody =
            req |> Codec.encoder createInstanceExportTaskRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateInstanceExportTask"
                (AWS.Core.Decode.ResultDecoder
                    "CreateInstanceExportTaskResult"
                    (Codec.decoder createInstanceExportTaskResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createImage : CreateImageRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateImageResult)
createImage req =
    let
        jsonBody =
            req |> Codec.encoder createImageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateImage"
                (AWS.Core.Decode.ResultDecoder "CreateImageResult" (Codec.decoder createImageResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createFpgaImage :
    CreateFpgaImageRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateFpgaImageResult)
createFpgaImage req =
    let
        jsonBody =
            req |> Codec.encoder createFpgaImageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateFpgaImage"
                (AWS.Core.Decode.ResultDecoder "CreateFpgaImageResult" (Codec.decoder createFpgaImageResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createFlowLogs : CreateFlowLogsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateFlowLogsResult)
createFlowLogs req =
    let
        jsonBody =
            req |> Codec.encoder createFlowLogsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateFlowLogs"
                (AWS.Core.Decode.ResultDecoder "CreateFlowLogsResult" (Codec.decoder createFlowLogsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createFleet : CreateFleetRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateFleetResult)
createFleet req =
    let
        jsonBody =
            req |> Codec.encoder createFleetRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateFleet"
                (AWS.Core.Decode.ResultDecoder "CreateFleetResult" (Codec.decoder createFleetResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createEgressOnlyInternetGateway :
    CreateEgressOnlyInternetGatewayRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateEgressOnlyInternetGatewayResult)
createEgressOnlyInternetGateway req =
    let
        jsonBody =
            req |> Codec.encoder createEgressOnlyInternetGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateEgressOnlyInternetGateway"
                (AWS.Core.Decode.ResultDecoder
                    "CreateEgressOnlyInternetGatewayResult"
                    (Codec.decoder createEgressOnlyInternetGatewayResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createDhcpOptions :
    CreateDhcpOptionsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateDhcpOptionsResult)
createDhcpOptions req =
    let
        jsonBody =
            req |> Codec.encoder createDhcpOptionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateDhcpOptions"
                (AWS.Core.Decode.ResultDecoder "CreateDhcpOptionsResult" (Codec.decoder createDhcpOptionsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createDefaultVpc :
    CreateDefaultVpcRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateDefaultVpcResult)
createDefaultVpc req =
    let
        jsonBody =
            req |> Codec.encoder createDefaultVpcRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateDefaultVpc"
                (AWS.Core.Decode.ResultDecoder "CreateDefaultVpcResult" (Codec.decoder createDefaultVpcResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createDefaultSubnet :
    CreateDefaultSubnetRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateDefaultSubnetResult)
createDefaultSubnet req =
    let
        jsonBody =
            req |> Codec.encoder createDefaultSubnetRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateDefaultSubnet"
                (AWS.Core.Decode.ResultDecoder
                    "CreateDefaultSubnetResult"
                    (Codec.decoder createDefaultSubnetResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createCustomerGateway :
    CreateCustomerGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateCustomerGatewayResult)
createCustomerGateway req =
    let
        jsonBody =
            req |> Codec.encoder createCustomerGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateCustomerGateway"
                (AWS.Core.Decode.ResultDecoder
                    "CreateCustomerGatewayResult"
                    (Codec.decoder createCustomerGatewayResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createClientVpnRoute :
    CreateClientVpnRouteRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateClientVpnRouteResult)
createClientVpnRoute req =
    let
        jsonBody =
            req |> Codec.encoder createClientVpnRouteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateClientVpnRoute"
                (AWS.Core.Decode.ResultDecoder
                    "CreateClientVpnRouteResult"
                    (Codec.decoder createClientVpnRouteResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createClientVpnEndpoint :
    CreateClientVpnEndpointRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateClientVpnEndpointResult)
createClientVpnEndpoint req =
    let
        jsonBody =
            req |> Codec.encoder createClientVpnEndpointRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateClientVpnEndpoint"
                (AWS.Core.Decode.ResultDecoder
                    "CreateClientVpnEndpointResult"
                    (Codec.decoder createClientVpnEndpointResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
createCapacityReservation :
    CreateCapacityReservationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CreateCapacityReservationResult)
createCapacityReservation req =
    let
        jsonBody =
            req |> Codec.encoder createCapacityReservationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CreateCapacityReservation"
                (AWS.Core.Decode.ResultDecoder
                    "CreateCapacityReservationResult"
                    (Codec.decoder createCapacityReservationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
copySnapshot : CopySnapshotRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CopySnapshotResult)
copySnapshot req =
    let
        jsonBody =
            req |> Codec.encoder copySnapshotRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CopySnapshot"
                (AWS.Core.Decode.ResultDecoder "CopySnapshotResult" (Codec.decoder copySnapshotResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
copyImage : CopyImageRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CopyImageResult)
copyImage req =
    let
        jsonBody =
            req |> Codec.encoder copyImageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CopyImage"
                (AWS.Core.Decode.ResultDecoder "CopyImageResult" (Codec.decoder copyImageResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
copyFpgaImage : CopyFpgaImageRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CopyFpgaImageResult)
copyFpgaImage req =
    let
        jsonBody =
            req |> Codec.encoder copyFpgaImageRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CopyFpgaImage"
                (AWS.Core.Decode.ResultDecoder "CopyFpgaImageResult" (Codec.decoder copyFpgaImageResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
confirmProductInstance :
    ConfirmProductInstanceRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ConfirmProductInstanceResult)
confirmProductInstance req =
    let
        jsonBody =
            req |> Codec.encoder confirmProductInstanceRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ConfirmProductInstance"
                (AWS.Core.Decode.ResultDecoder
                    "ConfirmProductInstanceResult"
                    (Codec.decoder confirmProductInstanceResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
cancelSpotInstanceRequests :
    CancelSpotInstanceRequestsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CancelSpotInstanceRequestsResult)
cancelSpotInstanceRequests req =
    let
        jsonBody =
            req |> Codec.encoder cancelSpotInstanceRequestsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CancelSpotInstanceRequests"
                (AWS.Core.Decode.ResultDecoder
                    "CancelSpotInstanceRequestsResult"
                    (Codec.decoder cancelSpotInstanceRequestsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
cancelSpotFleetRequests :
    CancelSpotFleetRequestsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CancelSpotFleetRequestsResponse)
cancelSpotFleetRequests req =
    let
        jsonBody =
            req |> Codec.encoder cancelSpotFleetRequestsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CancelSpotFleetRequests"
                (AWS.Core.Decode.ResultDecoder
                    "CancelSpotFleetRequestsResponse"
                    (Codec.decoder cancelSpotFleetRequestsResponseCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
cancelReservedInstancesListing :
    CancelReservedInstancesListingRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CancelReservedInstancesListingResult)
cancelReservedInstancesListing req =
    let
        jsonBody =
            req |> Codec.encoder cancelReservedInstancesListingRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CancelReservedInstancesListing"
                (AWS.Core.Decode.ResultDecoder
                    "CancelReservedInstancesListingResult"
                    (Codec.decoder cancelReservedInstancesListingResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
cancelImportTask :
    CancelImportTaskRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CancelImportTaskResult)
cancelImportTask req =
    let
        jsonBody =
            req |> Codec.encoder cancelImportTaskRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CancelImportTask"
                (AWS.Core.Decode.ResultDecoder "CancelImportTaskResult" (Codec.decoder cancelImportTaskResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
cancelExportTask : CancelExportTaskRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
cancelExportTask req =
    let
        jsonBody =
            req |> Codec.encoder cancelExportTaskRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "CancelExportTask" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
cancelConversionTask : CancelConversionRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
cancelConversionTask req =
    let
        jsonBody =
            req |> Codec.encoder cancelConversionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "CancelConversionTask" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
cancelCapacityReservation :
    CancelCapacityReservationRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CancelCapacityReservationResult)
cancelCapacityReservation req =
    let
        jsonBody =
            req |> Codec.encoder cancelCapacityReservationRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CancelCapacityReservation"
                (AWS.Core.Decode.ResultDecoder
                    "CancelCapacityReservationResult"
                    (Codec.decoder cancelCapacityReservationResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
cancelBundleTask :
    CancelBundleTaskRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper CancelBundleTaskResult)
cancelBundleTask req =
    let
        jsonBody =
            req |> Codec.encoder cancelBundleTaskRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "CancelBundleTask"
                (AWS.Core.Decode.ResultDecoder "CancelBundleTaskResult" (Codec.decoder cancelBundleTaskResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
bundleInstance : BundleInstanceRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper BundleInstanceResult)
bundleInstance req =
    let
        jsonBody =
            req |> Codec.encoder bundleInstanceRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "BundleInstance"
                (AWS.Core.Decode.ResultDecoder "BundleInstanceResult" (Codec.decoder bundleInstanceResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
authorizeSecurityGroupIngress :
    AuthorizeSecurityGroupIngressRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
authorizeSecurityGroupIngress req =
    let
        jsonBody =
            req |> Codec.encoder authorizeSecurityGroupIngressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "AuthorizeSecurityGroupIngress" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
authorizeSecurityGroupEgress :
    AuthorizeSecurityGroupEgressRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
authorizeSecurityGroupEgress req =
    let
        jsonBody =
            req |> Codec.encoder authorizeSecurityGroupEgressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "AuthorizeSecurityGroupEgress" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
authorizeClientVpnIngress :
    AuthorizeClientVpnIngressRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AuthorizeClientVpnIngressResult)
authorizeClientVpnIngress req =
    let
        jsonBody =
            req |> Codec.encoder authorizeClientVpnIngressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AuthorizeClientVpnIngress"
                (AWS.Core.Decode.ResultDecoder
                    "AuthorizeClientVpnIngressResult"
                    (Codec.decoder authorizeClientVpnIngressResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
attachVpnGateway :
    AttachVpnGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AttachVpnGatewayResult)
attachVpnGateway req =
    let
        jsonBody =
            req |> Codec.encoder attachVpnGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AttachVpnGateway"
                (AWS.Core.Decode.ResultDecoder "AttachVpnGatewayResult" (Codec.decoder attachVpnGatewayResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
attachVolume : AttachVolumeRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper VolumeAttachment)
attachVolume req =
    let
        jsonBody =
            req |> Codec.encoder attachVolumeRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AttachVolume"
                (AWS.Core.Decode.ResultDecoder "VolumeAttachment" (Codec.decoder volumeAttachmentCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
attachNetworkInterface :
    AttachNetworkInterfaceRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AttachNetworkInterfaceResult)
attachNetworkInterface req =
    let
        jsonBody =
            req |> Codec.encoder attachNetworkInterfaceRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AttachNetworkInterface"
                (AWS.Core.Decode.ResultDecoder
                    "AttachNetworkInterfaceResult"
                    (Codec.decoder attachNetworkInterfaceResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
attachInternetGateway : AttachInternetGatewayRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
attachInternetGateway req =
    let
        jsonBody =
            req |> Codec.encoder attachInternetGatewayRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "AttachInternetGateway" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
attachClassicLinkVpc :
    AttachClassicLinkVpcRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AttachClassicLinkVpcResult)
attachClassicLinkVpc req =
    let
        jsonBody =
            req |> Codec.encoder attachClassicLinkVpcRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AttachClassicLinkVpc"
                (AWS.Core.Decode.ResultDecoder
                    "AttachClassicLinkVpcResult"
                    (Codec.decoder attachClassicLinkVpcResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
associateVpcCidrBlock :
    AssociateVpcCidrBlockRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssociateVpcCidrBlockResult)
associateVpcCidrBlock req =
    let
        jsonBody =
            req |> Codec.encoder associateVpcCidrBlockRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssociateVpcCidrBlock"
                (AWS.Core.Decode.ResultDecoder
                    "AssociateVpcCidrBlockResult"
                    (Codec.decoder associateVpcCidrBlockResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
associateTransitGatewayRouteTable :
    AssociateTransitGatewayRouteTableRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssociateTransitGatewayRouteTableResult)
associateTransitGatewayRouteTable req =
    let
        jsonBody =
            req |> Codec.encoder associateTransitGatewayRouteTableRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssociateTransitGatewayRouteTable"
                (AWS.Core.Decode.ResultDecoder
                    "AssociateTransitGatewayRouteTableResult"
                    (Codec.decoder associateTransitGatewayRouteTableResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
associateSubnetCidrBlock :
    AssociateSubnetCidrBlockRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssociateSubnetCidrBlockResult)
associateSubnetCidrBlock req =
    let
        jsonBody =
            req |> Codec.encoder associateSubnetCidrBlockRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssociateSubnetCidrBlock"
                (AWS.Core.Decode.ResultDecoder
                    "AssociateSubnetCidrBlockResult"
                    (Codec.decoder associateSubnetCidrBlockResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
associateRouteTable :
    AssociateRouteTableRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssociateRouteTableResult)
associateRouteTable req =
    let
        jsonBody =
            req |> Codec.encoder associateRouteTableRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssociateRouteTable"
                (AWS.Core.Decode.ResultDecoder
                    "AssociateRouteTableResult"
                    (Codec.decoder associateRouteTableResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
associateIamInstanceProfile :
    AssociateIamInstanceProfileRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssociateIamInstanceProfileResult)
associateIamInstanceProfile req =
    let
        jsonBody =
            req |> Codec.encoder associateIamInstanceProfileRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssociateIamInstanceProfile"
                (AWS.Core.Decode.ResultDecoder
                    "AssociateIamInstanceProfileResult"
                    (Codec.decoder associateIamInstanceProfileResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
associateDhcpOptions : AssociateDhcpOptionsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ())
associateDhcpOptions req =
    let
        jsonBody =
            req |> Codec.encoder associateDhcpOptionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder "AssociateDhcpOptions" (AWS.Core.Decode.FixedResult ())
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
associateClientVpnTargetNetwork :
    AssociateClientVpnTargetNetworkRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssociateClientVpnTargetNetworkResult)
associateClientVpnTargetNetwork req =
    let
        jsonBody =
            req |> Codec.encoder associateClientVpnTargetNetworkRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssociateClientVpnTargetNetwork"
                (AWS.Core.Decode.ResultDecoder
                    "AssociateClientVpnTargetNetworkResult"
                    (Codec.decoder associateClientVpnTargetNetworkResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
associateAddress :
    AssociateAddressRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssociateAddressResult)
associateAddress req =
    let
        jsonBody =
            req |> Codec.encoder associateAddressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssociateAddress"
                (AWS.Core.Decode.ResultDecoder "AssociateAddressResult" (Codec.decoder associateAddressResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
assignPrivateIpAddresses :
    AssignPrivateIpAddressesRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssignPrivateIpAddressesResult)
assignPrivateIpAddresses req =
    let
        jsonBody =
            req |> Codec.encoder assignPrivateIpAddressesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssignPrivateIpAddresses"
                (AWS.Core.Decode.ResultDecoder
                    "AssignPrivateIpAddressesResult"
                    (Codec.decoder assignPrivateIpAddressesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
assignIpv6Addresses :
    AssignIpv6AddressesRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AssignIpv6AddressesResult)
assignIpv6Addresses req =
    let
        jsonBody =
            req |> Codec.encoder assignIpv6AddressesRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AssignIpv6Addresses"
                (AWS.Core.Decode.ResultDecoder
                    "AssignIpv6AddressesResult"
                    (Codec.decoder assignIpv6AddressesResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
applySecurityGroupsToClientVpnTargetNetwork :
    ApplySecurityGroupsToClientVpnTargetNetworkRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper ApplySecurityGroupsToClientVpnTargetNetworkResult)
applySecurityGroupsToClientVpnTargetNetwork req =
    let
        jsonBody =
            req |> Codec.encoder applySecurityGroupsToClientVpnTargetNetworkRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "ApplySecurityGroupsToClientVpnTargetNetwork"
                (AWS.Core.Decode.ResultDecoder
                    "ApplySecurityGroupsToClientVpnTargetNetworkResult"
                    (Codec.decoder applySecurityGroupsToClientVpnTargetNetworkResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
allocateHosts : AllocateHostsRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AllocateHostsResult)
allocateHosts req =
    let
        jsonBody =
            req |> Codec.encoder allocateHostsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AllocateHosts"
                (AWS.Core.Decode.ResultDecoder "AllocateHostsResult" (Codec.decoder allocateHostsResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
allocateAddress :
    AllocateAddressRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AllocateAddressResult)
allocateAddress req =
    let
        jsonBody =
            req |> Codec.encoder allocateAddressRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AllocateAddress"
                (AWS.Core.Decode.ResultDecoder "AllocateAddressResult" (Codec.decoder allocateAddressResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
advertiseByoipCidr :
    AdvertiseByoipCidrRequest -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AdvertiseByoipCidrResult)
advertiseByoipCidr req =
    let
        jsonBody =
            req |> Codec.encoder advertiseByoipCidrRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AdvertiseByoipCidr"
                (AWS.Core.Decode.ResultDecoder "AdvertiseByoipCidrResult" (Codec.decoder advertiseByoipCidrResultCodec))
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
acceptVpcPeeringConnection :
    AcceptVpcPeeringConnectionRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AcceptVpcPeeringConnectionResult)
acceptVpcPeeringConnection req =
    let
        jsonBody =
            req |> Codec.encoder acceptVpcPeeringConnectionRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AcceptVpcPeeringConnection"
                (AWS.Core.Decode.ResultDecoder
                    "AcceptVpcPeeringConnectionResult"
                    (Codec.decoder acceptVpcPeeringConnectionResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
acceptVpcEndpointConnections :
    AcceptVpcEndpointConnectionsRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AcceptVpcEndpointConnectionsResult)
acceptVpcEndpointConnections req =
    let
        jsonBody =
            req |> Codec.encoder acceptVpcEndpointConnectionsRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AcceptVpcEndpointConnections"
                (AWS.Core.Decode.ResultDecoder
                    "AcceptVpcEndpointConnectionsResult"
                    (Codec.decoder acceptVpcEndpointConnectionsResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
acceptTransitGatewayVpcAttachment :
    AcceptTransitGatewayVpcAttachmentRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AcceptTransitGatewayVpcAttachmentResult)
acceptTransitGatewayVpcAttachment req =
    let
        jsonBody =
            req |> Codec.encoder acceptTransitGatewayVpcAttachmentRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AcceptTransitGatewayVpcAttachment"
                (AWS.Core.Decode.ResultDecoder
                    "AcceptTransitGatewayVpcAttachmentResult"
                    (Codec.decoder acceptTransitGatewayVpcAttachmentResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


{-| AWS Endpoint. -}
acceptReservedInstancesExchangeQuote :
    AcceptReservedInstancesExchangeQuoteRequest
    -> AWS.Core.Http.Request (AWS.Core.Decode.ResponseWrapper AcceptReservedInstancesExchangeQuoteResult)
acceptReservedInstancesExchangeQuote req =
    let
        jsonBody =
            req |> Codec.encoder acceptReservedInstancesExchangeQuoteRequestCodec |> AWS.Core.Http.jsonBody

        wrappedDecoder =
            AWS.Core.Decode.responseWrapperDecoder
                "AcceptReservedInstancesExchangeQuote"
                (AWS.Core.Decode.ResultDecoder
                    "AcceptReservedInstancesExchangeQuoteResult"
                    (Codec.decoder acceptReservedInstancesExchangeQuoteResultCodec)
                )
    in
    AWS.Core.Http.request AWS.Core.Http.POST "/" jsonBody wrappedDecoder


type alias AcceptReservedInstancesExchangeQuoteRequest =
    { targetConfigurations : TargetConfigurationRequestSet, reservedInstanceIds : ReservedInstanceIdSet, dryRun : Bool }


type alias AcceptReservedInstancesExchangeQuoteResult =
    { exchangeId : String }


type alias AcceptTransitGatewayVpcAttachmentRequest =
    { transitGatewayAttachmentId : String, dryRun : Bool }


type alias AcceptTransitGatewayVpcAttachmentResult =
    { transitGatewayVpcAttachment : TransitGatewayVpcAttachment }


type alias AcceptVpcEndpointConnectionsRequest =
    { vpcEndpointIds : ValueStringList, serviceId : String, dryRun : Bool }


type alias AcceptVpcEndpointConnectionsResult =
    { unsuccessful : UnsuccessfulItemSet }


type alias AcceptVpcPeeringConnectionRequest =
    { vpcPeeringConnectionId : String, dryRun : Bool }


type alias AcceptVpcPeeringConnectionResult =
    { vpcPeeringConnection : VpcPeeringConnection }


type alias AccountAttribute =
    { attributeValues : AccountAttributeValueList, attributeName : String }


type alias AccountAttributeList =
    List AccountAttribute


type AccountAttributeName
    = AccountAttributeNameSupportedPlatforms
    | AccountAttributeNameDefaultVpc


accountAttributeName : Enum AccountAttributeName
accountAttributeName =
    Enum.define
        [ AccountAttributeNameSupportedPlatforms, AccountAttributeNameDefaultVpc ]
        (\val ->
            case val of
                AccountAttributeNameSupportedPlatforms ->
                    "supported-platforms"

                AccountAttributeNameDefaultVpc ->
                    "default-vpc"
        )


type alias AccountAttributeNameStringList =
    List AccountAttributeName


type alias AccountAttributeValue =
    { attributeValue : String }


type alias AccountAttributeValueList =
    List AccountAttributeValue


type alias ActiveInstance =
    { spotInstanceRequestId : String
    , instanceType : String
    , instanceId : String
    , instanceHealth : InstanceHealthStatus
    }


type alias ActiveInstanceSet =
    List ActiveInstance


type ActivityStatus
    = ActivityStatusError
    | ActivityStatusPendingFulfillment
    | ActivityStatusPendingTermination
    | ActivityStatusFulfilled


activityStatus : Enum ActivityStatus
activityStatus =
    Enum.define
        [ ActivityStatusError
        , ActivityStatusPendingFulfillment
        , ActivityStatusPendingTermination
        , ActivityStatusFulfilled
        ]
        (\val ->
            case val of
                ActivityStatusError ->
                    "error"

                ActivityStatusPendingFulfillment ->
                    "pending_fulfillment"

                ActivityStatusPendingTermination ->
                    "pending_termination"

                ActivityStatusFulfilled ->
                    "fulfilled"
        )


type alias Address =
    { tags : TagList
    , publicIpv4Pool : String
    , publicIp : String
    , privateIpAddress : String
    , networkInterfaceOwnerId : String
    , networkInterfaceId : String
    , instanceId : String
    , domain : DomainType
    , associationId : String
    , allocationId : String
    }


type alias AddressList =
    List Address


type alias AdvertiseByoipCidrRequest =
    { dryRun : Bool, cidr : String }


type alias AdvertiseByoipCidrResult =
    { byoipCidr : ByoipCidr }


type Affinity
    = AffinityDefault
    | AffinityHost


affinity : Enum Affinity
affinity =
    Enum.define
        [ AffinityDefault, AffinityHost ]
        (\val ->
            case val of
                AffinityDefault ->
                    "default"

                AffinityHost ->
                    "host"
        )


type alias AllocateAddressRequest =
    { publicIpv4Pool : String, dryRun : Bool, domain : DomainType, address : String }


type alias AllocateAddressResult =
    { publicIpv4Pool : String, publicIp : String, domain : DomainType, allocationId : String }


type alias AllocateHostsRequest =
    { tagSpecifications : TagSpecificationList
    , quantity : Int
    , instanceType : String
    , hostRecovery : HostRecovery
    , clientToken : String
    , availabilityZone : String
    , autoPlacement : AutoPlacement
    }


type alias AllocateHostsResult =
    { hostIds : ResponseHostIdList }


type alias AllocationIdList =
    List String


type AllocationState
    = AllocationStateAvailable
    | AllocationStateUnderAssessment
    | AllocationStatePermanentFailure
    | AllocationStateReleased
    | AllocationStateReleasedPermanentFailure
    | AllocationStatePending


allocationState : Enum AllocationState
allocationState =
    Enum.define
        [ AllocationStateAvailable
        , AllocationStateUnderAssessment
        , AllocationStatePermanentFailure
        , AllocationStateReleased
        , AllocationStateReleasedPermanentFailure
        , AllocationStatePending
        ]
        (\val ->
            case val of
                AllocationStateAvailable ->
                    "available"

                AllocationStateUnderAssessment ->
                    "under-assessment"

                AllocationStatePermanentFailure ->
                    "permanent-failure"

                AllocationStateReleased ->
                    "released"

                AllocationStateReleasedPermanentFailure ->
                    "released-permanent-failure"

                AllocationStatePending ->
                    "pending"
        )


type AllocationStrategy
    = AllocationStrategyLowestPrice
    | AllocationStrategyDiversified
    | AllocationStrategyCapacityOptimized


allocationStrategy : Enum AllocationStrategy
allocationStrategy =
    Enum.define
        [ AllocationStrategyLowestPrice, AllocationStrategyDiversified, AllocationStrategyCapacityOptimized ]
        (\val ->
            case val of
                AllocationStrategyLowestPrice ->
                    "lowestPrice"

                AllocationStrategyDiversified ->
                    "diversified"

                AllocationStrategyCapacityOptimized ->
                    "capacityOptimized"
        )


type alias AllowedPrincipal =
    { principalType : PrincipalType, principal : String }


type alias AllowedPrincipalSet =
    List AllowedPrincipal


type alias ApplySecurityGroupsToClientVpnTargetNetworkRequest =
    { vpcId : String, securityGroupIds : ClientVpnSecurityGroupIdSet, dryRun : Bool, clientVpnEndpointId : String }


type alias ApplySecurityGroupsToClientVpnTargetNetworkResult =
    { securityGroupIds : ClientVpnSecurityGroupIdSet }


type ArchitectureValues
    = ArchitectureValuesI386
    | ArchitectureValuesX8664
    | ArchitectureValuesArm64


architectureValues : Enum ArchitectureValues
architectureValues =
    Enum.define
        [ ArchitectureValuesI386, ArchitectureValuesX8664, ArchitectureValuesArm64 ]
        (\val ->
            case val of
                ArchitectureValuesI386 ->
                    "i386"

                ArchitectureValuesX8664 ->
                    "x86_64"

                ArchitectureValuesArm64 ->
                    "arm64"
        )


type alias AssignIpv6AddressesRequest =
    { networkInterfaceId : String, ipv6Addresses : Ipv6AddressList, ipv6AddressCount : Int }


type alias AssignIpv6AddressesResult =
    { networkInterfaceId : String, assignedIpv6Addresses : Ipv6AddressList }


type alias AssignPrivateIpAddressesRequest =
    { secondaryPrivateIpAddressCount : Int
    , privateIpAddresses : PrivateIpAddressStringList
    , networkInterfaceId : String
    , allowReassignment : Bool
    }


type alias AssignPrivateIpAddressesResult =
    { networkInterfaceId : String, assignedPrivateIpAddresses : AssignedPrivateIpAddressList }


type alias AssignedPrivateIpAddress =
    { privateIpAddress : String }


type alias AssignedPrivateIpAddressList =
    List AssignedPrivateIpAddress


type alias AssociateAddressRequest =
    { publicIp : String
    , privateIpAddress : String
    , networkInterfaceId : String
    , instanceId : String
    , dryRun : Bool
    , allowReassociation : Bool
    , allocationId : String
    }


type alias AssociateAddressResult =
    { associationId : String }


type alias AssociateClientVpnTargetNetworkRequest =
    { subnetId : String, dryRun : Bool, clientVpnEndpointId : String, clientToken : String }


type alias AssociateClientVpnTargetNetworkResult =
    { status : AssociationStatus, associationId : String }


type alias AssociateDhcpOptionsRequest =
    { vpcId : String, dryRun : Bool, dhcpOptionsId : String }


type alias AssociateIamInstanceProfileRequest =
    { instanceId : String, iamInstanceProfile : IamInstanceProfileSpecification }


type alias AssociateIamInstanceProfileResult =
    { iamInstanceProfileAssociation : IamInstanceProfileAssociation }


type alias AssociateRouteTableRequest =
    { subnetId : String, routeTableId : String, dryRun : Bool }


type alias AssociateRouteTableResult =
    { associationId : String }


type alias AssociateSubnetCidrBlockRequest =
    { subnetId : String, ipv6CidrBlock : String }


type alias AssociateSubnetCidrBlockResult =
    { subnetId : String, ipv6CidrBlockAssociation : SubnetIpv6CidrBlockAssociation }


type alias AssociateTransitGatewayRouteTableRequest =
    { transitGatewayRouteTableId : String, transitGatewayAttachmentId : String, dryRun : Bool }


type alias AssociateTransitGatewayRouteTableResult =
    { association : TransitGatewayAssociation }


type alias AssociateVpcCidrBlockRequest =
    { vpcId : String, cidrBlock : String, amazonProvidedIpv6CidrBlock : Bool }


type alias AssociateVpcCidrBlockResult =
    { vpcId : String
    , ipv6CidrBlockAssociation : VpcIpv6CidrBlockAssociation
    , cidrBlockAssociation : VpcCidrBlockAssociation
    }


type AssociatedNetworkType
    = AssociatedNetworkTypeVpc


associatedNetworkType : Enum AssociatedNetworkType
associatedNetworkType =
    Enum.define
        [ AssociatedNetworkTypeVpc ]
        (\val ->
            case val of
                AssociatedNetworkTypeVpc ->
                    "vpc"
        )


type alias AssociatedTargetNetwork =
    { networkType : AssociatedNetworkType, networkId : String }


type alias AssociatedTargetNetworkSet =
    List AssociatedTargetNetwork


type alias AssociationIdList =
    List String


type alias AssociationStatus =
    { message : String, code : AssociationStatusCode }


type AssociationStatusCode
    = AssociationStatusCodeAssociating
    | AssociationStatusCodeAssociated
    | AssociationStatusCodeAssociationFailed
    | AssociationStatusCodeDisassociating
    | AssociationStatusCodeDisassociated


associationStatusCode : Enum AssociationStatusCode
associationStatusCode =
    Enum.define
        [ AssociationStatusCodeAssociating
        , AssociationStatusCodeAssociated
        , AssociationStatusCodeAssociationFailed
        , AssociationStatusCodeDisassociating
        , AssociationStatusCodeDisassociated
        ]
        (\val ->
            case val of
                AssociationStatusCodeAssociating ->
                    "associating"

                AssociationStatusCodeAssociated ->
                    "associated"

                AssociationStatusCodeAssociationFailed ->
                    "association-failed"

                AssociationStatusCodeDisassociating ->
                    "disassociating"

                AssociationStatusCodeDisassociated ->
                    "disassociated"
        )


type alias AttachClassicLinkVpcRequest =
    { vpcId : String, instanceId : String, groups : GroupIdStringList, dryRun : Bool }


type alias AttachClassicLinkVpcResult =
    { return : Bool }


type alias AttachInternetGatewayRequest =
    { vpcId : String, internetGatewayId : String, dryRun : Bool }


type alias AttachNetworkInterfaceRequest =
    { networkInterfaceId : String, instanceId : String, dryRun : Bool, deviceIndex : Int }


type alias AttachNetworkInterfaceResult =
    { attachmentId : String }


type alias AttachVolumeRequest =
    { volumeId : String, instanceId : String, dryRun : Bool, device : String }


type alias AttachVpnGatewayRequest =
    { vpnGatewayId : String, vpcId : String, dryRun : Bool }


type alias AttachVpnGatewayResult =
    { vpcAttachment : VpcAttachment }


type AttachmentStatus
    = AttachmentStatusAttaching
    | AttachmentStatusAttached
    | AttachmentStatusDetaching
    | AttachmentStatusDetached


attachmentStatus : Enum AttachmentStatus
attachmentStatus =
    Enum.define
        [ AttachmentStatusAttaching, AttachmentStatusAttached, AttachmentStatusDetaching, AttachmentStatusDetached ]
        (\val ->
            case val of
                AttachmentStatusAttaching ->
                    "attaching"

                AttachmentStatusAttached ->
                    "attached"

                AttachmentStatusDetaching ->
                    "detaching"

                AttachmentStatusDetached ->
                    "detached"
        )


type alias AttributeBooleanValue =
    { value : Bool }


type alias AttributeValue =
    { value : String }


type alias AuthorizationRule =
    { status : ClientVpnAuthorizationRuleStatus
    , groupId : String
    , destinationCidr : String
    , description : String
    , clientVpnEndpointId : String
    , accessAll : Bool
    }


type alias AuthorizationRuleSet =
    List AuthorizationRule


type alias AuthorizeClientVpnIngressRequest =
    { targetNetworkCidr : String
    , dryRun : Bool
    , description : String
    , clientVpnEndpointId : String
    , clientToken : String
    , authorizeAllGroups : Bool
    , accessGroupId : String
    }


type alias AuthorizeClientVpnIngressResult =
    { status : ClientVpnAuthorizationRuleStatus }


type alias AuthorizeSecurityGroupEgressRequest =
    { toPort : Int
    , sourceSecurityGroupOwnerId : String
    , sourceSecurityGroupName : String
    , ipProtocol : String
    , ipPermissions : IpPermissionList
    , groupId : String
    , fromPort : Int
    , dryRun : Bool
    , cidrIp : String
    }


type alias AuthorizeSecurityGroupIngressRequest =
    { toPort : Int
    , sourceSecurityGroupOwnerId : String
    , sourceSecurityGroupName : String
    , ipProtocol : String
    , ipPermissions : IpPermissionList
    , groupName : String
    , groupId : String
    , fromPort : Int
    , dryRun : Bool
    , cidrIp : String
    }


type AutoAcceptSharedAttachmentsValue
    = AutoAcceptSharedAttachmentsValueEnable
    | AutoAcceptSharedAttachmentsValueDisable


autoAcceptSharedAttachmentsValue : Enum AutoAcceptSharedAttachmentsValue
autoAcceptSharedAttachmentsValue =
    Enum.define
        [ AutoAcceptSharedAttachmentsValueEnable, AutoAcceptSharedAttachmentsValueDisable ]
        (\val ->
            case val of
                AutoAcceptSharedAttachmentsValueEnable ->
                    "enable"

                AutoAcceptSharedAttachmentsValueDisable ->
                    "disable"
        )


type AutoPlacement
    = AutoPlacementOn
    | AutoPlacementOff


autoPlacement : Enum AutoPlacement
autoPlacement =
    Enum.define
        [ AutoPlacementOn, AutoPlacementOff ]
        (\val ->
            case val of
                AutoPlacementOn ->
                    "on"

                AutoPlacementOff ->
                    "off"
        )


type alias AvailabilityZone =
    { zoneName : String
    , zoneId : String
    , state : AvailabilityZoneState
    , regionName : String
    , messages : AvailabilityZoneMessageList
    }


type alias AvailabilityZoneList =
    List AvailabilityZone


type alias AvailabilityZoneMessage =
    { message : String }


type alias AvailabilityZoneMessageList =
    List AvailabilityZoneMessage


type AvailabilityZoneState
    = AvailabilityZoneStateAvailable
    | AvailabilityZoneStateInformation
    | AvailabilityZoneStateImpaired
    | AvailabilityZoneStateUnavailable


availabilityZoneState : Enum AvailabilityZoneState
availabilityZoneState =
    Enum.define
        [ AvailabilityZoneStateAvailable
        , AvailabilityZoneStateInformation
        , AvailabilityZoneStateImpaired
        , AvailabilityZoneStateUnavailable
        ]
        (\val ->
            case val of
                AvailabilityZoneStateAvailable ->
                    "available"

                AvailabilityZoneStateInformation ->
                    "information"

                AvailabilityZoneStateImpaired ->
                    "impaired"

                AvailabilityZoneStateUnavailable ->
                    "unavailable"
        )


type alias AvailableCapacity =
    { availableVcpus : Int, availableInstanceCapacity : AvailableInstanceCapacityList }


type alias AvailableInstanceCapacityList =
    List InstanceCapacity


type BatchState
    = BatchStateSubmitted
    | BatchStateActive
    | BatchStateCancelled
    | BatchStateFailed
    | BatchStateCancelledRunning
    | BatchStateCancelledTerminating
    | BatchStateModifying


batchState : Enum BatchState
batchState =
    Enum.define
        [ BatchStateSubmitted
        , BatchStateActive
        , BatchStateCancelled
        , BatchStateFailed
        , BatchStateCancelledRunning
        , BatchStateCancelledTerminating
        , BatchStateModifying
        ]
        (\val ->
            case val of
                BatchStateSubmitted ->
                    "submitted"

                BatchStateActive ->
                    "active"

                BatchStateCancelled ->
                    "cancelled"

                BatchStateFailed ->
                    "failed"

                BatchStateCancelledRunning ->
                    "cancelled_running"

                BatchStateCancelledTerminating ->
                    "cancelled_terminating"

                BatchStateModifying ->
                    "modifying"
        )


type alias BillingProductList =
    List String


type alias Blob =
    String


type alias BlobAttributeValue =
    { value : String }


type alias BlockDeviceMapping =
    { virtualName : String, noDevice : String, ebs : EbsBlockDevice, deviceName : String }


type alias BlockDeviceMappingList =
    List BlockDeviceMapping


type alias BlockDeviceMappingRequestList =
    List BlockDeviceMapping


type alias Boolean =
    Bool


type alias BundleIdStringList =
    List String


type alias BundleInstanceRequest =
    { storage : Storage, instanceId : String, dryRun : Bool }


type alias BundleInstanceResult =
    { bundleTask : BundleTask }


type alias BundleTask =
    { updateTime : DateTime
    , storage : Storage
    , state : BundleTaskState
    , startTime : DateTime
    , progress : String
    , instanceId : String
    , bundleTaskError : BundleTaskError
    , bundleId : String
    }


type alias BundleTaskError =
    { message : String, code : String }


type alias BundleTaskList =
    List BundleTask


type BundleTaskState
    = BundleTaskStatePending
    | BundleTaskStateWaitingForShutdown
    | BundleTaskStateBundling
    | BundleTaskStateStoring
    | BundleTaskStateCancelling
    | BundleTaskStateComplete
    | BundleTaskStateFailed


bundleTaskState : Enum BundleTaskState
bundleTaskState =
    Enum.define
        [ BundleTaskStatePending
        , BundleTaskStateWaitingForShutdown
        , BundleTaskStateBundling
        , BundleTaskStateStoring
        , BundleTaskStateCancelling
        , BundleTaskStateComplete
        , BundleTaskStateFailed
        ]
        (\val ->
            case val of
                BundleTaskStatePending ->
                    "pending"

                BundleTaskStateWaitingForShutdown ->
                    "waiting-for-shutdown"

                BundleTaskStateBundling ->
                    "bundling"

                BundleTaskStateStoring ->
                    "storing"

                BundleTaskStateCancelling ->
                    "cancelling"

                BundleTaskStateComplete ->
                    "complete"

                BundleTaskStateFailed ->
                    "failed"
        )


type alias ByoipCidr =
    { statusMessage : String, state : ByoipCidrState, description : String, cidr : String }


type alias ByoipCidrSet =
    List ByoipCidr


type ByoipCidrState
    = ByoipCidrStateAdvertised
    | ByoipCidrStateDeprovisioned
    | ByoipCidrStateFailedDeprovision
    | ByoipCidrStateFailedProvision
    | ByoipCidrStatePendingDeprovision
    | ByoipCidrStatePendingProvision
    | ByoipCidrStateProvisioned


byoipCidrState : Enum ByoipCidrState
byoipCidrState =
    Enum.define
        [ ByoipCidrStateAdvertised
        , ByoipCidrStateDeprovisioned
        , ByoipCidrStateFailedDeprovision
        , ByoipCidrStateFailedProvision
        , ByoipCidrStatePendingDeprovision
        , ByoipCidrStatePendingProvision
        , ByoipCidrStateProvisioned
        ]
        (\val ->
            case val of
                ByoipCidrStateAdvertised ->
                    "advertised"

                ByoipCidrStateDeprovisioned ->
                    "deprovisioned"

                ByoipCidrStateFailedDeprovision ->
                    "failed-deprovision"

                ByoipCidrStateFailedProvision ->
                    "failed-provision"

                ByoipCidrStatePendingDeprovision ->
                    "pending-deprovision"

                ByoipCidrStatePendingProvision ->
                    "pending-provision"

                ByoipCidrStateProvisioned ->
                    "provisioned"
        )


type CancelBatchErrorCode
    = CancelBatchErrorCodeFleetRequestIdDoesNotExist
    | CancelBatchErrorCodeFleetRequestIdMalformed
    | CancelBatchErrorCodeFleetRequestNotInCancellableState
    | CancelBatchErrorCodeUnexpectedError


cancelBatchErrorCode : Enum CancelBatchErrorCode
cancelBatchErrorCode =
    Enum.define
        [ CancelBatchErrorCodeFleetRequestIdDoesNotExist
        , CancelBatchErrorCodeFleetRequestIdMalformed
        , CancelBatchErrorCodeFleetRequestNotInCancellableState
        , CancelBatchErrorCodeUnexpectedError
        ]
        (\val ->
            case val of
                CancelBatchErrorCodeFleetRequestIdDoesNotExist ->
                    "fleetRequestIdDoesNotExist"

                CancelBatchErrorCodeFleetRequestIdMalformed ->
                    "fleetRequestIdMalformed"

                CancelBatchErrorCodeFleetRequestNotInCancellableState ->
                    "fleetRequestNotInCancellableState"

                CancelBatchErrorCodeUnexpectedError ->
                    "unexpectedError"
        )


type alias CancelBundleTaskRequest =
    { dryRun : Bool, bundleId : String }


type alias CancelBundleTaskResult =
    { bundleTask : BundleTask }


type alias CancelCapacityReservationRequest =
    { dryRun : Bool, capacityReservationId : String }


type alias CancelCapacityReservationResult =
    { return : Bool }


type alias CancelConversionRequest =
    { reasonMessage : String, dryRun : Bool, conversionTaskId : String }


type alias CancelExportTaskRequest =
    { exportTaskId : String }


type alias CancelImportTaskRequest =
    { importTaskId : String, dryRun : Bool, cancelReason : String }


type alias CancelImportTaskResult =
    { state : String, previousState : String, importTaskId : String }


type alias CancelReservedInstancesListingRequest =
    { reservedInstancesListingId : String }


type alias CancelReservedInstancesListingResult =
    { reservedInstancesListings : ReservedInstancesListingList }


type alias CancelSpotFleetRequestsError =
    { message : String, code : CancelBatchErrorCode }


type alias CancelSpotFleetRequestsErrorItem =
    { spotFleetRequestId : String, error : CancelSpotFleetRequestsError }


type alias CancelSpotFleetRequestsErrorSet =
    List CancelSpotFleetRequestsErrorItem


type alias CancelSpotFleetRequestsRequest =
    { terminateInstances : Bool, spotFleetRequestIds : ValueStringList, dryRun : Bool }


type alias CancelSpotFleetRequestsResponse =
    { unsuccessfulFleetRequests : CancelSpotFleetRequestsErrorSet
    , successfulFleetRequests : CancelSpotFleetRequestsSuccessSet
    }


type alias CancelSpotFleetRequestsSuccessItem =
    { spotFleetRequestId : String
    , previousSpotFleetRequestState : BatchState
    , currentSpotFleetRequestState : BatchState
    }


type alias CancelSpotFleetRequestsSuccessSet =
    List CancelSpotFleetRequestsSuccessItem


type CancelSpotInstanceRequestState
    = CancelSpotInstanceRequestStateActive
    | CancelSpotInstanceRequestStateOpen
    | CancelSpotInstanceRequestStateClosed
    | CancelSpotInstanceRequestStateCancelled
    | CancelSpotInstanceRequestStateCompleted


cancelSpotInstanceRequestState : Enum CancelSpotInstanceRequestState
cancelSpotInstanceRequestState =
    Enum.define
        [ CancelSpotInstanceRequestStateActive
        , CancelSpotInstanceRequestStateOpen
        , CancelSpotInstanceRequestStateClosed
        , CancelSpotInstanceRequestStateCancelled
        , CancelSpotInstanceRequestStateCompleted
        ]
        (\val ->
            case val of
                CancelSpotInstanceRequestStateActive ->
                    "active"

                CancelSpotInstanceRequestStateOpen ->
                    "open"

                CancelSpotInstanceRequestStateClosed ->
                    "closed"

                CancelSpotInstanceRequestStateCancelled ->
                    "cancelled"

                CancelSpotInstanceRequestStateCompleted ->
                    "completed"
        )


type alias CancelSpotInstanceRequestsRequest =
    { spotInstanceRequestIds : SpotInstanceRequestIdList, dryRun : Bool }


type alias CancelSpotInstanceRequestsResult =
    { cancelledSpotInstanceRequests : CancelledSpotInstanceRequestList }


type alias CancelledSpotInstanceRequest =
    { state : CancelSpotInstanceRequestState, spotInstanceRequestId : String }


type alias CancelledSpotInstanceRequestList =
    List CancelledSpotInstanceRequest


type alias CapacityReservation =
    { totalInstanceCount : Int
    , tenancy : CapacityReservationTenancy
    , tags : TagList
    , state : CapacityReservationState
    , ownerId : String
    , instanceType : String
    , instancePlatform : CapacityReservationInstancePlatform
    , instanceMatchCriteria : InstanceMatchCriteria
    , ephemeralStorage : Bool
    , endDateType : EndDateType
    , endDate : DateTime
    , ebsOptimized : Bool
    , createDate : DateTime
    , capacityReservationId : String
    , capacityReservationArn : String
    , availableInstanceCount : Int
    , availabilityZoneId : String
    , availabilityZone : String
    }


type alias CapacityReservationIdSet =
    List String


type CapacityReservationInstancePlatform
    = CapacityReservationInstancePlatformLinuxUnix
    | CapacityReservationInstancePlatformRedHatEnterpriseLinux
    | CapacityReservationInstancePlatformSuseLinux
    | CapacityReservationInstancePlatformWindows
    | CapacityReservationInstancePlatformWindowsWithSqlServer
    | CapacityReservationInstancePlatformWindowsWithSqlServerEnterprise
    | CapacityReservationInstancePlatformWindowsWithSqlServerStandard
    | CapacityReservationInstancePlatformWindowsWithSqlServerWeb
    | CapacityReservationInstancePlatformLinuxWithSqlServerStandard
    | CapacityReservationInstancePlatformLinuxWithSqlServerWeb
    | CapacityReservationInstancePlatformLinuxWithSqlServerEnterprise


capacityReservationInstancePlatform : Enum CapacityReservationInstancePlatform
capacityReservationInstancePlatform =
    Enum.define
        [ CapacityReservationInstancePlatformLinuxUnix
        , CapacityReservationInstancePlatformRedHatEnterpriseLinux
        , CapacityReservationInstancePlatformSuseLinux
        , CapacityReservationInstancePlatformWindows
        , CapacityReservationInstancePlatformWindowsWithSqlServer
        , CapacityReservationInstancePlatformWindowsWithSqlServerEnterprise
        , CapacityReservationInstancePlatformWindowsWithSqlServerStandard
        , CapacityReservationInstancePlatformWindowsWithSqlServerWeb
        , CapacityReservationInstancePlatformLinuxWithSqlServerStandard
        , CapacityReservationInstancePlatformLinuxWithSqlServerWeb
        , CapacityReservationInstancePlatformLinuxWithSqlServerEnterprise
        ]
        (\val ->
            case val of
                CapacityReservationInstancePlatformLinuxUnix ->
                    "Linux/UNIX"

                CapacityReservationInstancePlatformRedHatEnterpriseLinux ->
                    "Red Hat Enterprise Linux"

                CapacityReservationInstancePlatformSuseLinux ->
                    "SUSE Linux"

                CapacityReservationInstancePlatformWindows ->
                    "Windows"

                CapacityReservationInstancePlatformWindowsWithSqlServer ->
                    "Windows with SQL Server"

                CapacityReservationInstancePlatformWindowsWithSqlServerEnterprise ->
                    "Windows with SQL Server Enterprise"

                CapacityReservationInstancePlatformWindowsWithSqlServerStandard ->
                    "Windows with SQL Server Standard"

                CapacityReservationInstancePlatformWindowsWithSqlServerWeb ->
                    "Windows with SQL Server Web"

                CapacityReservationInstancePlatformLinuxWithSqlServerStandard ->
                    "Linux with SQL Server Standard"

                CapacityReservationInstancePlatformLinuxWithSqlServerWeb ->
                    "Linux with SQL Server Web"

                CapacityReservationInstancePlatformLinuxWithSqlServerEnterprise ->
                    "Linux with SQL Server Enterprise"
        )


type CapacityReservationPreference
    = CapacityReservationPreferenceOpen
    | CapacityReservationPreferenceNone


capacityReservationPreference : Enum CapacityReservationPreference
capacityReservationPreference =
    Enum.define
        [ CapacityReservationPreferenceOpen, CapacityReservationPreferenceNone ]
        (\val ->
            case val of
                CapacityReservationPreferenceOpen ->
                    "open"

                CapacityReservationPreferenceNone ->
                    "none"
        )


type alias CapacityReservationSet =
    List CapacityReservation


type alias CapacityReservationSpecification =
    { capacityReservationTarget : CapacityReservationTarget
    , capacityReservationPreference : CapacityReservationPreference
    }


type alias CapacityReservationSpecificationResponse =
    { capacityReservationTarget : CapacityReservationTargetResponse
    , capacityReservationPreference : CapacityReservationPreference
    }


type CapacityReservationState
    = CapacityReservationStateActive
    | CapacityReservationStateExpired
    | CapacityReservationStateCancelled
    | CapacityReservationStatePending
    | CapacityReservationStateFailed


capacityReservationState : Enum CapacityReservationState
capacityReservationState =
    Enum.define
        [ CapacityReservationStateActive
        , CapacityReservationStateExpired
        , CapacityReservationStateCancelled
        , CapacityReservationStatePending
        , CapacityReservationStateFailed
        ]
        (\val ->
            case val of
                CapacityReservationStateActive ->
                    "active"

                CapacityReservationStateExpired ->
                    "expired"

                CapacityReservationStateCancelled ->
                    "cancelled"

                CapacityReservationStatePending ->
                    "pending"

                CapacityReservationStateFailed ->
                    "failed"
        )


type alias CapacityReservationTarget =
    { capacityReservationId : String }


type alias CapacityReservationTargetResponse =
    { capacityReservationId : String }


type CapacityReservationTenancy
    = CapacityReservationTenancyDefault
    | CapacityReservationTenancyDedicated


capacityReservationTenancy : Enum CapacityReservationTenancy
capacityReservationTenancy =
    Enum.define
        [ CapacityReservationTenancyDefault, CapacityReservationTenancyDedicated ]
        (\val ->
            case val of
                CapacityReservationTenancyDefault ->
                    "default"

                CapacityReservationTenancyDedicated ->
                    "dedicated"
        )


type alias CertificateAuthentication =
    { clientRootCertificateChain : String }


type alias CertificateAuthenticationRequest =
    { clientRootCertificateChainArn : String }


type alias CidrAuthorizationContext =
    { signature : String, message : String }


type alias CidrBlock =
    { cidrBlock : String }


type alias CidrBlockSet =
    List CidrBlock


type alias ClassicLinkDnsSupport =
    { vpcId : String, classicLinkDnsSupported : Bool }


type alias ClassicLinkDnsSupportList =
    List ClassicLinkDnsSupport


type alias ClassicLinkInstance =
    { vpcId : String, tags : TagList, instanceId : String, groups : GroupIdentifierList }


type alias ClassicLinkInstanceList =
    List ClassicLinkInstance


type alias ClassicLoadBalancer =
    { name : String }


type alias ClassicLoadBalancers =
    List ClassicLoadBalancer


type alias ClassicLoadBalancersConfig =
    { classicLoadBalancers : ClassicLoadBalancers }


type alias ClientCertificateRevocationListStatus =
    { message : String, code : ClientCertificateRevocationListStatusCode }


type ClientCertificateRevocationListStatusCode
    = ClientCertificateRevocationListStatusCodePending
    | ClientCertificateRevocationListStatusCodeActive


clientCertificateRevocationListStatusCode : Enum ClientCertificateRevocationListStatusCode
clientCertificateRevocationListStatusCode =
    Enum.define
        [ ClientCertificateRevocationListStatusCodePending, ClientCertificateRevocationListStatusCodeActive ]
        (\val ->
            case val of
                ClientCertificateRevocationListStatusCodePending ->
                    "pending"

                ClientCertificateRevocationListStatusCodeActive ->
                    "active"
        )


type alias ClientData =
    { uploadStart : DateTime, uploadSize : Float, uploadEnd : DateTime, comment : String }


type alias ClientVpnAuthentication =
    { type_ : ClientVpnAuthenticationType
    , mutualAuthentication : CertificateAuthentication
    , activeDirectory : DirectoryServiceAuthentication
    }


type alias ClientVpnAuthenticationList =
    List ClientVpnAuthentication


type alias ClientVpnAuthenticationRequest =
    { type_ : ClientVpnAuthenticationType
    , mutualAuthentication : CertificateAuthenticationRequest
    , activeDirectory : DirectoryServiceAuthenticationRequest
    }


type alias ClientVpnAuthenticationRequestList =
    List ClientVpnAuthenticationRequest


type ClientVpnAuthenticationType
    = ClientVpnAuthenticationTypeCertificateAuthentication
    | ClientVpnAuthenticationTypeDirectoryServiceAuthentication


clientVpnAuthenticationType : Enum ClientVpnAuthenticationType
clientVpnAuthenticationType =
    Enum.define
        [ ClientVpnAuthenticationTypeCertificateAuthentication
        , ClientVpnAuthenticationTypeDirectoryServiceAuthentication
        ]
        (\val ->
            case val of
                ClientVpnAuthenticationTypeCertificateAuthentication ->
                    "certificate-authentication"

                ClientVpnAuthenticationTypeDirectoryServiceAuthentication ->
                    "directory-service-authentication"
        )


type alias ClientVpnAuthorizationRuleStatus =
    { message : String, code : ClientVpnAuthorizationRuleStatusCode }


type ClientVpnAuthorizationRuleStatusCode
    = ClientVpnAuthorizationRuleStatusCodeAuthorizing
    | ClientVpnAuthorizationRuleStatusCodeActive
    | ClientVpnAuthorizationRuleStatusCodeFailed
    | ClientVpnAuthorizationRuleStatusCodeRevoking


clientVpnAuthorizationRuleStatusCode : Enum ClientVpnAuthorizationRuleStatusCode
clientVpnAuthorizationRuleStatusCode =
    Enum.define
        [ ClientVpnAuthorizationRuleStatusCodeAuthorizing
        , ClientVpnAuthorizationRuleStatusCodeActive
        , ClientVpnAuthorizationRuleStatusCodeFailed
        , ClientVpnAuthorizationRuleStatusCodeRevoking
        ]
        (\val ->
            case val of
                ClientVpnAuthorizationRuleStatusCodeAuthorizing ->
                    "authorizing"

                ClientVpnAuthorizationRuleStatusCodeActive ->
                    "active"

                ClientVpnAuthorizationRuleStatusCodeFailed ->
                    "failed"

                ClientVpnAuthorizationRuleStatusCodeRevoking ->
                    "revoking"
        )


type alias ClientVpnConnection =
    { username : String
    , timestamp : String
    , status : ClientVpnConnectionStatus
    , ingressPackets : String
    , ingressBytes : String
    , egressPackets : String
    , egressBytes : String
    , connectionId : String
    , connectionEstablishedTime : String
    , connectionEndTime : String
    , commonName : String
    , clientVpnEndpointId : String
    , clientIp : String
    }


type alias ClientVpnConnectionSet =
    List ClientVpnConnection


type alias ClientVpnConnectionStatus =
    { message : String, code : ClientVpnConnectionStatusCode }


type ClientVpnConnectionStatusCode
    = ClientVpnConnectionStatusCodeActive
    | ClientVpnConnectionStatusCodeFailedToTerminate
    | ClientVpnConnectionStatusCodeTerminating
    | ClientVpnConnectionStatusCodeTerminated


clientVpnConnectionStatusCode : Enum ClientVpnConnectionStatusCode
clientVpnConnectionStatusCode =
    Enum.define
        [ ClientVpnConnectionStatusCodeActive
        , ClientVpnConnectionStatusCodeFailedToTerminate
        , ClientVpnConnectionStatusCodeTerminating
        , ClientVpnConnectionStatusCodeTerminated
        ]
        (\val ->
            case val of
                ClientVpnConnectionStatusCodeActive ->
                    "active"

                ClientVpnConnectionStatusCodeFailedToTerminate ->
                    "failed-to-terminate"

                ClientVpnConnectionStatusCodeTerminating ->
                    "terminating"

                ClientVpnConnectionStatusCodeTerminated ->
                    "terminated"
        )


type alias ClientVpnEndpoint =
    { vpnProtocol : VpnProtocol
    , transportProtocol : TransportProtocol
    , tags : TagList
    , status : ClientVpnEndpointStatus
    , splitTunnel : Bool
    , serverCertificateArn : String
    , dnsServers : ValueStringList
    , dnsName : String
    , description : String
    , deletionTime : String
    , creationTime : String
    , connectionLogOptions : ConnectionLogResponseOptions
    , clientVpnEndpointId : String
    , clientCidrBlock : String
    , authenticationOptions : ClientVpnAuthenticationList
    , associatedTargetNetworks : AssociatedTargetNetworkSet
    }


type alias ClientVpnEndpointStatus =
    { message : String, code : ClientVpnEndpointStatusCode }


type ClientVpnEndpointStatusCode
    = ClientVpnEndpointStatusCodePendingAssociate
    | ClientVpnEndpointStatusCodeAvailable
    | ClientVpnEndpointStatusCodeDeleting
    | ClientVpnEndpointStatusCodeDeleted


clientVpnEndpointStatusCode : Enum ClientVpnEndpointStatusCode
clientVpnEndpointStatusCode =
    Enum.define
        [ ClientVpnEndpointStatusCodePendingAssociate
        , ClientVpnEndpointStatusCodeAvailable
        , ClientVpnEndpointStatusCodeDeleting
        , ClientVpnEndpointStatusCodeDeleted
        ]
        (\val ->
            case val of
                ClientVpnEndpointStatusCodePendingAssociate ->
                    "pending-associate"

                ClientVpnEndpointStatusCodeAvailable ->
                    "available"

                ClientVpnEndpointStatusCodeDeleting ->
                    "deleting"

                ClientVpnEndpointStatusCodeDeleted ->
                    "deleted"
        )


type alias ClientVpnRoute =
    { type_ : String
    , targetSubnet : String
    , status : ClientVpnRouteStatus
    , origin : String
    , destinationCidr : String
    , description : String
    , clientVpnEndpointId : String
    }


type alias ClientVpnRouteSet =
    List ClientVpnRoute


type alias ClientVpnRouteStatus =
    { message : String, code : ClientVpnRouteStatusCode }


type ClientVpnRouteStatusCode
    = ClientVpnRouteStatusCodeCreating
    | ClientVpnRouteStatusCodeActive
    | ClientVpnRouteStatusCodeFailed
    | ClientVpnRouteStatusCodeDeleting


clientVpnRouteStatusCode : Enum ClientVpnRouteStatusCode
clientVpnRouteStatusCode =
    Enum.define
        [ ClientVpnRouteStatusCodeCreating
        , ClientVpnRouteStatusCodeActive
        , ClientVpnRouteStatusCodeFailed
        , ClientVpnRouteStatusCodeDeleting
        ]
        (\val ->
            case val of
                ClientVpnRouteStatusCodeCreating ->
                    "creating"

                ClientVpnRouteStatusCodeActive ->
                    "active"

                ClientVpnRouteStatusCodeFailed ->
                    "failed"

                ClientVpnRouteStatusCodeDeleting ->
                    "deleting"
        )


type alias ClientVpnSecurityGroupIdSet =
    List String


type alias ConfirmProductInstanceRequest =
    { productCode : String, instanceId : String, dryRun : Bool }


type alias ConfirmProductInstanceResult =
    { return : Bool, ownerId : String }


type alias ConnectionLogOptions =
    { enabled : Bool, cloudwatchLogStream : String, cloudwatchLogGroup : String }


type alias ConnectionLogResponseOptions =
    { enabled : Bool, cloudwatchLogStream : String, cloudwatchLogGroup : String }


type alias ConnectionNotification =
    { vpcEndpointId : String
    , serviceId : String
    , connectionNotificationType : ConnectionNotificationType
    , connectionNotificationState : ConnectionNotificationState
    , connectionNotificationId : String
    , connectionNotificationArn : String
    , connectionEvents : ValueStringList
    }


type alias ConnectionNotificationSet =
    List ConnectionNotification


type ConnectionNotificationState
    = ConnectionNotificationStateEnabled
    | ConnectionNotificationStateDisabled


connectionNotificationState : Enum ConnectionNotificationState
connectionNotificationState =
    Enum.define
        [ ConnectionNotificationStateEnabled, ConnectionNotificationStateDisabled ]
        (\val ->
            case val of
                ConnectionNotificationStateEnabled ->
                    "Enabled"

                ConnectionNotificationStateDisabled ->
                    "Disabled"
        )


type ConnectionNotificationType
    = ConnectionNotificationTypeTopic


connectionNotificationType : Enum ConnectionNotificationType
connectionNotificationType =
    Enum.define
        [ ConnectionNotificationTypeTopic ]
        (\val ->
            case val of
                ConnectionNotificationTypeTopic ->
                    "Topic"
        )


type ContainerFormat
    = ContainerFormatOva


containerFormat : Enum ContainerFormat
containerFormat =
    Enum.define
        [ ContainerFormatOva ]
        (\val ->
            case val of
                ContainerFormatOva ->
                    "ova"
        )


type alias ConversionIdStringList =
    List String


type alias ConversionTask =
    { tags : TagList
    , statusMessage : String
    , state : ConversionTaskState
    , importVolume : ImportVolumeTaskDetails
    , importInstance : ImportInstanceTaskDetails
    , expirationTime : String
    , conversionTaskId : String
    }


type ConversionTaskState
    = ConversionTaskStateActive
    | ConversionTaskStateCancelling
    | ConversionTaskStateCancelled
    | ConversionTaskStateCompleted


conversionTaskState : Enum ConversionTaskState
conversionTaskState =
    Enum.define
        [ ConversionTaskStateActive
        , ConversionTaskStateCancelling
        , ConversionTaskStateCancelled
        , ConversionTaskStateCompleted
        ]
        (\val ->
            case val of
                ConversionTaskStateActive ->
                    "active"

                ConversionTaskStateCancelling ->
                    "cancelling"

                ConversionTaskStateCancelled ->
                    "cancelled"

                ConversionTaskStateCompleted ->
                    "completed"
        )


type alias CopyFpgaImageRequest =
    { sourceRegion : String
    , sourceFpgaImageId : String
    , name : String
    , dryRun : Bool
    , description : String
    , clientToken : String
    }


type alias CopyFpgaImageResult =
    { fpgaImageId : String }


type alias CopyImageRequest =
    { sourceRegion : String
    , sourceImageId : String
    , name : String
    , kmsKeyId : String
    , encrypted : Bool
    , dryRun : Bool
    , description : String
    , clientToken : String
    }


type alias CopyImageResult =
    { imageId : String }


type alias CopySnapshotRequest =
    { sourceSnapshotId : String
    , sourceRegion : String
    , presignedUrl : String
    , kmsKeyId : String
    , encrypted : Bool
    , dryRun : Bool
    , destinationRegion : String
    , description : String
    }


type alias CopySnapshotResult =
    { snapshotId : String }


type CopyTagsFromSource
    = CopyTagsFromSourceVolume


copyTagsFromSource : Enum CopyTagsFromSource
copyTagsFromSource =
    Enum.define
        [ CopyTagsFromSourceVolume ]
        (\val ->
            case val of
                CopyTagsFromSourceVolume ->
                    "volume"
        )


type alias CpuOptions =
    { threadsPerCore : Int, coreCount : Int }


type alias CpuOptionsRequest =
    { threadsPerCore : Int, coreCount : Int }


type alias CreateCapacityReservationRequest =
    { tenancy : CapacityReservationTenancy
    , tagSpecifications : TagSpecificationList
    , instanceType : String
    , instancePlatform : CapacityReservationInstancePlatform
    , instanceMatchCriteria : InstanceMatchCriteria
    , instanceCount : Int
    , ephemeralStorage : Bool
    , endDateType : EndDateType
    , endDate : DateTime
    , ebsOptimized : Bool
    , dryRun : Bool
    , clientToken : String
    , availabilityZoneId : String
    , availabilityZone : String
    }


type alias CreateCapacityReservationResult =
    { capacityReservation : CapacityReservation }


type alias CreateClientVpnEndpointRequest =
    { transportProtocol : TransportProtocol
    , tagSpecifications : TagSpecificationList
    , splitTunnel : Bool
    , serverCertificateArn : String
    , dryRun : Bool
    , dnsServers : ValueStringList
    , description : String
    , connectionLogOptions : ConnectionLogOptions
    , clientToken : String
    , clientCidrBlock : String
    , authenticationOptions : ClientVpnAuthenticationRequestList
    }


type alias CreateClientVpnEndpointResult =
    { status : ClientVpnEndpointStatus, dnsName : String, clientVpnEndpointId : String }


type alias CreateClientVpnRouteRequest =
    { targetVpcSubnetId : String
    , dryRun : Bool
    , destinationCidrBlock : String
    , description : String
    , clientVpnEndpointId : String
    , clientToken : String
    }


type alias CreateClientVpnRouteResult =
    { status : ClientVpnRouteStatus }


type alias CreateCustomerGatewayRequest =
    { type_ : GatewayType, publicIp : String, dryRun : Bool, bgpAsn : Int }


type alias CreateCustomerGatewayResult =
    { customerGateway : CustomerGateway }


type alias CreateDefaultSubnetRequest =
    { dryRun : Bool, availabilityZone : String }


type alias CreateDefaultSubnetResult =
    { subnet : Subnet }


type alias CreateDefaultVpcRequest =
    { dryRun : Bool }


type alias CreateDefaultVpcResult =
    { vpc : Vpc }


type alias CreateDhcpOptionsRequest =
    { dryRun : Bool, dhcpConfigurations : NewDhcpConfigurationList }


type alias CreateDhcpOptionsResult =
    { dhcpOptions : DhcpOptions }


type alias CreateEgressOnlyInternetGatewayRequest =
    { vpcId : String, dryRun : Bool, clientToken : String }


type alias CreateEgressOnlyInternetGatewayResult =
    { egressOnlyInternetGateway : EgressOnlyInternetGateway, clientToken : String }


type alias CreateFleetError =
    { lifecycle : InstanceLifecycle
    , launchTemplateAndOverrides : LaunchTemplateAndOverridesResponse
    , errorMessage : String
    , errorCode : String
    }


type alias CreateFleetErrorsSet =
    List CreateFleetError


type alias CreateFleetInstance =
    { platform : PlatformValues
    , lifecycle : InstanceLifecycle
    , launchTemplateAndOverrides : LaunchTemplateAndOverridesResponse
    , instanceType : InstanceType
    , instanceIds : InstanceIdsSet
    }


type alias CreateFleetInstancesSet =
    List CreateFleetInstance


type alias CreateFleetRequest =
    { validUntil : DateTime
    , validFrom : DateTime
    , type_ : FleetType
    , terminateInstancesWithExpiration : Bool
    , targetCapacitySpecification : TargetCapacitySpecificationRequest
    , tagSpecifications : TagSpecificationList
    , spotOptions : SpotOptionsRequest
    , replaceUnhealthyInstances : Bool
    , onDemandOptions : OnDemandOptionsRequest
    , launchTemplateConfigs : FleetLaunchTemplateConfigListRequest
    , excessCapacityTerminationPolicy : FleetExcessCapacityTerminationPolicy
    , dryRun : Bool
    , clientToken : String
    }


type alias CreateFleetResult =
    { instances : CreateFleetInstancesSet, fleetId : String, errors : CreateFleetErrorsSet }


type alias CreateFlowLogsRequest =
    { trafficType : TrafficType
    , resourceType : FlowLogsResourceType
    , resourceIds : ValueStringList
    , logGroupName : String
    , logDestinationType : LogDestinationType
    , logDestination : String
    , dryRun : Bool
    , deliverLogsPermissionArn : String
    , clientToken : String
    }


type alias CreateFlowLogsResult =
    { unsuccessful : UnsuccessfulItemSet, flowLogIds : ValueStringList, clientToken : String }


type alias CreateFpgaImageRequest =
    { name : String
    , logsStorageLocation : StorageLocation
    , inputStorageLocation : StorageLocation
    , dryRun : Bool
    , description : String
    , clientToken : String
    }


type alias CreateFpgaImageResult =
    { fpgaImageId : String, fpgaImageGlobalId : String }


type alias CreateImageRequest =
    { noReboot : Bool
    , name : String
    , instanceId : String
    , dryRun : Bool
    , description : String
    , blockDeviceMappings : BlockDeviceMappingRequestList
    }


type alias CreateImageResult =
    { imageId : String }


type alias CreateInstanceExportTaskRequest =
    { targetEnvironment : ExportEnvironment
    , instanceId : String
    , exportToS3Task : ExportToS3TaskSpecification
    , description : String
    }


type alias CreateInstanceExportTaskResult =
    { exportTask : ExportTask }


type alias CreateInternetGatewayRequest =
    { dryRun : Bool }


type alias CreateInternetGatewayResult =
    { internetGateway : InternetGateway }


type alias CreateKeyPairRequest =
    { keyName : String, dryRun : Bool }


type alias CreateLaunchTemplateRequest =
    { versionDescription : VersionDescription
    , tagSpecifications : TagSpecificationList
    , launchTemplateName : LaunchTemplateName
    , launchTemplateData : RequestLaunchTemplateData
    , dryRun : Bool
    , clientToken : String
    }


type alias CreateLaunchTemplateResult =
    { launchTemplate : LaunchTemplate }


type alias CreateLaunchTemplateVersionRequest =
    { versionDescription : VersionDescription
    , sourceVersion : String
    , launchTemplateName : LaunchTemplateName
    , launchTemplateId : String
    , launchTemplateData : RequestLaunchTemplateData
    , dryRun : Bool
    , clientToken : String
    }


type alias CreateLaunchTemplateVersionResult =
    { launchTemplateVersion : LaunchTemplateVersion }


type alias CreateNatGatewayRequest =
    { subnetId : String, clientToken : String, allocationId : String }


type alias CreateNatGatewayResult =
    { natGateway : NatGateway, clientToken : String }


type alias CreateNetworkAclEntryRequest =
    { ruleNumber : Int
    , ruleAction : RuleAction
    , protocol : String
    , portRange : PortRange
    , networkAclId : String
    , ipv6CidrBlock : String
    , icmpTypeCode : IcmpTypeCode
    , egress : Bool
    , dryRun : Bool
    , cidrBlock : String
    }


type alias CreateNetworkAclRequest =
    { vpcId : String, dryRun : Bool }


type alias CreateNetworkAclResult =
    { networkAcl : NetworkAcl }


type alias CreateNetworkInterfacePermissionRequest =
    { permission : InterfacePermissionType
    , networkInterfaceId : String
    , dryRun : Bool
    , awsService : String
    , awsAccountId : String
    }


type alias CreateNetworkInterfacePermissionResult =
    { interfacePermission : NetworkInterfacePermission }


type alias CreateNetworkInterfaceRequest =
    { subnetId : String
    , secondaryPrivateIpAddressCount : Int
    , privateIpAddresses : PrivateIpAddressSpecificationList
    , privateIpAddress : String
    , ipv6Addresses : InstanceIpv6AddressList
    , ipv6AddressCount : Int
    , interfaceType : NetworkInterfaceCreationType
    , groups : SecurityGroupIdStringList
    , dryRun : Bool
    , description : String
    }


type alias CreateNetworkInterfaceResult =
    { networkInterface : NetworkInterface }


type alias CreatePlacementGroupRequest =
    { strategy : PlacementStrategy, partitionCount : Int, groupName : String, dryRun : Bool }


type alias CreateReservedInstancesListingRequest =
    { reservedInstancesId : String
    , priceSchedules : PriceScheduleSpecificationList
    , instanceCount : Int
    , clientToken : String
    }


type alias CreateReservedInstancesListingResult =
    { reservedInstancesListings : ReservedInstancesListingList }


type alias CreateRouteRequest =
    { vpcPeeringConnectionId : String
    , transitGatewayId : String
    , routeTableId : String
    , networkInterfaceId : String
    , natGatewayId : String
    , instanceId : String
    , gatewayId : String
    , egressOnlyInternetGatewayId : String
    , dryRun : Bool
    , destinationIpv6CidrBlock : String
    , destinationCidrBlock : String
    }


type alias CreateRouteResult =
    { return : Bool }


type alias CreateRouteTableRequest =
    { vpcId : String, dryRun : Bool }


type alias CreateRouteTableResult =
    { routeTable : RouteTable }


type alias CreateSecurityGroupRequest =
    { vpcId : String, groupName : String, dryRun : Bool, description : String }


type alias CreateSecurityGroupResult =
    { groupId : String }


type alias CreateSnapshotRequest =
    { volumeId : String, tagSpecifications : TagSpecificationList, dryRun : Bool, description : String }


type alias CreateSnapshotsRequest =
    { tagSpecifications : TagSpecificationList
    , instanceSpecification : InstanceSpecification
    , dryRun : Bool
    , description : String
    , copyTagsFromSource : CopyTagsFromSource
    }


type alias CreateSnapshotsResult =
    { snapshots : SnapshotSet }


type alias CreateSpotDatafeedSubscriptionRequest =
    { prefix : String, dryRun : Bool, bucket : String }


type alias CreateSpotDatafeedSubscriptionResult =
    { spotDatafeedSubscription : SpotDatafeedSubscription }


type alias CreateSubnetRequest =
    { vpcId : String
    , ipv6CidrBlock : String
    , dryRun : Bool
    , cidrBlock : String
    , availabilityZoneId : String
    , availabilityZone : String
    }


type alias CreateSubnetResult =
    { subnet : Subnet }


type alias CreateTagsRequest =
    { tags : TagList, resources : ResourceIdList, dryRun : Bool }


type alias CreateTrafficMirrorFilterRequest =
    { tagSpecifications : TagSpecificationList, dryRun : Bool, description : String, clientToken : String }


type alias CreateTrafficMirrorFilterResult =
    { trafficMirrorFilter : TrafficMirrorFilter, clientToken : String }


type alias CreateTrafficMirrorFilterRuleRequest =
    { trafficMirrorFilterId : String
    , trafficDirection : TrafficDirection
    , sourcePortRange : TrafficMirrorPortRangeRequest
    , sourceCidrBlock : String
    , ruleNumber : Int
    , ruleAction : TrafficMirrorRuleAction
    , protocol : Int
    , dryRun : Bool
    , destinationPortRange : TrafficMirrorPortRangeRequest
    , destinationCidrBlock : String
    , description : String
    , clientToken : String
    }


type alias CreateTrafficMirrorFilterRuleResult =
    { trafficMirrorFilterRule : TrafficMirrorFilterRule, clientToken : String }


type alias CreateTrafficMirrorSessionRequest =
    { virtualNetworkId : Int
    , trafficMirrorTargetId : String
    , trafficMirrorFilterId : String
    , tagSpecifications : TagSpecificationList
    , sessionNumber : Int
    , packetLength : Int
    , networkInterfaceId : String
    , dryRun : Bool
    , description : String
    , clientToken : String
    }


type alias CreateTrafficMirrorSessionResult =
    { trafficMirrorSession : TrafficMirrorSession, clientToken : String }


type alias CreateTrafficMirrorTargetRequest =
    { tagSpecifications : TagSpecificationList
    , networkLoadBalancerArn : String
    , networkInterfaceId : String
    , dryRun : Bool
    , description : String
    , clientToken : String
    }


type alias CreateTrafficMirrorTargetResult =
    { trafficMirrorTarget : TrafficMirrorTarget, clientToken : String }


type alias CreateTransitGatewayRequest =
    { tagSpecifications : TagSpecificationList
    , options : TransitGatewayRequestOptions
    , dryRun : Bool
    , description : String
    }


type alias CreateTransitGatewayResult =
    { transitGateway : TransitGateway }


type alias CreateTransitGatewayRouteRequest =
    { transitGatewayRouteTableId : String
    , transitGatewayAttachmentId : String
    , dryRun : Bool
    , destinationCidrBlock : String
    , blackhole : Bool
    }


type alias CreateTransitGatewayRouteResult =
    { route : TransitGatewayRoute }


type alias CreateTransitGatewayRouteTableRequest =
    { transitGatewayId : String, tagSpecifications : TagSpecificationList, dryRun : Bool }


type alias CreateTransitGatewayRouteTableResult =
    { transitGatewayRouteTable : TransitGatewayRouteTable }


type alias CreateTransitGatewayVpcAttachmentRequest =
    { vpcId : String
    , transitGatewayId : String
    , tagSpecifications : TagSpecificationList
    , subnetIds : ValueStringList
    , options : CreateTransitGatewayVpcAttachmentRequestOptions
    , dryRun : Bool
    }


type alias CreateTransitGatewayVpcAttachmentRequestOptions =
    { ipv6Support : Ipv6SupportValue, dnsSupport : DnsSupportValue }


type alias CreateTransitGatewayVpcAttachmentResult =
    { transitGatewayVpcAttachment : TransitGatewayVpcAttachment }


type alias CreateVolumePermission =
    { userId : String, group : PermissionGroup }


type alias CreateVolumePermissionList =
    List CreateVolumePermission


type alias CreateVolumePermissionModifications =
    { remove : CreateVolumePermissionList, add : CreateVolumePermissionList }


type alias CreateVolumeRequest =
    { volumeType : VolumeType
    , tagSpecifications : TagSpecificationList
    , snapshotId : String
    , size : Int
    , kmsKeyId : String
    , iops : Int
    , encrypted : Bool
    , dryRun : Bool
    , availabilityZone : String
    }


type alias CreateVpcEndpointConnectionNotificationRequest =
    { vpcEndpointId : String
    , serviceId : String
    , dryRun : Bool
    , connectionNotificationArn : String
    , connectionEvents : ValueStringList
    , clientToken : String
    }


type alias CreateVpcEndpointConnectionNotificationResult =
    { connectionNotification : ConnectionNotification, clientToken : String }


type alias CreateVpcEndpointRequest =
    { vpcId : String
    , vpcEndpointType : VpcEndpointType
    , subnetIds : ValueStringList
    , serviceName : String
    , securityGroupIds : ValueStringList
    , routeTableIds : ValueStringList
    , privateDnsEnabled : Bool
    , policyDocument : String
    , dryRun : Bool
    , clientToken : String
    }


type alias CreateVpcEndpointResult =
    { vpcEndpoint : VpcEndpoint, clientToken : String }


type alias CreateVpcEndpointServiceConfigurationRequest =
    { networkLoadBalancerArns : ValueStringList, dryRun : Bool, clientToken : String, acceptanceRequired : Bool }


type alias CreateVpcEndpointServiceConfigurationResult =
    { serviceConfiguration : ServiceConfiguration, clientToken : String }


type alias CreateVpcPeeringConnectionRequest =
    { vpcId : String, peerVpcId : String, peerRegion : String, peerOwnerId : String, dryRun : Bool }


type alias CreateVpcPeeringConnectionResult =
    { vpcPeeringConnection : VpcPeeringConnection }


type alias CreateVpcRequest =
    { instanceTenancy : Tenancy, dryRun : Bool, cidrBlock : String, amazonProvidedIpv6CidrBlock : Bool }


type alias CreateVpcResult =
    { vpc : Vpc }


type alias CreateVpnConnectionRequest =
    { vpnGatewayId : String
    , type_ : String
    , transitGatewayId : String
    , options : VpnConnectionOptionsSpecification
    , dryRun : Bool
    , customerGatewayId : String
    }


type alias CreateVpnConnectionResult =
    { vpnConnection : VpnConnection }


type alias CreateVpnConnectionRouteRequest =
    { vpnConnectionId : String, destinationCidrBlock : String }


type alias CreateVpnGatewayRequest =
    { type_ : GatewayType, dryRun : Bool, availabilityZone : String, amazonSideAsn : Int }


type alias CreateVpnGatewayResult =
    { vpnGateway : VpnGateway }


type alias CreditSpecification =
    { cpuCredits : String }


type alias CreditSpecificationRequest =
    { cpuCredits : String }


type CurrencyCodeValues
    = CurrencyCodeValuesUsd


currencyCodeValues : Enum CurrencyCodeValues
currencyCodeValues =
    Enum.define
        [ CurrencyCodeValuesUsd ]
        (\val ->
            case val of
                CurrencyCodeValuesUsd ->
                    "USD"
        )


type alias CustomerGateway =
    { type_ : String, tags : TagList, state : String, ipAddress : String, customerGatewayId : String, bgpAsn : String }


type alias CustomerGatewayIdStringList =
    List String


type alias CustomerGatewayList =
    List CustomerGateway


type DatafeedSubscriptionState
    = DatafeedSubscriptionStateActive
    | DatafeedSubscriptionStateInactive


datafeedSubscriptionState : Enum DatafeedSubscriptionState
datafeedSubscriptionState =
    Enum.define
        [ DatafeedSubscriptionStateActive, DatafeedSubscriptionStateInactive ]
        (\val ->
            case val of
                DatafeedSubscriptionStateActive ->
                    "Active"

                DatafeedSubscriptionStateInactive ->
                    "Inactive"
        )


type alias DateTime =
    String


type DefaultRouteTableAssociationValue
    = DefaultRouteTableAssociationValueEnable
    | DefaultRouteTableAssociationValueDisable


defaultRouteTableAssociationValue : Enum DefaultRouteTableAssociationValue
defaultRouteTableAssociationValue =
    Enum.define
        [ DefaultRouteTableAssociationValueEnable, DefaultRouteTableAssociationValueDisable ]
        (\val ->
            case val of
                DefaultRouteTableAssociationValueEnable ->
                    "enable"

                DefaultRouteTableAssociationValueDisable ->
                    "disable"
        )


type DefaultRouteTablePropagationValue
    = DefaultRouteTablePropagationValueEnable
    | DefaultRouteTablePropagationValueDisable


defaultRouteTablePropagationValue : Enum DefaultRouteTablePropagationValue
defaultRouteTablePropagationValue =
    Enum.define
        [ DefaultRouteTablePropagationValueEnable, DefaultRouteTablePropagationValueDisable ]
        (\val ->
            case val of
                DefaultRouteTablePropagationValueEnable ->
                    "enable"

                DefaultRouteTablePropagationValueDisable ->
                    "disable"
        )


type DefaultTargetCapacityType
    = DefaultTargetCapacityTypeSpot
    | DefaultTargetCapacityTypeOnDemand


defaultTargetCapacityType : Enum DefaultTargetCapacityType
defaultTargetCapacityType =
    Enum.define
        [ DefaultTargetCapacityTypeSpot, DefaultTargetCapacityTypeOnDemand ]
        (\val ->
            case val of
                DefaultTargetCapacityTypeSpot ->
                    "spot"

                DefaultTargetCapacityTypeOnDemand ->
                    "on-demand"
        )


type alias DeleteClientVpnEndpointRequest =
    { dryRun : Bool, clientVpnEndpointId : String }


type alias DeleteClientVpnEndpointResult =
    { status : ClientVpnEndpointStatus }


type alias DeleteClientVpnRouteRequest =
    { targetVpcSubnetId : String, dryRun : Bool, destinationCidrBlock : String, clientVpnEndpointId : String }


type alias DeleteClientVpnRouteResult =
    { status : ClientVpnRouteStatus }


type alias DeleteCustomerGatewayRequest =
    { dryRun : Bool, customerGatewayId : String }


type alias DeleteDhcpOptionsRequest =
    { dryRun : Bool, dhcpOptionsId : String }


type alias DeleteEgressOnlyInternetGatewayRequest =
    { egressOnlyInternetGatewayId : String, dryRun : Bool }


type alias DeleteEgressOnlyInternetGatewayResult =
    { returnCode : Bool }


type alias DeleteFleetError =
    { message : String, code : DeleteFleetErrorCode }


type DeleteFleetErrorCode
    = DeleteFleetErrorCodeFleetIdDoesNotExist
    | DeleteFleetErrorCodeFleetIdMalformed
    | DeleteFleetErrorCodeFleetNotInDeletableState
    | DeleteFleetErrorCodeUnexpectedError


deleteFleetErrorCode : Enum DeleteFleetErrorCode
deleteFleetErrorCode =
    Enum.define
        [ DeleteFleetErrorCodeFleetIdDoesNotExist
        , DeleteFleetErrorCodeFleetIdMalformed
        , DeleteFleetErrorCodeFleetNotInDeletableState
        , DeleteFleetErrorCodeUnexpectedError
        ]
        (\val ->
            case val of
                DeleteFleetErrorCodeFleetIdDoesNotExist ->
                    "fleetIdDoesNotExist"

                DeleteFleetErrorCodeFleetIdMalformed ->
                    "fleetIdMalformed"

                DeleteFleetErrorCodeFleetNotInDeletableState ->
                    "fleetNotInDeletableState"

                DeleteFleetErrorCodeUnexpectedError ->
                    "unexpectedError"
        )


type alias DeleteFleetErrorItem =
    { fleetId : String, error : DeleteFleetError }


type alias DeleteFleetErrorSet =
    List DeleteFleetErrorItem


type alias DeleteFleetSuccessItem =
    { previousFleetState : FleetStateCode, fleetId : String, currentFleetState : FleetStateCode }


type alias DeleteFleetSuccessSet =
    List DeleteFleetSuccessItem


type alias DeleteFleetsRequest =
    { terminateInstances : Bool, fleetIds : FleetIdSet, dryRun : Bool }


type alias DeleteFleetsResult =
    { unsuccessfulFleetDeletions : DeleteFleetErrorSet, successfulFleetDeletions : DeleteFleetSuccessSet }


type alias DeleteFlowLogsRequest =
    { flowLogIds : ValueStringList, dryRun : Bool }


type alias DeleteFlowLogsResult =
    { unsuccessful : UnsuccessfulItemSet }


type alias DeleteFpgaImageRequest =
    { fpgaImageId : String, dryRun : Bool }


type alias DeleteFpgaImageResult =
    { return : Bool }


type alias DeleteInternetGatewayRequest =
    { internetGatewayId : String, dryRun : Bool }


type alias DeleteKeyPairRequest =
    { keyName : String, dryRun : Bool }


type alias DeleteLaunchTemplateRequest =
    { launchTemplateName : LaunchTemplateName, launchTemplateId : String, dryRun : Bool }


type alias DeleteLaunchTemplateResult =
    { launchTemplate : LaunchTemplate }


type alias DeleteLaunchTemplateVersionsRequest =
    { versions : VersionStringList, launchTemplateName : LaunchTemplateName, launchTemplateId : String, dryRun : Bool }


type alias DeleteLaunchTemplateVersionsResponseErrorItem =
    { versionNumber : Int, responseError : ResponseError, launchTemplateName : String, launchTemplateId : String }


type alias DeleteLaunchTemplateVersionsResponseErrorSet =
    List DeleteLaunchTemplateVersionsResponseErrorItem


type alias DeleteLaunchTemplateVersionsResponseSuccessItem =
    { versionNumber : Int, launchTemplateName : String, launchTemplateId : String }


type alias DeleteLaunchTemplateVersionsResponseSuccessSet =
    List DeleteLaunchTemplateVersionsResponseSuccessItem


type alias DeleteLaunchTemplateVersionsResult =
    { unsuccessfullyDeletedLaunchTemplateVersions : DeleteLaunchTemplateVersionsResponseErrorSet
    , successfullyDeletedLaunchTemplateVersions : DeleteLaunchTemplateVersionsResponseSuccessSet
    }


type alias DeleteNatGatewayRequest =
    { natGatewayId : String }


type alias DeleteNatGatewayResult =
    { natGatewayId : String }


type alias DeleteNetworkAclEntryRequest =
    { ruleNumber : Int, networkAclId : String, egress : Bool, dryRun : Bool }


type alias DeleteNetworkAclRequest =
    { networkAclId : String, dryRun : Bool }


type alias DeleteNetworkInterfacePermissionRequest =
    { networkInterfacePermissionId : String, force : Bool, dryRun : Bool }


type alias DeleteNetworkInterfacePermissionResult =
    { return : Bool }


type alias DeleteNetworkInterfaceRequest =
    { networkInterfaceId : String, dryRun : Bool }


type alias DeletePlacementGroupRequest =
    { groupName : String, dryRun : Bool }


type alias DeleteRouteRequest =
    { routeTableId : String, dryRun : Bool, destinationIpv6CidrBlock : String, destinationCidrBlock : String }


type alias DeleteRouteTableRequest =
    { routeTableId : String, dryRun : Bool }


type alias DeleteSecurityGroupRequest =
    { groupName : String, groupId : String, dryRun : Bool }


type alias DeleteSnapshotRequest =
    { snapshotId : String, dryRun : Bool }


type alias DeleteSpotDatafeedSubscriptionRequest =
    { dryRun : Bool }


type alias DeleteSubnetRequest =
    { subnetId : String, dryRun : Bool }


type alias DeleteTagsRequest =
    { tags : TagList, resources : ResourceIdList, dryRun : Bool }


type alias DeleteTrafficMirrorFilterRequest =
    { trafficMirrorFilterId : String, dryRun : Bool }


type alias DeleteTrafficMirrorFilterResult =
    { trafficMirrorFilterId : String }


type alias DeleteTrafficMirrorFilterRuleRequest =
    { trafficMirrorFilterRuleId : String, dryRun : Bool }


type alias DeleteTrafficMirrorFilterRuleResult =
    { trafficMirrorFilterRuleId : String }


type alias DeleteTrafficMirrorSessionRequest =
    { trafficMirrorSessionId : String, dryRun : Bool }


type alias DeleteTrafficMirrorSessionResult =
    { trafficMirrorSessionId : String }


type alias DeleteTrafficMirrorTargetRequest =
    { trafficMirrorTargetId : String, dryRun : Bool }


type alias DeleteTrafficMirrorTargetResult =
    { trafficMirrorTargetId : String }


type alias DeleteTransitGatewayRequest =
    { transitGatewayId : String, dryRun : Bool }


type alias DeleteTransitGatewayResult =
    { transitGateway : TransitGateway }


type alias DeleteTransitGatewayRouteRequest =
    { transitGatewayRouteTableId : String, dryRun : Bool, destinationCidrBlock : String }


type alias DeleteTransitGatewayRouteResult =
    { route : TransitGatewayRoute }


type alias DeleteTransitGatewayRouteTableRequest =
    { transitGatewayRouteTableId : String, dryRun : Bool }


type alias DeleteTransitGatewayRouteTableResult =
    { transitGatewayRouteTable : TransitGatewayRouteTable }


type alias DeleteTransitGatewayVpcAttachmentRequest =
    { transitGatewayAttachmentId : String, dryRun : Bool }


type alias DeleteTransitGatewayVpcAttachmentResult =
    { transitGatewayVpcAttachment : TransitGatewayVpcAttachment }


type alias DeleteVolumeRequest =
    { volumeId : String, dryRun : Bool }


type alias DeleteVpcEndpointConnectionNotificationsRequest =
    { dryRun : Bool, connectionNotificationIds : ValueStringList }


type alias DeleteVpcEndpointConnectionNotificationsResult =
    { unsuccessful : UnsuccessfulItemSet }


type alias DeleteVpcEndpointServiceConfigurationsRequest =
    { serviceIds : ValueStringList, dryRun : Bool }


type alias DeleteVpcEndpointServiceConfigurationsResult =
    { unsuccessful : UnsuccessfulItemSet }


type alias DeleteVpcEndpointsRequest =
    { vpcEndpointIds : ValueStringList, dryRun : Bool }


type alias DeleteVpcEndpointsResult =
    { unsuccessful : UnsuccessfulItemSet }


type alias DeleteVpcPeeringConnectionRequest =
    { vpcPeeringConnectionId : String, dryRun : Bool }


type alias DeleteVpcPeeringConnectionResult =
    { return : Bool }


type alias DeleteVpcRequest =
    { vpcId : String, dryRun : Bool }


type alias DeleteVpnConnectionRequest =
    { vpnConnectionId : String, dryRun : Bool }


type alias DeleteVpnConnectionRouteRequest =
    { vpnConnectionId : String, destinationCidrBlock : String }


type alias DeleteVpnGatewayRequest =
    { vpnGatewayId : String, dryRun : Bool }


type alias DeprovisionByoipCidrRequest =
    { dryRun : Bool, cidr : String }


type alias DeprovisionByoipCidrResult =
    { byoipCidr : ByoipCidr }


type alias DeregisterImageRequest =
    { imageId : String, dryRun : Bool }


type alias DescribeAccountAttributesRequest =
    { dryRun : Bool, attributeNames : AccountAttributeNameStringList }


type alias DescribeAccountAttributesResult =
    { accountAttributes : AccountAttributeList }


type alias DescribeAddressesRequest =
    { publicIps : PublicIpStringList, filters : FilterList, dryRun : Bool, allocationIds : AllocationIdList }


type alias DescribeAddressesResult =
    { addresses : AddressList }


type alias DescribeAggregateIdFormatRequest =
    { dryRun : Bool }


type alias DescribeAggregateIdFormatResult =
    { useLongIdsAggregated : Bool, statuses : IdFormatList }


type alias DescribeAvailabilityZonesRequest =
    { zoneNames : ZoneNameStringList, zoneIds : ZoneIdStringList, filters : FilterList, dryRun : Bool }


type alias DescribeAvailabilityZonesResult =
    { availabilityZones : AvailabilityZoneList }


type alias DescribeBundleTasksRequest =
    { filters : FilterList, dryRun : Bool, bundleIds : BundleIdStringList }


type alias DescribeBundleTasksResult =
    { bundleTasks : BundleTaskList }


type DescribeByoipCidrsMaxResults
    = DescribeByoipCidrsMaxResults Int


describeByoipCidrsMaxResults : Refined Int DescribeByoipCidrsMaxResults IntError
describeByoipCidrsMaxResults =
    let
        guardFn val =
            Refined.gt 1 val |> Result.andThen (Refined.lt 100) |> Result.map DescribeByoipCidrsMaxResults

        unboxFn (DescribeByoipCidrsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeByoipCidrsRequest =
    { nextToken : String, maxResults : DescribeByoipCidrsMaxResults, dryRun : Bool }


type alias DescribeByoipCidrsResult =
    { nextToken : String, byoipCidrs : ByoipCidrSet }


type DescribeCapacityReservationsMaxResults
    = DescribeCapacityReservationsMaxResults Int


describeCapacityReservationsMaxResults : Refined Int DescribeCapacityReservationsMaxResults IntError
describeCapacityReservationsMaxResults =
    let
        guardFn val =
            Refined.gt 1 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeCapacityReservationsMaxResults

        unboxFn (DescribeCapacityReservationsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeCapacityReservationsRequest =
    { nextToken : String
    , maxResults : DescribeCapacityReservationsMaxResults
    , filters : FilterList
    , dryRun : Bool
    , capacityReservationIds : CapacityReservationIdSet
    }


type alias DescribeCapacityReservationsResult =
    { nextToken : String, capacityReservations : CapacityReservationSet }


type DescribeClassicLinkInstancesMaxResults
    = DescribeClassicLinkInstancesMaxResults Int


describeClassicLinkInstancesMaxResults : Refined Int DescribeClassicLinkInstancesMaxResults IntError
describeClassicLinkInstancesMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeClassicLinkInstancesMaxResults

        unboxFn (DescribeClassicLinkInstancesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeClassicLinkInstancesRequest =
    { nextToken : String
    , maxResults : DescribeClassicLinkInstancesMaxResults
    , instanceIds : InstanceIdStringList
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeClassicLinkInstancesResult =
    { nextToken : String, instances : ClassicLinkInstanceList }


type DescribeClientVpnAuthorizationRulesMaxResults
    = DescribeClientVpnAuthorizationRulesMaxResults Int


describeClientVpnAuthorizationRulesMaxResults : Refined Int DescribeClientVpnAuthorizationRulesMaxResults IntError
describeClientVpnAuthorizationRulesMaxResults =
    let
        guardFn val =
            Refined.gt 5 val
                |> Result.andThen (Refined.lt 1000)
                |> Result.map DescribeClientVpnAuthorizationRulesMaxResults

        unboxFn (DescribeClientVpnAuthorizationRulesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeClientVpnAuthorizationRulesRequest =
    { nextToken : String
    , maxResults : DescribeClientVpnAuthorizationRulesMaxResults
    , filters : FilterList
    , dryRun : Bool
    , clientVpnEndpointId : String
    }


type alias DescribeClientVpnAuthorizationRulesResult =
    { nextToken : String, authorizationRules : AuthorizationRuleSet }


type DescribeClientVpnConnectionsMaxResults
    = DescribeClientVpnConnectionsMaxResults Int


describeClientVpnConnectionsMaxResults : Refined Int DescribeClientVpnConnectionsMaxResults IntError
describeClientVpnConnectionsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeClientVpnConnectionsMaxResults

        unboxFn (DescribeClientVpnConnectionsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeClientVpnConnectionsRequest =
    { nextToken : String
    , maxResults : DescribeClientVpnConnectionsMaxResults
    , filters : FilterList
    , dryRun : Bool
    , clientVpnEndpointId : String
    }


type alias DescribeClientVpnConnectionsResult =
    { nextToken : String, connections : ClientVpnConnectionSet }


type DescribeClientVpnEndpointMaxResults
    = DescribeClientVpnEndpointMaxResults Int


describeClientVpnEndpointMaxResults : Refined Int DescribeClientVpnEndpointMaxResults IntError
describeClientVpnEndpointMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeClientVpnEndpointMaxResults

        unboxFn (DescribeClientVpnEndpointMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeClientVpnEndpointsRequest =
    { nextToken : String
    , maxResults : DescribeClientVpnEndpointMaxResults
    , filters : FilterList
    , dryRun : Bool
    , clientVpnEndpointIds : ValueStringList
    }


type alias DescribeClientVpnEndpointsResult =
    { nextToken : String, clientVpnEndpoints : EndpointSet }


type DescribeClientVpnRoutesMaxResults
    = DescribeClientVpnRoutesMaxResults Int


describeClientVpnRoutesMaxResults : Refined Int DescribeClientVpnRoutesMaxResults IntError
describeClientVpnRoutesMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeClientVpnRoutesMaxResults

        unboxFn (DescribeClientVpnRoutesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeClientVpnRoutesRequest =
    { nextToken : String
    , maxResults : DescribeClientVpnRoutesMaxResults
    , filters : FilterList
    , dryRun : Bool
    , clientVpnEndpointId : String
    }


type alias DescribeClientVpnRoutesResult =
    { routes : ClientVpnRouteSet, nextToken : String }


type DescribeClientVpnTargetNetworksMaxResults
    = DescribeClientVpnTargetNetworksMaxResults Int


describeClientVpnTargetNetworksMaxResults : Refined Int DescribeClientVpnTargetNetworksMaxResults IntError
describeClientVpnTargetNetworksMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeClientVpnTargetNetworksMaxResults

        unboxFn (DescribeClientVpnTargetNetworksMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeClientVpnTargetNetworksRequest =
    { nextToken : String
    , maxResults : DescribeClientVpnTargetNetworksMaxResults
    , filters : FilterList
    , dryRun : Bool
    , clientVpnEndpointId : String
    , associationIds : ValueStringList
    }


type alias DescribeClientVpnTargetNetworksResult =
    { nextToken : String, clientVpnTargetNetworks : TargetNetworkSet }


type alias DescribeConversionTaskList =
    List ConversionTask


type alias DescribeConversionTasksRequest =
    { dryRun : Bool, conversionTaskIds : ConversionIdStringList }


type alias DescribeConversionTasksResult =
    { conversionTasks : DescribeConversionTaskList }


type alias DescribeCustomerGatewaysRequest =
    { filters : FilterList, dryRun : Bool, customerGatewayIds : CustomerGatewayIdStringList }


type alias DescribeCustomerGatewaysResult =
    { customerGateways : CustomerGatewayList }


type DescribeDhcpOptionsMaxResults
    = DescribeDhcpOptionsMaxResults Int


describeDhcpOptionsMaxResults : Refined Int DescribeDhcpOptionsMaxResults IntError
describeDhcpOptionsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeDhcpOptionsMaxResults

        unboxFn (DescribeDhcpOptionsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeDhcpOptionsRequest =
    { nextToken : String
    , maxResults : DescribeDhcpOptionsMaxResults
    , filters : FilterList
    , dryRun : Bool
    , dhcpOptionsIds : DhcpOptionsIdStringList
    }


type alias DescribeDhcpOptionsResult =
    { nextToken : String, dhcpOptions : DhcpOptionsList }


type DescribeEgressOnlyInternetGatewaysMaxResults
    = DescribeEgressOnlyInternetGatewaysMaxResults Int


describeEgressOnlyInternetGatewaysMaxResults : Refined Int DescribeEgressOnlyInternetGatewaysMaxResults IntError
describeEgressOnlyInternetGatewaysMaxResults =
    let
        guardFn val =
            Refined.gt 5 val
                |> Result.andThen (Refined.lt 255)
                |> Result.map DescribeEgressOnlyInternetGatewaysMaxResults

        unboxFn (DescribeEgressOnlyInternetGatewaysMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeEgressOnlyInternetGatewaysRequest =
    { nextToken : String
    , maxResults : DescribeEgressOnlyInternetGatewaysMaxResults
    , egressOnlyInternetGatewayIds : EgressOnlyInternetGatewayIdList
    , dryRun : Bool
    }


type alias DescribeEgressOnlyInternetGatewaysResult =
    { nextToken : String, egressOnlyInternetGateways : EgressOnlyInternetGatewayList }


type DescribeElasticGpusMaxResults
    = DescribeElasticGpusMaxResults Int


describeElasticGpusMaxResults : Refined Int DescribeElasticGpusMaxResults IntError
describeElasticGpusMaxResults =
    let
        guardFn val =
            Refined.gt 10 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeElasticGpusMaxResults

        unboxFn (DescribeElasticGpusMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeElasticGpusRequest =
    { nextToken : String
    , maxResults : DescribeElasticGpusMaxResults
    , filters : FilterList
    , elasticGpuIds : ElasticGpuIdSet
    , dryRun : Bool
    }


type alias DescribeElasticGpusResult =
    { nextToken : String, maxResults : Int, elasticGpuSet : ElasticGpuSet }


type alias DescribeExportTasksRequest =
    { exportTaskIds : ExportTaskIdStringList }


type alias DescribeExportTasksResult =
    { exportTasks : ExportTaskList }


type alias DescribeFleetError =
    { lifecycle : InstanceLifecycle
    , launchTemplateAndOverrides : LaunchTemplateAndOverridesResponse
    , errorMessage : String
    , errorCode : String
    }


type alias DescribeFleetHistoryRequest =
    { startTime : DateTime
    , nextToken : String
    , maxResults : Int
    , fleetId : String
    , eventType : FleetEventType
    , dryRun : Bool
    }


type alias DescribeFleetHistoryResult =
    { startTime : DateTime
    , nextToken : String
    , lastEvaluatedTime : DateTime
    , historyRecords : HistoryRecordSet
    , fleetId : String
    }


type alias DescribeFleetInstancesRequest =
    { nextToken : String, maxResults : Int, fleetId : String, filters : FilterList, dryRun : Bool }


type alias DescribeFleetInstancesResult =
    { nextToken : String, fleetId : String, activeInstances : ActiveInstanceSet }


type alias DescribeFleetsErrorSet =
    List DescribeFleetError


type alias DescribeFleetsInstances =
    { platform : PlatformValues
    , lifecycle : InstanceLifecycle
    , launchTemplateAndOverrides : LaunchTemplateAndOverridesResponse
    , instanceType : InstanceType
    , instanceIds : InstanceIdsSet
    }


type alias DescribeFleetsInstancesSet =
    List DescribeFleetsInstances


type alias DescribeFleetsRequest =
    { nextToken : String, maxResults : Int, fleetIds : FleetIdSet, filters : FilterList, dryRun : Bool }


type alias DescribeFleetsResult =
    { nextToken : String, fleets : FleetSet }


type alias DescribeFlowLogsRequest =
    { nextToken : String, maxResults : Int, flowLogIds : ValueStringList, filter : FilterList, dryRun : Bool }


type alias DescribeFlowLogsResult =
    { nextToken : String, flowLogs : FlowLogSet }


type alias DescribeFpgaImageAttributeRequest =
    { fpgaImageId : String, dryRun : Bool, attribute : FpgaImageAttributeName }


type alias DescribeFpgaImageAttributeResult =
    { fpgaImageAttribute : FpgaImageAttribute }


type DescribeFpgaImagesMaxResults
    = DescribeFpgaImagesMaxResults Int


describeFpgaImagesMaxResults : Refined Int DescribeFpgaImagesMaxResults IntError
describeFpgaImagesMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeFpgaImagesMaxResults

        unboxFn (DescribeFpgaImagesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeFpgaImagesRequest =
    { owners : OwnerStringList
    , nextToken : String
    , maxResults : DescribeFpgaImagesMaxResults
    , fpgaImageIds : FpgaImageIdList
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeFpgaImagesResult =
    { nextToken : String, fpgaImages : FpgaImageList }


type alias DescribeHostReservationOfferingsRequest =
    { offeringId : String
    , nextToken : String
    , minDuration : Int
    , maxResults : DescribeHostReservationsMaxResults
    , maxDuration : Int
    , filter : FilterList
    }


type alias DescribeHostReservationOfferingsResult =
    { offeringSet : HostOfferingSet, nextToken : String }


type DescribeHostReservationsMaxResults
    = DescribeHostReservationsMaxResults Int


describeHostReservationsMaxResults : Refined Int DescribeHostReservationsMaxResults IntError
describeHostReservationsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 500) |> Result.map DescribeHostReservationsMaxResults

        unboxFn (DescribeHostReservationsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeHostReservationsRequest =
    { nextToken : String, maxResults : Int, hostReservationIdSet : HostReservationIdSet, filter : FilterList }


type alias DescribeHostReservationsResult =
    { nextToken : String, hostReservationSet : HostReservationSet }


type alias DescribeHostsRequest =
    { nextToken : String, maxResults : Int, hostIds : RequestHostIdList, filter : FilterList }


type alias DescribeHostsResult =
    { nextToken : String, hosts : HostList }


type DescribeIamInstanceProfileAssociationsMaxResults
    = DescribeIamInstanceProfileAssociationsMaxResults Int


describeIamInstanceProfileAssociationsMaxResults : Refined Int DescribeIamInstanceProfileAssociationsMaxResults IntError
describeIamInstanceProfileAssociationsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val
                |> Result.andThen (Refined.lt 1000)
                |> Result.map DescribeIamInstanceProfileAssociationsMaxResults

        unboxFn (DescribeIamInstanceProfileAssociationsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeIamInstanceProfileAssociationsRequest =
    { nextToken : String
    , maxResults : DescribeIamInstanceProfileAssociationsMaxResults
    , filters : FilterList
    , associationIds : AssociationIdList
    }


type alias DescribeIamInstanceProfileAssociationsResult =
    { nextToken : String, iamInstanceProfileAssociations : IamInstanceProfileAssociationSet }


type alias DescribeIdFormatRequest =
    { resource : String }


type alias DescribeIdFormatResult =
    { statuses : IdFormatList }


type alias DescribeIdentityIdFormatRequest =
    { resource : String, principalArn : String }


type alias DescribeIdentityIdFormatResult =
    { statuses : IdFormatList }


type alias DescribeImageAttributeRequest =
    { imageId : String, dryRun : Bool, attribute : ImageAttributeName }


type alias DescribeImagesRequest =
    { owners : OwnerStringList
    , imageIds : ImageIdStringList
    , filters : FilterList
    , executableUsers : ExecutableByStringList
    , dryRun : Bool
    }


type alias DescribeImagesResult =
    { images : ImageList }


type alias DescribeImportImageTasksRequest =
    { nextToken : String, maxResults : Int, importTaskIds : ImportTaskIdList, filters : FilterList, dryRun : Bool }


type alias DescribeImportImageTasksResult =
    { nextToken : String, importImageTasks : ImportImageTaskList }


type alias DescribeImportSnapshotTasksRequest =
    { nextToken : String, maxResults : Int, importTaskIds : ImportTaskIdList, filters : FilterList, dryRun : Bool }


type alias DescribeImportSnapshotTasksResult =
    { nextToken : String, importSnapshotTasks : ImportSnapshotTaskList }


type alias DescribeInstanceAttributeRequest =
    { instanceId : String, dryRun : Bool, attribute : InstanceAttributeName }


type DescribeInstanceCreditSpecificationsMaxResults
    = DescribeInstanceCreditSpecificationsMaxResults Int


describeInstanceCreditSpecificationsMaxResults : Refined Int DescribeInstanceCreditSpecificationsMaxResults IntError
describeInstanceCreditSpecificationsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val
                |> Result.andThen (Refined.lt 1000)
                |> Result.map DescribeInstanceCreditSpecificationsMaxResults

        unboxFn (DescribeInstanceCreditSpecificationsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeInstanceCreditSpecificationsRequest =
    { nextToken : String
    , maxResults : DescribeInstanceCreditSpecificationsMaxResults
    , instanceIds : InstanceIdStringList
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeInstanceCreditSpecificationsResult =
    { nextToken : String, instanceCreditSpecifications : InstanceCreditSpecificationList }


type alias DescribeInstanceStatusRequest =
    { nextToken : String
    , maxResults : Int
    , instanceIds : InstanceIdStringList
    , includeAllInstances : Bool
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeInstanceStatusResult =
    { nextToken : String, instanceStatuses : InstanceStatusList }


type alias DescribeInstancesRequest =
    { nextToken : String, maxResults : Int, instanceIds : InstanceIdStringList, filters : FilterList, dryRun : Bool }


type alias DescribeInstancesResult =
    { reservations : ReservationList, nextToken : String }


type DescribeInternetGatewaysMaxResults
    = DescribeInternetGatewaysMaxResults Int


describeInternetGatewaysMaxResults : Refined Int DescribeInternetGatewaysMaxResults IntError
describeInternetGatewaysMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeInternetGatewaysMaxResults

        unboxFn (DescribeInternetGatewaysMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeInternetGatewaysRequest =
    { nextToken : String
    , maxResults : DescribeInternetGatewaysMaxResults
    , internetGatewayIds : ValueStringList
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeInternetGatewaysResult =
    { nextToken : String, internetGateways : InternetGatewayList }


type alias DescribeKeyPairsRequest =
    { keyNames : KeyNameStringList, filters : FilterList, dryRun : Bool }


type alias DescribeKeyPairsResult =
    { keyPairs : KeyPairList }


type alias DescribeLaunchTemplateVersionsRequest =
    { versions : VersionStringList
    , nextToken : String
    , minVersion : String
    , maxVersion : String
    , maxResults : Int
    , launchTemplateName : LaunchTemplateName
    , launchTemplateId : String
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeLaunchTemplateVersionsResult =
    { nextToken : String, launchTemplateVersions : LaunchTemplateVersionSet }


type DescribeLaunchTemplatesMaxResults
    = DescribeLaunchTemplatesMaxResults Int


describeLaunchTemplatesMaxResults : Refined Int DescribeLaunchTemplatesMaxResults IntError
describeLaunchTemplatesMaxResults =
    let
        guardFn val =
            Refined.gt 1 val |> Result.andThen (Refined.lt 200) |> Result.map DescribeLaunchTemplatesMaxResults

        unboxFn (DescribeLaunchTemplatesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeLaunchTemplatesRequest =
    { nextToken : String
    , maxResults : DescribeLaunchTemplatesMaxResults
    , launchTemplateNames : LaunchTemplateNameStringList
    , launchTemplateIds : ValueStringList
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeLaunchTemplatesResult =
    { nextToken : String, launchTemplates : LaunchTemplateSet }


type DescribeMovingAddressesMaxResults
    = DescribeMovingAddressesMaxResults Int


describeMovingAddressesMaxResults : Refined Int DescribeMovingAddressesMaxResults IntError
describeMovingAddressesMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeMovingAddressesMaxResults

        unboxFn (DescribeMovingAddressesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeMovingAddressesRequest =
    { publicIps : ValueStringList
    , nextToken : String
    , maxResults : DescribeMovingAddressesMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeMovingAddressesResult =
    { nextToken : String, movingAddressStatuses : MovingAddressStatusSet }


type DescribeNatGatewaysMaxResults
    = DescribeNatGatewaysMaxResults Int


describeNatGatewaysMaxResults : Refined Int DescribeNatGatewaysMaxResults IntError
describeNatGatewaysMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeNatGatewaysMaxResults

        unboxFn (DescribeNatGatewaysMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeNatGatewaysRequest =
    { nextToken : String
    , natGatewayIds : ValueStringList
    , maxResults : DescribeNatGatewaysMaxResults
    , filter : FilterList
    }


type alias DescribeNatGatewaysResult =
    { nextToken : String, natGateways : NatGatewayList }


type DescribeNetworkAclsMaxResults
    = DescribeNetworkAclsMaxResults Int


describeNetworkAclsMaxResults : Refined Int DescribeNetworkAclsMaxResults IntError
describeNetworkAclsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeNetworkAclsMaxResults

        unboxFn (DescribeNetworkAclsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeNetworkAclsRequest =
    { nextToken : String
    , networkAclIds : ValueStringList
    , maxResults : DescribeNetworkAclsMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeNetworkAclsResult =
    { nextToken : String, networkAcls : NetworkAclList }


type alias DescribeNetworkInterfaceAttributeRequest =
    { networkInterfaceId : String, dryRun : Bool, attribute : NetworkInterfaceAttribute }


type alias DescribeNetworkInterfaceAttributeResult =
    { sourceDestCheck : AttributeBooleanValue
    , networkInterfaceId : String
    , groups : GroupIdentifierList
    , description : AttributeValue
    , attachment : NetworkInterfaceAttachment
    }


type DescribeNetworkInterfacePermissionsMaxResults
    = DescribeNetworkInterfacePermissionsMaxResults Int


describeNetworkInterfacePermissionsMaxResults : Refined Int DescribeNetworkInterfacePermissionsMaxResults IntError
describeNetworkInterfacePermissionsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val
                |> Result.andThen (Refined.lt 255)
                |> Result.map DescribeNetworkInterfacePermissionsMaxResults

        unboxFn (DescribeNetworkInterfacePermissionsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeNetworkInterfacePermissionsRequest =
    { nextToken : String
    , networkInterfacePermissionIds : NetworkInterfacePermissionIdList
    , maxResults : DescribeNetworkInterfacePermissionsMaxResults
    , filters : FilterList
    }


type alias DescribeNetworkInterfacePermissionsResult =
    { nextToken : String, networkInterfacePermissions : NetworkInterfacePermissionList }


type DescribeNetworkInterfacesMaxResults
    = DescribeNetworkInterfacesMaxResults Int


describeNetworkInterfacesMaxResults : Refined Int DescribeNetworkInterfacesMaxResults IntError
describeNetworkInterfacesMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeNetworkInterfacesMaxResults

        unboxFn (DescribeNetworkInterfacesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeNetworkInterfacesRequest =
    { nextToken : String
    , networkInterfaceIds : NetworkInterfaceIdList
    , maxResults : DescribeNetworkInterfacesMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeNetworkInterfacesResult =
    { nextToken : String, networkInterfaces : NetworkInterfaceList }


type alias DescribePlacementGroupsRequest =
    { groupNames : PlacementGroupStringList, filters : FilterList, dryRun : Bool }


type alias DescribePlacementGroupsResult =
    { placementGroups : PlacementGroupList }


type alias DescribePrefixListsRequest =
    { prefixListIds : ValueStringList, nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribePrefixListsResult =
    { prefixLists : PrefixListSet, nextToken : String }


type DescribePrincipalIdFormatMaxResults
    = DescribePrincipalIdFormatMaxResults Int


describePrincipalIdFormatMaxResults : Refined Int DescribePrincipalIdFormatMaxResults IntError
describePrincipalIdFormatMaxResults =
    let
        guardFn val =
            Refined.gt 1 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribePrincipalIdFormatMaxResults

        unboxFn (DescribePrincipalIdFormatMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribePrincipalIdFormatRequest =
    { resources : ResourceList, nextToken : String, maxResults : DescribePrincipalIdFormatMaxResults, dryRun : Bool }


type alias DescribePrincipalIdFormatResult =
    { principals : PrincipalIdFormatList, nextToken : String }


type alias DescribePublicIpv4PoolsRequest =
    { poolIds : ValueStringList, nextToken : String, maxResults : PoolMaxResults }


type alias DescribePublicIpv4PoolsResult =
    { publicIpv4Pools : PublicIpv4PoolSet, nextToken : String }


type alias DescribeRegionsRequest =
    { regionNames : RegionNameStringList, filters : FilterList, dryRun : Bool, allRegions : Bool }


type alias DescribeRegionsResult =
    { regions : RegionList }


type alias DescribeReservedInstancesListingsRequest =
    { reservedInstancesListingId : String, reservedInstancesId : String, filters : FilterList }


type alias DescribeReservedInstancesListingsResult =
    { reservedInstancesListings : ReservedInstancesListingList }


type alias DescribeReservedInstancesModificationsRequest =
    { reservedInstancesModificationIds : ReservedInstancesModificationIdStringList
    , nextToken : String
    , filters : FilterList
    }


type alias DescribeReservedInstancesModificationsResult =
    { reservedInstancesModifications : ReservedInstancesModificationList, nextToken : String }


type alias DescribeReservedInstancesOfferingsRequest =
    { reservedInstancesOfferingIds : ReservedInstancesOfferingIdStringList
    , productDescription : RiproductDescription
    , offeringType : OfferingTypeValues
    , offeringClass : OfferingClassType
    , nextToken : String
    , minDuration : Int
    , maxResults : Int
    , maxInstanceCount : Int
    , maxDuration : Int
    , instanceType : InstanceType
    , instanceTenancy : Tenancy
    , includeMarketplace : Bool
    , filters : FilterList
    , dryRun : Bool
    , availabilityZone : String
    }


type alias DescribeReservedInstancesOfferingsResult =
    { reservedInstancesOfferings : ReservedInstancesOfferingList, nextToken : String }


type alias DescribeReservedInstancesRequest =
    { reservedInstancesIds : ReservedInstancesIdStringList
    , offeringType : OfferingTypeValues
    , offeringClass : OfferingClassType
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeReservedInstancesResult =
    { reservedInstances : ReservedInstancesList }


type DescribeRouteTablesMaxResults
    = DescribeRouteTablesMaxResults Int


describeRouteTablesMaxResults : Refined Int DescribeRouteTablesMaxResults IntError
describeRouteTablesMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 100) |> Result.map DescribeRouteTablesMaxResults

        unboxFn (DescribeRouteTablesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeRouteTablesRequest =
    { routeTableIds : ValueStringList
    , nextToken : String
    , maxResults : DescribeRouteTablesMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeRouteTablesResult =
    { routeTables : RouteTableList, nextToken : String }


type DescribeScheduledInstanceAvailabilityMaxResults
    = DescribeScheduledInstanceAvailabilityMaxResults Int


describeScheduledInstanceAvailabilityMaxResults : Refined Int DescribeScheduledInstanceAvailabilityMaxResults IntError
describeScheduledInstanceAvailabilityMaxResults =
    let
        guardFn val =
            Refined.gt 5 val
                |> Result.andThen (Refined.lt 300)
                |> Result.map DescribeScheduledInstanceAvailabilityMaxResults

        unboxFn (DescribeScheduledInstanceAvailabilityMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeScheduledInstanceAvailabilityRequest =
    { recurrence : ScheduledInstanceRecurrenceRequest
    , nextToken : String
    , minSlotDurationInHours : Int
    , maxSlotDurationInHours : Int
    , maxResults : DescribeScheduledInstanceAvailabilityMaxResults
    , firstSlotStartTimeRange : SlotDateTimeRangeRequest
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeScheduledInstanceAvailabilityResult =
    { scheduledInstanceAvailabilitySet : ScheduledInstanceAvailabilitySet, nextToken : String }


type alias DescribeScheduledInstancesRequest =
    { slotStartTimeRange : SlotStartTimeRangeRequest
    , scheduledInstanceIds : ScheduledInstanceIdRequestSet
    , nextToken : String
    , maxResults : Int
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeScheduledInstancesResult =
    { scheduledInstanceSet : ScheduledInstanceSet, nextToken : String }


type alias DescribeSecurityGroupReferencesRequest =
    { groupId : GroupIds, dryRun : Bool }


type alias DescribeSecurityGroupReferencesResult =
    { securityGroupReferenceSet : SecurityGroupReferences }


type DescribeSecurityGroupsMaxResults
    = DescribeSecurityGroupsMaxResults Int


describeSecurityGroupsMaxResults : Refined Int DescribeSecurityGroupsMaxResults IntError
describeSecurityGroupsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeSecurityGroupsMaxResults

        unboxFn (DescribeSecurityGroupsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeSecurityGroupsRequest =
    { nextToken : String
    , maxResults : DescribeSecurityGroupsMaxResults
    , groupNames : GroupNameStringList
    , groupIds : GroupIdStringList
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeSecurityGroupsResult =
    { securityGroups : SecurityGroupList, nextToken : String }


type alias DescribeSnapshotAttributeRequest =
    { snapshotId : String, dryRun : Bool, attribute : SnapshotAttributeName }


type alias DescribeSnapshotAttributeResult =
    { snapshotId : String, productCodes : ProductCodeList, createVolumePermissions : CreateVolumePermissionList }


type alias DescribeSnapshotsRequest =
    { snapshotIds : SnapshotIdStringList
    , restorableByUserIds : RestorableByStringList
    , ownerIds : OwnerStringList
    , nextToken : String
    , maxResults : Int
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeSnapshotsResult =
    { snapshots : SnapshotList, nextToken : String }


type alias DescribeSpotDatafeedSubscriptionRequest =
    { dryRun : Bool }


type alias DescribeSpotDatafeedSubscriptionResult =
    { spotDatafeedSubscription : SpotDatafeedSubscription }


type DescribeSpotFleetInstancesMaxResults
    = DescribeSpotFleetInstancesMaxResults Int


describeSpotFleetInstancesMaxResults : Refined Int DescribeSpotFleetInstancesMaxResults IntError
describeSpotFleetInstancesMaxResults =
    let
        guardFn val =
            Refined.gt 1 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeSpotFleetInstancesMaxResults

        unboxFn (DescribeSpotFleetInstancesMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeSpotFleetInstancesRequest =
    { spotFleetRequestId : String
    , nextToken : String
    , maxResults : DescribeSpotFleetInstancesMaxResults
    , dryRun : Bool
    }


type alias DescribeSpotFleetInstancesResponse =
    { spotFleetRequestId : String, nextToken : String, activeInstances : ActiveInstanceSet }


type DescribeSpotFleetRequestHistoryMaxResults
    = DescribeSpotFleetRequestHistoryMaxResults Int


describeSpotFleetRequestHistoryMaxResults : Refined Int DescribeSpotFleetRequestHistoryMaxResults IntError
describeSpotFleetRequestHistoryMaxResults =
    let
        guardFn val =
            Refined.gt 1 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeSpotFleetRequestHistoryMaxResults

        unboxFn (DescribeSpotFleetRequestHistoryMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeSpotFleetRequestHistoryRequest =
    { startTime : DateTime
    , spotFleetRequestId : String
    , nextToken : String
    , maxResults : DescribeSpotFleetRequestHistoryMaxResults
    , eventType : EventType
    , dryRun : Bool
    }


type alias DescribeSpotFleetRequestHistoryResponse =
    { startTime : DateTime
    , spotFleetRequestId : String
    , nextToken : String
    , lastEvaluatedTime : DateTime
    , historyRecords : HistoryRecords
    }


type alias DescribeSpotFleetRequestsRequest =
    { spotFleetRequestIds : ValueStringList, nextToken : String, maxResults : Int, dryRun : Bool }


type alias DescribeSpotFleetRequestsResponse =
    { spotFleetRequestConfigs : SpotFleetRequestConfigSet, nextToken : String }


type alias DescribeSpotInstanceRequestsRequest =
    { spotInstanceRequestIds : SpotInstanceRequestIdList
    , nextToken : String
    , maxResults : Int
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeSpotInstanceRequestsResult =
    { spotInstanceRequests : SpotInstanceRequestList, nextToken : String }


type alias DescribeSpotPriceHistoryRequest =
    { startTime : DateTime
    , productDescriptions : ProductDescriptionList
    , nextToken : String
    , maxResults : Int
    , instanceTypes : InstanceTypeList
    , filters : FilterList
    , endTime : DateTime
    , dryRun : Bool
    , availabilityZone : String
    }


type alias DescribeSpotPriceHistoryResult =
    { spotPriceHistory : SpotPriceHistoryList, nextToken : String }


type DescribeStaleSecurityGroupsMaxResults
    = DescribeStaleSecurityGroupsMaxResults Int


describeStaleSecurityGroupsMaxResults : Refined Int DescribeStaleSecurityGroupsMaxResults IntError
describeStaleSecurityGroupsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 255) |> Result.map DescribeStaleSecurityGroupsMaxResults

        unboxFn (DescribeStaleSecurityGroupsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type DescribeStaleSecurityGroupsNextToken
    = DescribeStaleSecurityGroupsNextToken String


describeStaleSecurityGroupsNextToken : Refined String DescribeStaleSecurityGroupsNextToken StringError
describeStaleSecurityGroupsNextToken =
    let
        guardFn val =
            Refined.minLength 1 val
                |> Result.andThen (Refined.maxLength 1024)
                |> Result.map DescribeStaleSecurityGroupsNextToken

        unboxFn (DescribeStaleSecurityGroupsNextToken val) =
            val
    in
    Refined.define guardFn Json.Decode.string Json.Encode.string Refined.stringErrorToString unboxFn


type alias DescribeStaleSecurityGroupsRequest =
    { vpcId : String
    , nextToken : DescribeStaleSecurityGroupsNextToken
    , maxResults : DescribeStaleSecurityGroupsMaxResults
    , dryRun : Bool
    }


type alias DescribeStaleSecurityGroupsResult =
    { staleSecurityGroupSet : StaleSecurityGroupSet, nextToken : String }


type DescribeSubnetsMaxResults
    = DescribeSubnetsMaxResults Int


describeSubnetsMaxResults : Refined Int DescribeSubnetsMaxResults IntError
describeSubnetsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeSubnetsMaxResults

        unboxFn (DescribeSubnetsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeSubnetsRequest =
    { subnetIds : SubnetIdStringList
    , nextToken : String
    , maxResults : DescribeSubnetsMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeSubnetsResult =
    { subnets : SubnetList, nextToken : String }


type alias DescribeTagsRequest =
    { nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeTagsResult =
    { tags : TagDescriptionList, nextToken : String }


type alias DescribeTrafficMirrorFiltersRequest =
    { trafficMirrorFilterIds : ValueStringList
    , nextToken : String
    , maxResults : TrafficMirroringMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeTrafficMirrorFiltersResult =
    { trafficMirrorFilters : TrafficMirrorFilterSet, nextToken : String }


type alias DescribeTrafficMirrorSessionsRequest =
    { trafficMirrorSessionIds : ValueStringList
    , nextToken : String
    , maxResults : TrafficMirroringMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeTrafficMirrorSessionsResult =
    { trafficMirrorSessions : TrafficMirrorSessionSet, nextToken : String }


type alias DescribeTrafficMirrorTargetsRequest =
    { trafficMirrorTargetIds : ValueStringList
    , nextToken : String
    , maxResults : TrafficMirroringMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeTrafficMirrorTargetsResult =
    { trafficMirrorTargets : TrafficMirrorTargetSet, nextToken : String }


type alias DescribeTransitGatewayAttachmentsRequest =
    { transitGatewayAttachmentIds : TransitGatewayAttachmentIdStringList
    , nextToken : String
    , maxResults : TransitGatewayMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeTransitGatewayAttachmentsResult =
    { transitGatewayAttachments : TransitGatewayAttachmentList, nextToken : String }


type alias DescribeTransitGatewayRouteTablesRequest =
    { transitGatewayRouteTableIds : TransitGatewayRouteTableIdStringList
    , nextToken : String
    , maxResults : TransitGatewayMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeTransitGatewayRouteTablesResult =
    { transitGatewayRouteTables : TransitGatewayRouteTableList, nextToken : String }


type alias DescribeTransitGatewayVpcAttachmentsRequest =
    { transitGatewayAttachmentIds : TransitGatewayAttachmentIdStringList
    , nextToken : String
    , maxResults : TransitGatewayMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeTransitGatewayVpcAttachmentsResult =
    { transitGatewayVpcAttachments : TransitGatewayVpcAttachmentList, nextToken : String }


type alias DescribeTransitGatewaysRequest =
    { transitGatewayIds : TransitGatewayIdStringList
    , nextToken : String
    , maxResults : TransitGatewayMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeTransitGatewaysResult =
    { transitGateways : TransitGatewayList, nextToken : String }


type alias DescribeVolumeAttributeRequest =
    { volumeId : String, dryRun : Bool, attribute : VolumeAttributeName }


type alias DescribeVolumeAttributeResult =
    { volumeId : String, productCodes : ProductCodeList, autoEnableIo : AttributeBooleanValue }


type alias DescribeVolumeStatusRequest =
    { volumeIds : VolumeIdStringList, nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeVolumeStatusResult =
    { volumeStatuses : VolumeStatusList, nextToken : String }


type alias DescribeVolumesModificationsRequest =
    { volumeIds : VolumeIdStringList, nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeVolumesModificationsResult =
    { volumesModifications : VolumeModificationList, nextToken : String }


type alias DescribeVolumesRequest =
    { volumeIds : VolumeIdStringList, nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeVolumesResult =
    { volumes : VolumeList, nextToken : String }


type alias DescribeVpcAttributeRequest =
    { vpcId : String, dryRun : Bool, attribute : VpcAttributeName }


type alias DescribeVpcAttributeResult =
    { vpcId : String, enableDnsSupport : AttributeBooleanValue, enableDnsHostnames : AttributeBooleanValue }


type DescribeVpcClassicLinkDnsSupportMaxResults
    = DescribeVpcClassicLinkDnsSupportMaxResults Int


describeVpcClassicLinkDnsSupportMaxResults : Refined Int DescribeVpcClassicLinkDnsSupportMaxResults IntError
describeVpcClassicLinkDnsSupportMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 255) |> Result.map DescribeVpcClassicLinkDnsSupportMaxResults

        unboxFn (DescribeVpcClassicLinkDnsSupportMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type DescribeVpcClassicLinkDnsSupportNextToken
    = DescribeVpcClassicLinkDnsSupportNextToken String


describeVpcClassicLinkDnsSupportNextToken : Refined String DescribeVpcClassicLinkDnsSupportNextToken StringError
describeVpcClassicLinkDnsSupportNextToken =
    let
        guardFn val =
            Refined.minLength 1 val
                |> Result.andThen (Refined.maxLength 1024)
                |> Result.map DescribeVpcClassicLinkDnsSupportNextToken

        unboxFn (DescribeVpcClassicLinkDnsSupportNextToken val) =
            val
    in
    Refined.define guardFn Json.Decode.string Json.Encode.string Refined.stringErrorToString unboxFn


type alias DescribeVpcClassicLinkDnsSupportRequest =
    { vpcIds : VpcClassicLinkIdList
    , nextToken : DescribeVpcClassicLinkDnsSupportNextToken
    , maxResults : DescribeVpcClassicLinkDnsSupportMaxResults
    }


type alias DescribeVpcClassicLinkDnsSupportResult =
    { vpcs : ClassicLinkDnsSupportList, nextToken : DescribeVpcClassicLinkDnsSupportNextToken }


type alias DescribeVpcClassicLinkRequest =
    { vpcIds : VpcClassicLinkIdList, filters : FilterList, dryRun : Bool }


type alias DescribeVpcClassicLinkResult =
    { vpcs : VpcClassicLinkList }


type alias DescribeVpcEndpointConnectionNotificationsRequest =
    { nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool, connectionNotificationId : String }


type alias DescribeVpcEndpointConnectionNotificationsResult =
    { nextToken : String, connectionNotificationSet : ConnectionNotificationSet }


type alias DescribeVpcEndpointConnectionsRequest =
    { nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeVpcEndpointConnectionsResult =
    { vpcEndpointConnections : VpcEndpointConnectionSet, nextToken : String }


type alias DescribeVpcEndpointServiceConfigurationsRequest =
    { serviceIds : ValueStringList, nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeVpcEndpointServiceConfigurationsResult =
    { serviceConfigurations : ServiceConfigurationSet, nextToken : String }


type alias DescribeVpcEndpointServicePermissionsRequest =
    { serviceId : String, nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeVpcEndpointServicePermissionsResult =
    { nextToken : String, allowedPrincipals : AllowedPrincipalSet }


type alias DescribeVpcEndpointServicesRequest =
    { serviceNames : ValueStringList, nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeVpcEndpointServicesResult =
    { serviceNames : ValueStringList, serviceDetails : ServiceDetailSet, nextToken : String }


type alias DescribeVpcEndpointsRequest =
    { vpcEndpointIds : ValueStringList, nextToken : String, maxResults : Int, filters : FilterList, dryRun : Bool }


type alias DescribeVpcEndpointsResult =
    { vpcEndpoints : VpcEndpointSet, nextToken : String }


type DescribeVpcPeeringConnectionsMaxResults
    = DescribeVpcPeeringConnectionsMaxResults Int


describeVpcPeeringConnectionsMaxResults : Refined Int DescribeVpcPeeringConnectionsMaxResults IntError
describeVpcPeeringConnectionsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeVpcPeeringConnectionsMaxResults

        unboxFn (DescribeVpcPeeringConnectionsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeVpcPeeringConnectionsRequest =
    { vpcPeeringConnectionIds : ValueStringList
    , nextToken : String
    , maxResults : DescribeVpcPeeringConnectionsMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeVpcPeeringConnectionsResult =
    { vpcPeeringConnections : VpcPeeringConnectionList, nextToken : String }


type DescribeVpcsMaxResults
    = DescribeVpcsMaxResults Int


describeVpcsMaxResults : Refined Int DescribeVpcsMaxResults IntError
describeVpcsMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map DescribeVpcsMaxResults

        unboxFn (DescribeVpcsMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias DescribeVpcsRequest =
    { vpcIds : VpcIdStringList
    , nextToken : String
    , maxResults : DescribeVpcsMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias DescribeVpcsResult =
    { vpcs : VpcList, nextToken : String }


type alias DescribeVpnConnectionsRequest =
    { vpnConnectionIds : VpnConnectionIdStringList, filters : FilterList, dryRun : Bool }


type alias DescribeVpnConnectionsResult =
    { vpnConnections : VpnConnectionList }


type alias DescribeVpnGatewaysRequest =
    { vpnGatewayIds : VpnGatewayIdStringList, filters : FilterList, dryRun : Bool }


type alias DescribeVpnGatewaysResult =
    { vpnGateways : VpnGatewayList }


type alias DetachClassicLinkVpcRequest =
    { vpcId : String, instanceId : String, dryRun : Bool }


type alias DetachClassicLinkVpcResult =
    { return : Bool }


type alias DetachInternetGatewayRequest =
    { vpcId : String, internetGatewayId : String, dryRun : Bool }


type alias DetachNetworkInterfaceRequest =
    { force : Bool, dryRun : Bool, attachmentId : String }


type alias DetachVolumeRequest =
    { volumeId : String, instanceId : String, force : Bool, dryRun : Bool, device : String }


type alias DetachVpnGatewayRequest =
    { vpnGatewayId : String, vpcId : String, dryRun : Bool }


type DeviceType
    = DeviceTypeEbs
    | DeviceTypeInstanceStore


deviceType : Enum DeviceType
deviceType =
    Enum.define
        [ DeviceTypeEbs, DeviceTypeInstanceStore ]
        (\val ->
            case val of
                DeviceTypeEbs ->
                    "ebs"

                DeviceTypeInstanceStore ->
                    "instance-store"
        )


type alias DhcpConfiguration =
    { values : DhcpConfigurationValueList, key : String }


type alias DhcpConfigurationList =
    List DhcpConfiguration


type alias DhcpConfigurationValueList =
    List AttributeValue


type alias DhcpOptions =
    { tags : TagList, ownerId : String, dhcpOptionsId : String, dhcpConfigurations : DhcpConfigurationList }


type alias DhcpOptionsIdStringList =
    List String


type alias DhcpOptionsList =
    List DhcpOptions


type alias DirectoryServiceAuthentication =
    { directoryId : String }


type alias DirectoryServiceAuthenticationRequest =
    { directoryId : String }


type alias DisableEbsEncryptionByDefaultRequest =
    { dryRun : Bool }


type alias DisableEbsEncryptionByDefaultResult =
    { ebsEncryptionByDefault : Bool }


type alias DisableTransitGatewayRouteTablePropagationRequest =
    { transitGatewayRouteTableId : String, transitGatewayAttachmentId : String, dryRun : Bool }


type alias DisableTransitGatewayRouteTablePropagationResult =
    { propagation : TransitGatewayPropagation }


type alias DisableVgwRoutePropagationRequest =
    { routeTableId : String, gatewayId : String }


type alias DisableVpcClassicLinkDnsSupportRequest =
    { vpcId : String }


type alias DisableVpcClassicLinkDnsSupportResult =
    { return : Bool }


type alias DisableVpcClassicLinkRequest =
    { vpcId : String, dryRun : Bool }


type alias DisableVpcClassicLinkResult =
    { return : Bool }


type alias DisassociateAddressRequest =
    { publicIp : String, dryRun : Bool, associationId : String }


type alias DisassociateClientVpnTargetNetworkRequest =
    { dryRun : Bool, clientVpnEndpointId : String, associationId : String }


type alias DisassociateClientVpnTargetNetworkResult =
    { status : AssociationStatus, associationId : String }


type alias DisassociateIamInstanceProfileRequest =
    { associationId : String }


type alias DisassociateIamInstanceProfileResult =
    { iamInstanceProfileAssociation : IamInstanceProfileAssociation }


type alias DisassociateRouteTableRequest =
    { dryRun : Bool, associationId : String }


type alias DisassociateSubnetCidrBlockRequest =
    { associationId : String }


type alias DisassociateSubnetCidrBlockResult =
    { subnetId : String, ipv6CidrBlockAssociation : SubnetIpv6CidrBlockAssociation }


type alias DisassociateTransitGatewayRouteTableRequest =
    { transitGatewayRouteTableId : String, transitGatewayAttachmentId : String, dryRun : Bool }


type alias DisassociateTransitGatewayRouteTableResult =
    { association : TransitGatewayAssociation }


type alias DisassociateVpcCidrBlockRequest =
    { associationId : String }


type alias DisassociateVpcCidrBlockResult =
    { vpcId : String
    , ipv6CidrBlockAssociation : VpcIpv6CidrBlockAssociation
    , cidrBlockAssociation : VpcCidrBlockAssociation
    }


type alias DiskImage =
    { volume : VolumeDetail, image : DiskImageDetail, description : String }


type alias DiskImageDescription =
    { size : Int, importManifestUrl : String, format : DiskImageFormat, checksum : String }


type alias DiskImageDetail =
    { importManifestUrl : String, format : DiskImageFormat, bytes : Int }


type DiskImageFormat
    = DiskImageFormatVmdk
    | DiskImageFormatRaw
    | DiskImageFormatVhd


diskImageFormat : Enum DiskImageFormat
diskImageFormat =
    Enum.define
        [ DiskImageFormatVmdk, DiskImageFormatRaw, DiskImageFormatVhd ]
        (\val ->
            case val of
                DiskImageFormatVmdk ->
                    "VMDK"

                DiskImageFormatRaw ->
                    "RAW"

                DiskImageFormatVhd ->
                    "VHD"
        )


type alias DiskImageList =
    List DiskImage


type alias DiskImageVolumeDescription =
    { size : Int, id : String }


type alias DnsEntry =
    { hostedZoneId : String, dnsName : String }


type alias DnsEntrySet =
    List DnsEntry


type alias DnsServersOptionsModifyStructure =
    { enabled : Bool, customDnsServers : ValueStringList }


type DnsSupportValue
    = DnsSupportValueEnable
    | DnsSupportValueDisable


dnsSupportValue : Enum DnsSupportValue
dnsSupportValue =
    Enum.define
        [ DnsSupportValueEnable, DnsSupportValueDisable ]
        (\val ->
            case val of
                DnsSupportValueEnable ->
                    "enable"

                DnsSupportValueDisable ->
                    "disable"
        )


type DomainType
    = DomainTypeVpc
    | DomainTypeStandard


domainType : Enum DomainType
domainType =
    Enum.define
        [ DomainTypeVpc, DomainTypeStandard ]
        (\val ->
            case val of
                DomainTypeVpc ->
                    "vpc"

                DomainTypeStandard ->
                    "standard"
        )


type alias Double =
    Float


type alias EbsBlockDevice =
    { volumeType : VolumeType
    , volumeSize : Int
    , snapshotId : String
    , kmsKeyId : String
    , iops : Int
    , encrypted : Bool
    , deleteOnTermination : Bool
    }


type alias EbsInstanceBlockDevice =
    { volumeId : String, status : AttachmentStatus, deleteOnTermination : Bool, attachTime : DateTime }


type alias EbsInstanceBlockDeviceSpecification =
    { volumeId : String, deleteOnTermination : Bool }


type alias EgressOnlyInternetGateway =
    { egressOnlyInternetGatewayId : String, attachments : InternetGatewayAttachmentList }


type alias EgressOnlyInternetGatewayId =
    String


type alias EgressOnlyInternetGatewayIdList =
    List String


type alias EgressOnlyInternetGatewayList =
    List EgressOnlyInternetGateway


type alias ElasticGpuAssociation =
    { elasticGpuId : String
    , elasticGpuAssociationTime : String
    , elasticGpuAssociationState : String
    , elasticGpuAssociationId : String
    }


type alias ElasticGpuAssociationList =
    List ElasticGpuAssociation


type alias ElasticGpuHealth =
    { status : ElasticGpuStatus }


type alias ElasticGpuIdSet =
    List String


type alias ElasticGpuSet =
    List ElasticGpus


type alias ElasticGpuSpecification =
    { type_ : String }


type alias ElasticGpuSpecificationList =
    List ElasticGpuSpecification


type alias ElasticGpuSpecificationResponse =
    { type_ : String }


type alias ElasticGpuSpecificationResponseList =
    List ElasticGpuSpecificationResponse


type alias ElasticGpuSpecifications =
    List ElasticGpuSpecification


type ElasticGpuState
    = ElasticGpuStateAttached


elasticGpuState : Enum ElasticGpuState
elasticGpuState =
    Enum.define
        [ ElasticGpuStateAttached ]
        (\val ->
            case val of
                ElasticGpuStateAttached ->
                    "ATTACHED"
        )


type ElasticGpuStatus
    = ElasticGpuStatusOk
    | ElasticGpuStatusImpaired


elasticGpuStatus : Enum ElasticGpuStatus
elasticGpuStatus =
    Enum.define
        [ ElasticGpuStatusOk, ElasticGpuStatusImpaired ]
        (\val ->
            case val of
                ElasticGpuStatusOk ->
                    "OK"

                ElasticGpuStatusImpaired ->
                    "IMPAIRED"
        )


type alias ElasticGpus =
    { instanceId : String
    , elasticGpuType : String
    , elasticGpuState : ElasticGpuState
    , elasticGpuId : String
    , elasticGpuHealth : ElasticGpuHealth
    , availabilityZone : String
    }


type alias ElasticInferenceAccelerator =
    { type_ : String }


type alias ElasticInferenceAcceleratorAssociation =
    { elasticInferenceAcceleratorAssociationTime : DateTime
    , elasticInferenceAcceleratorAssociationState : String
    , elasticInferenceAcceleratorAssociationId : String
    , elasticInferenceAcceleratorArn : String
    }


type alias ElasticInferenceAcceleratorAssociationList =
    List ElasticInferenceAcceleratorAssociation


type alias ElasticInferenceAccelerators =
    List ElasticInferenceAccelerator


type alias EnableEbsEncryptionByDefaultRequest =
    { dryRun : Bool }


type alias EnableEbsEncryptionByDefaultResult =
    { ebsEncryptionByDefault : Bool }


type alias EnableTransitGatewayRouteTablePropagationRequest =
    { transitGatewayRouteTableId : String, transitGatewayAttachmentId : String, dryRun : Bool }


type alias EnableTransitGatewayRouteTablePropagationResult =
    { propagation : TransitGatewayPropagation }


type alias EnableVgwRoutePropagationRequest =
    { routeTableId : String, gatewayId : String }


type alias EnableVolumeIorequest =
    { volumeId : String, dryRun : Bool }


type alias EnableVpcClassicLinkDnsSupportRequest =
    { vpcId : String }


type alias EnableVpcClassicLinkDnsSupportResult =
    { return : Bool }


type alias EnableVpcClassicLinkRequest =
    { vpcId : String, dryRun : Bool }


type alias EnableVpcClassicLinkResult =
    { return : Bool }


type EndDateType
    = EndDateTypeUnlimited
    | EndDateTypeLimited


endDateType : Enum EndDateType
endDateType =
    Enum.define
        [ EndDateTypeUnlimited, EndDateTypeLimited ]
        (\val ->
            case val of
                EndDateTypeUnlimited ->
                    "unlimited"

                EndDateTypeLimited ->
                    "limited"
        )


type alias EndpointSet =
    List ClientVpnEndpoint


type EventCode
    = EventCodeInstanceReboot
    | EventCodeSystemReboot
    | EventCodeSystemMaintenance
    | EventCodeInstanceRetirement
    | EventCodeInstanceStop


eventCode : Enum EventCode
eventCode =
    Enum.define
        [ EventCodeInstanceReboot
        , EventCodeSystemReboot
        , EventCodeSystemMaintenance
        , EventCodeInstanceRetirement
        , EventCodeInstanceStop
        ]
        (\val ->
            case val of
                EventCodeInstanceReboot ->
                    "instance-reboot"

                EventCodeSystemReboot ->
                    "system-reboot"

                EventCodeSystemMaintenance ->
                    "system-maintenance"

                EventCodeInstanceRetirement ->
                    "instance-retirement"

                EventCodeInstanceStop ->
                    "instance-stop"
        )


type alias EventInformation =
    { instanceId : String, eventSubType : String, eventDescription : String }


type EventType
    = EventTypeInstanceChange
    | EventTypeFleetRequestChange
    | EventTypeError
    | EventTypeInformation


eventType : Enum EventType
eventType =
    Enum.define
        [ EventTypeInstanceChange, EventTypeFleetRequestChange, EventTypeError, EventTypeInformation ]
        (\val ->
            case val of
                EventTypeInstanceChange ->
                    "instanceChange"

                EventTypeFleetRequestChange ->
                    "fleetRequestChange"

                EventTypeError ->
                    "error"

                EventTypeInformation ->
                    "information"
        )


type ExcessCapacityTerminationPolicy
    = ExcessCapacityTerminationPolicyNoTermination
    | ExcessCapacityTerminationPolicyDefault


excessCapacityTerminationPolicy : Enum ExcessCapacityTerminationPolicy
excessCapacityTerminationPolicy =
    Enum.define
        [ ExcessCapacityTerminationPolicyNoTermination, ExcessCapacityTerminationPolicyDefault ]
        (\val ->
            case val of
                ExcessCapacityTerminationPolicyNoTermination ->
                    "noTermination"

                ExcessCapacityTerminationPolicyDefault ->
                    "default"
        )


type alias ExecutableByStringList =
    List String


type alias ExportClientVpnClientCertificateRevocationListRequest =
    { dryRun : Bool, clientVpnEndpointId : String }


type alias ExportClientVpnClientCertificateRevocationListResult =
    { status : ClientCertificateRevocationListStatus, certificateRevocationList : String }


type alias ExportClientVpnClientConfigurationRequest =
    { dryRun : Bool, clientVpnEndpointId : String }


type alias ExportClientVpnClientConfigurationResult =
    { clientConfiguration : String }


type ExportEnvironment
    = ExportEnvironmentCitrix
    | ExportEnvironmentVmware
    | ExportEnvironmentMicrosoft


exportEnvironment : Enum ExportEnvironment
exportEnvironment =
    Enum.define
        [ ExportEnvironmentCitrix, ExportEnvironmentVmware, ExportEnvironmentMicrosoft ]
        (\val ->
            case val of
                ExportEnvironmentCitrix ->
                    "citrix"

                ExportEnvironmentVmware ->
                    "vmware"

                ExportEnvironmentMicrosoft ->
                    "microsoft"
        )


type alias ExportTask =
    { statusMessage : String
    , state : ExportTaskState
    , instanceExportDetails : InstanceExportDetails
    , exportToS3Task : ExportToS3Task
    , exportTaskId : String
    , description : String
    }


type alias ExportTaskIdStringList =
    List String


type alias ExportTaskList =
    List ExportTask


type ExportTaskState
    = ExportTaskStateActive
    | ExportTaskStateCancelling
    | ExportTaskStateCancelled
    | ExportTaskStateCompleted


exportTaskState : Enum ExportTaskState
exportTaskState =
    Enum.define
        [ ExportTaskStateActive, ExportTaskStateCancelling, ExportTaskStateCancelled, ExportTaskStateCompleted ]
        (\val ->
            case val of
                ExportTaskStateActive ->
                    "active"

                ExportTaskStateCancelling ->
                    "cancelling"

                ExportTaskStateCancelled ->
                    "cancelled"

                ExportTaskStateCompleted ->
                    "completed"
        )


type alias ExportToS3Task =
    { s3Key : String, s3Bucket : String, diskImageFormat : DiskImageFormat, containerFormat : ContainerFormat }


type alias ExportToS3TaskSpecification =
    { s3Prefix : String, s3Bucket : String, diskImageFormat : DiskImageFormat, containerFormat : ContainerFormat }


type alias ExportTransitGatewayRoutesRequest =
    { transitGatewayRouteTableId : String, s3Bucket : String, filters : FilterList, dryRun : Bool }


type alias ExportTransitGatewayRoutesResult =
    { s3Location : String }


type alias Filter =
    { values : ValueStringList, name : String }


type alias FilterList =
    List Filter


type FleetActivityStatus
    = FleetActivityStatusError
    | FleetActivityStatusPendingFulfillment
    | FleetActivityStatusPendingTermination
    | FleetActivityStatusFulfilled


fleetActivityStatus : Enum FleetActivityStatus
fleetActivityStatus =
    Enum.define
        [ FleetActivityStatusError
        , FleetActivityStatusPendingFulfillment
        , FleetActivityStatusPendingTermination
        , FleetActivityStatusFulfilled
        ]
        (\val ->
            case val of
                FleetActivityStatusError ->
                    "error"

                FleetActivityStatusPendingFulfillment ->
                    "pending-fulfillment"

                FleetActivityStatusPendingTermination ->
                    "pending-termination"

                FleetActivityStatusFulfilled ->
                    "fulfilled"
        )


type alias FleetData =
    { validUntil : DateTime
    , validFrom : DateTime
    , type_ : FleetType
    , terminateInstancesWithExpiration : Bool
    , targetCapacitySpecification : TargetCapacitySpecification
    , tags : TagList
    , spotOptions : SpotOptions
    , replaceUnhealthyInstances : Bool
    , onDemandOptions : OnDemandOptions
    , launchTemplateConfigs : FleetLaunchTemplateConfigList
    , instances : DescribeFleetsInstancesSet
    , fulfilledOnDemandCapacity : Float
    , fulfilledCapacity : Float
    , fleetState : FleetStateCode
    , fleetId : String
    , excessCapacityTerminationPolicy : FleetExcessCapacityTerminationPolicy
    , errors : DescribeFleetsErrorSet
    , createTime : DateTime
    , clientToken : String
    , activityStatus : FleetActivityStatus
    }


type FleetEventType
    = FleetEventTypeInstanceChange
    | FleetEventTypeFleetChange
    | FleetEventTypeServiceError


fleetEventType : Enum FleetEventType
fleetEventType =
    Enum.define
        [ FleetEventTypeInstanceChange, FleetEventTypeFleetChange, FleetEventTypeServiceError ]
        (\val ->
            case val of
                FleetEventTypeInstanceChange ->
                    "instance-change"

                FleetEventTypeFleetChange ->
                    "fleet-change"

                FleetEventTypeServiceError ->
                    "service-error"
        )


type FleetExcessCapacityTerminationPolicy
    = FleetExcessCapacityTerminationPolicyNoTermination
    | FleetExcessCapacityTerminationPolicyTermination


fleetExcessCapacityTerminationPolicy : Enum FleetExcessCapacityTerminationPolicy
fleetExcessCapacityTerminationPolicy =
    Enum.define
        [ FleetExcessCapacityTerminationPolicyNoTermination, FleetExcessCapacityTerminationPolicyTermination ]
        (\val ->
            case val of
                FleetExcessCapacityTerminationPolicyNoTermination ->
                    "no-termination"

                FleetExcessCapacityTerminationPolicyTermination ->
                    "termination"
        )


type alias FleetIdSet =
    List String


type alias FleetIdentifier =
    String


type alias FleetLaunchTemplateConfig =
    { overrides : FleetLaunchTemplateOverridesList, launchTemplateSpecification : FleetLaunchTemplateSpecification }


type alias FleetLaunchTemplateConfigList =
    List FleetLaunchTemplateConfig


type alias FleetLaunchTemplateConfigListRequest =
    List FleetLaunchTemplateConfigRequest


type alias FleetLaunchTemplateConfigRequest =
    { overrides : FleetLaunchTemplateOverridesListRequest
    , launchTemplateSpecification : FleetLaunchTemplateSpecificationRequest
    }


type alias FleetLaunchTemplateOverrides =
    { weightedCapacity : Float
    , subnetId : String
    , priority : Float
    , placement : PlacementResponse
    , maxPrice : String
    , instanceType : InstanceType
    , availabilityZone : String
    }


type alias FleetLaunchTemplateOverridesList =
    List FleetLaunchTemplateOverrides


type alias FleetLaunchTemplateOverridesListRequest =
    List FleetLaunchTemplateOverridesRequest


type alias FleetLaunchTemplateOverridesRequest =
    { weightedCapacity : Float
    , subnetId : String
    , priority : Float
    , placement : Placement
    , maxPrice : String
    , instanceType : InstanceType
    , availabilityZone : String
    }


type alias FleetLaunchTemplateSpecification =
    { version : String, launchTemplateName : LaunchTemplateName, launchTemplateId : String }


type alias FleetLaunchTemplateSpecificationRequest =
    { version : String, launchTemplateName : LaunchTemplateName, launchTemplateId : String }


type FleetOnDemandAllocationStrategy
    = FleetOnDemandAllocationStrategyLowestPrice
    | FleetOnDemandAllocationStrategyPrioritized


fleetOnDemandAllocationStrategy : Enum FleetOnDemandAllocationStrategy
fleetOnDemandAllocationStrategy =
    Enum.define
        [ FleetOnDemandAllocationStrategyLowestPrice, FleetOnDemandAllocationStrategyPrioritized ]
        (\val ->
            case val of
                FleetOnDemandAllocationStrategyLowestPrice ->
                    "lowest-price"

                FleetOnDemandAllocationStrategyPrioritized ->
                    "prioritized"
        )


type alias FleetSet =
    List FleetData


type FleetStateCode
    = FleetStateCodeSubmitted
    | FleetStateCodeActive
    | FleetStateCodeDeleted
    | FleetStateCodeFailed
    | FleetStateCodeDeletedRunning
    | FleetStateCodeDeletedTerminating
    | FleetStateCodeModifying


fleetStateCode : Enum FleetStateCode
fleetStateCode =
    Enum.define
        [ FleetStateCodeSubmitted
        , FleetStateCodeActive
        , FleetStateCodeDeleted
        , FleetStateCodeFailed
        , FleetStateCodeDeletedRunning
        , FleetStateCodeDeletedTerminating
        , FleetStateCodeModifying
        ]
        (\val ->
            case val of
                FleetStateCodeSubmitted ->
                    "submitted"

                FleetStateCodeActive ->
                    "active"

                FleetStateCodeDeleted ->
                    "deleted"

                FleetStateCodeFailed ->
                    "failed"

                FleetStateCodeDeletedRunning ->
                    "deleted-running"

                FleetStateCodeDeletedTerminating ->
                    "deleted-terminating"

                FleetStateCodeModifying ->
                    "modifying"
        )


type FleetType
    = FleetTypeRequest
    | FleetTypeMaintain
    | FleetTypeInstant


fleetType : Enum FleetType
fleetType =
    Enum.define
        [ FleetTypeRequest, FleetTypeMaintain, FleetTypeInstant ]
        (\val ->
            case val of
                FleetTypeRequest ->
                    "request"

                FleetTypeMaintain ->
                    "maintain"

                FleetTypeInstant ->
                    "instant"
        )


type alias Float_ =
    Float


type alias FlowLog =
    { trafficType : TrafficType
    , resourceId : String
    , logGroupName : String
    , logDestinationType : LogDestinationType
    , logDestination : String
    , flowLogStatus : String
    , flowLogId : String
    , deliverLogsStatus : String
    , deliverLogsPermissionArn : String
    , deliverLogsErrorMessage : String
    , creationTime : DateTime
    }


type alias FlowLogSet =
    List FlowLog


type FlowLogsResourceType
    = FlowLogsResourceTypeVpc
    | FlowLogsResourceTypeSubnet
    | FlowLogsResourceTypeNetworkInterface


flowLogsResourceType : Enum FlowLogsResourceType
flowLogsResourceType =
    Enum.define
        [ FlowLogsResourceTypeVpc, FlowLogsResourceTypeSubnet, FlowLogsResourceTypeNetworkInterface ]
        (\val ->
            case val of
                FlowLogsResourceTypeVpc ->
                    "VPC"

                FlowLogsResourceTypeSubnet ->
                    "Subnet"

                FlowLogsResourceTypeNetworkInterface ->
                    "NetworkInterface"
        )


type alias FpgaImage =
    { updateTime : DateTime
    , tags : TagList
    , state : FpgaImageState
    , shellVersion : String
    , public : Bool
    , productCodes : ProductCodeList
    , pciId : PciId
    , ownerId : String
    , ownerAlias : String
    , name : String
    , fpgaImageId : String
    , fpgaImageGlobalId : String
    , description : String
    , dataRetentionSupport : Bool
    , createTime : DateTime
    }


type alias FpgaImageAttribute =
    { productCodes : ProductCodeList
    , name : String
    , loadPermissions : LoadPermissionList
    , fpgaImageId : String
    , description : String
    }


type FpgaImageAttributeName
    = FpgaImageAttributeNameDescription
    | FpgaImageAttributeNameName
    | FpgaImageAttributeNameLoadPermission
    | FpgaImageAttributeNameProductCodes


fpgaImageAttributeName : Enum FpgaImageAttributeName
fpgaImageAttributeName =
    Enum.define
        [ FpgaImageAttributeNameDescription
        , FpgaImageAttributeNameName
        , FpgaImageAttributeNameLoadPermission
        , FpgaImageAttributeNameProductCodes
        ]
        (\val ->
            case val of
                FpgaImageAttributeNameDescription ->
                    "description"

                FpgaImageAttributeNameName ->
                    "name"

                FpgaImageAttributeNameLoadPermission ->
                    "loadPermission"

                FpgaImageAttributeNameProductCodes ->
                    "productCodes"
        )


type alias FpgaImageIdList =
    List String


type alias FpgaImageList =
    List FpgaImage


type alias FpgaImageState =
    { message : String, code : FpgaImageStateCode }


type FpgaImageStateCode
    = FpgaImageStateCodePending
    | FpgaImageStateCodeFailed
    | FpgaImageStateCodeAvailable
    | FpgaImageStateCodeUnavailable


fpgaImageStateCode : Enum FpgaImageStateCode
fpgaImageStateCode =
    Enum.define
        [ FpgaImageStateCodePending
        , FpgaImageStateCodeFailed
        , FpgaImageStateCodeAvailable
        , FpgaImageStateCodeUnavailable
        ]
        (\val ->
            case val of
                FpgaImageStateCodePending ->
                    "pending"

                FpgaImageStateCodeFailed ->
                    "failed"

                FpgaImageStateCodeAvailable ->
                    "available"

                FpgaImageStateCodeUnavailable ->
                    "unavailable"
        )


type GatewayType
    = GatewayTypeIpsec1


gatewayType : Enum GatewayType
gatewayType =
    Enum.define
        [ GatewayTypeIpsec1 ]
        (\val ->
            case val of
                GatewayTypeIpsec1 ->
                    "ipsec.1"
        )


type alias GetCapacityReservationUsageRequest =
    { nextToken : String
    , maxResults : GetCapacityReservationUsageRequestMaxResults
    , dryRun : Bool
    , capacityReservationId : String
    }


type GetCapacityReservationUsageRequestMaxResults
    = GetCapacityReservationUsageRequestMaxResults Int


getCapacityReservationUsageRequestMaxResults : Refined Int GetCapacityReservationUsageRequestMaxResults IntError
getCapacityReservationUsageRequestMaxResults =
    let
        guardFn val =
            Refined.gt 1 val
                |> Result.andThen (Refined.lt 1000)
                |> Result.map GetCapacityReservationUsageRequestMaxResults

        unboxFn (GetCapacityReservationUsageRequestMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias GetCapacityReservationUsageResult =
    { totalInstanceCount : Int
    , state : CapacityReservationState
    , nextToken : String
    , instanceUsages : InstanceUsageSet
    , instanceType : String
    , capacityReservationId : String
    , availableInstanceCount : Int
    }


type alias GetConsoleOutputRequest =
    { latest : Bool, instanceId : String, dryRun : Bool }


type alias GetConsoleOutputResult =
    { timestamp : DateTime, output : String, instanceId : String }


type alias GetConsoleScreenshotRequest =
    { wakeUp : Bool, instanceId : String, dryRun : Bool }


type alias GetConsoleScreenshotResult =
    { instanceId : String, imageData : String }


type alias GetEbsDefaultKmsKeyIdRequest =
    { dryRun : Bool }


type alias GetEbsDefaultKmsKeyIdResult =
    { kmsKeyId : String }


type alias GetEbsEncryptionByDefaultRequest =
    { dryRun : Bool }


type alias GetEbsEncryptionByDefaultResult =
    { ebsEncryptionByDefault : Bool }


type alias GetHostReservationPurchasePreviewRequest =
    { offeringId : String, hostIdSet : RequestHostIdSet }


type alias GetHostReservationPurchasePreviewResult =
    { totalUpfrontPrice : String, totalHourlyPrice : String, purchase : PurchaseSet, currencyCode : CurrencyCodeValues }


type alias GetLaunchTemplateDataRequest =
    { instanceId : String, dryRun : Bool }


type alias GetLaunchTemplateDataResult =
    { launchTemplateData : ResponseLaunchTemplateData }


type alias GetPasswordDataRequest =
    { instanceId : String, dryRun : Bool }


type alias GetPasswordDataResult =
    { timestamp : DateTime, passwordData : String, instanceId : String }


type alias GetReservedInstancesExchangeQuoteRequest =
    { targetConfigurations : TargetConfigurationRequestSet, reservedInstanceIds : ReservedInstanceIdSet, dryRun : Bool }


type alias GetReservedInstancesExchangeQuoteResult =
    { validationFailureReason : String
    , targetConfigurationValueSet : TargetReservationValueSet
    , targetConfigurationValueRollup : ReservationValue
    , reservedInstanceValueSet : ReservedInstanceReservationValueSet
    , reservedInstanceValueRollup : ReservationValue
    , paymentDue : String
    , outputReservedInstancesWillExpireAt : DateTime
    , isValidExchange : Bool
    , currencyCode : String
    }


type alias GetTransitGatewayAttachmentPropagationsRequest =
    { transitGatewayAttachmentId : String
    , nextToken : String
    , maxResults : TransitGatewayMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias GetTransitGatewayAttachmentPropagationsResult =
    { transitGatewayAttachmentPropagations : TransitGatewayAttachmentPropagationList, nextToken : String }


type alias GetTransitGatewayRouteTableAssociationsRequest =
    { transitGatewayRouteTableId : String
    , nextToken : String
    , maxResults : TransitGatewayMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias GetTransitGatewayRouteTableAssociationsResult =
    { nextToken : String, associations : TransitGatewayRouteTableAssociationList }


type alias GetTransitGatewayRouteTablePropagationsRequest =
    { transitGatewayRouteTableId : String
    , nextToken : String
    , maxResults : TransitGatewayMaxResults
    , filters : FilterList
    , dryRun : Bool
    }


type alias GetTransitGatewayRouteTablePropagationsResult =
    { transitGatewayRouteTablePropagations : TransitGatewayRouteTablePropagationList, nextToken : String }


type alias GroupIdStringList =
    List String


type alias GroupIdentifier =
    { groupName : String, groupId : String }


type alias GroupIdentifierList =
    List GroupIdentifier


type alias GroupIdentifierSet =
    List SecurityGroupIdentifier


type alias GroupIds =
    List String


type alias GroupNameStringList =
    List String


type alias HibernationOptions =
    { configured : Bool }


type alias HibernationOptionsRequest =
    { configured : Bool }


type alias HistoryRecord =
    { timestamp : DateTime, eventType : EventType, eventInformation : EventInformation }


type alias HistoryRecordEntry =
    { timestamp : DateTime, eventType : FleetEventType, eventInformation : EventInformation }


type alias HistoryRecordSet =
    List HistoryRecordEntry


type alias HistoryRecords =
    List HistoryRecord


type alias Host =
    { tags : TagList
    , state : AllocationState
    , releaseTime : DateTime
    , instances : HostInstanceList
    , hostReservationId : String
    , hostRecovery : HostRecovery
    , hostProperties : HostProperties
    , hostId : String
    , clientToken : String
    , availableCapacity : AvailableCapacity
    , availabilityZone : String
    , autoPlacement : AutoPlacement
    , allocationTime : DateTime
    }


type alias HostInstance =
    { instanceType : String, instanceId : String }


type alias HostInstanceList =
    List HostInstance


type alias HostList =
    List Host


type alias HostOffering =
    { upfrontPrice : String
    , paymentOption : PaymentOption
    , offeringId : String
    , instanceFamily : String
    , hourlyPrice : String
    , duration : Int
    , currencyCode : CurrencyCodeValues
    }


type alias HostOfferingSet =
    List HostOffering


type alias HostProperties =
    { totalVcpus : Int, sockets : Int, instanceType : String, cores : Int }


type HostRecovery
    = HostRecoveryOn
    | HostRecoveryOff


hostRecovery : Enum HostRecovery
hostRecovery =
    Enum.define
        [ HostRecoveryOn, HostRecoveryOff ]
        (\val ->
            case val of
                HostRecoveryOn ->
                    "on"

                HostRecoveryOff ->
                    "off"
        )


type alias HostReservation =
    { upfrontPrice : String
    , tags : TagList
    , state : ReservationState
    , start : DateTime
    , paymentOption : PaymentOption
    , offeringId : String
    , instanceFamily : String
    , hourlyPrice : String
    , hostReservationId : String
    , hostIdSet : ResponseHostIdSet
    , end : DateTime
    , duration : Int
    , currencyCode : CurrencyCodeValues
    , count : Int
    }


type alias HostReservationIdSet =
    List String


type alias HostReservationSet =
    List HostReservation


type HostTenancy
    = HostTenancyDedicated
    | HostTenancyHost


hostTenancy : Enum HostTenancy
hostTenancy =
    Enum.define
        [ HostTenancyDedicated, HostTenancyHost ]
        (\val ->
            case val of
                HostTenancyDedicated ->
                    "dedicated"

                HostTenancyHost ->
                    "host"
        )


type HypervisorType
    = HypervisorTypeOvm
    | HypervisorTypeXen


hypervisorType : Enum HypervisorType
hypervisorType =
    Enum.define
        [ HypervisorTypeOvm, HypervisorTypeXen ]
        (\val ->
            case val of
                HypervisorTypeOvm ->
                    "ovm"

                HypervisorTypeXen ->
                    "xen"
        )


type alias IamInstanceProfile =
    { id : String, arn : String }


type alias IamInstanceProfileAssociation =
    { timestamp : DateTime
    , state : IamInstanceProfileAssociationState
    , instanceId : String
    , iamInstanceProfile : IamInstanceProfile
    , associationId : String
    }


type alias IamInstanceProfileAssociationSet =
    List IamInstanceProfileAssociation


type IamInstanceProfileAssociationState
    = IamInstanceProfileAssociationStateAssociating
    | IamInstanceProfileAssociationStateAssociated
    | IamInstanceProfileAssociationStateDisassociating
    | IamInstanceProfileAssociationStateDisassociated


iamInstanceProfileAssociationState : Enum IamInstanceProfileAssociationState
iamInstanceProfileAssociationState =
    Enum.define
        [ IamInstanceProfileAssociationStateAssociating
        , IamInstanceProfileAssociationStateAssociated
        , IamInstanceProfileAssociationStateDisassociating
        , IamInstanceProfileAssociationStateDisassociated
        ]
        (\val ->
            case val of
                IamInstanceProfileAssociationStateAssociating ->
                    "associating"

                IamInstanceProfileAssociationStateAssociated ->
                    "associated"

                IamInstanceProfileAssociationStateDisassociating ->
                    "disassociating"

                IamInstanceProfileAssociationStateDisassociated ->
                    "disassociated"
        )


type alias IamInstanceProfileSpecification =
    { name : String, arn : String }


type alias IcmpTypeCode =
    { type_ : Int, code : Int }


type alias IdFormat =
    { useLongIds : Bool, resource : String, deadline : DateTime }


type alias IdFormatList =
    List IdFormat


type alias Image =
    { virtualizationType : VirtualizationType
    , tags : TagList
    , stateReason : StateReason
    , state : ImageState
    , sriovNetSupport : String
    , rootDeviceType : DeviceType
    , rootDeviceName : String
    , ramdiskId : String
    , public : Bool
    , productCodes : ProductCodeList
    , platform : PlatformValues
    , ownerId : String
    , name : String
    , kernelId : String
    , imageType : ImageTypeValues
    , imageOwnerAlias : String
    , imageLocation : String
    , imageId : String
    , hypervisor : HypervisorType
    , enaSupport : Bool
    , description : String
    , creationDate : String
    , blockDeviceMappings : BlockDeviceMappingList
    , architecture : ArchitectureValues
    }


type alias ImageAttribute =
    { sriovNetSupport : AttributeValue
    , ramdiskId : AttributeValue
    , productCodes : ProductCodeList
    , launchPermissions : LaunchPermissionList
    , kernelId : AttributeValue
    , imageId : String
    , description : AttributeValue
    , blockDeviceMappings : BlockDeviceMappingList
    }


type ImageAttributeName
    = ImageAttributeNameDescription
    | ImageAttributeNameKernel
    | ImageAttributeNameRamdisk
    | ImageAttributeNameLaunchPermission
    | ImageAttributeNameProductCodes
    | ImageAttributeNameBlockDeviceMapping
    | ImageAttributeNameSriovNetSupport


imageAttributeName : Enum ImageAttributeName
imageAttributeName =
    Enum.define
        [ ImageAttributeNameDescription
        , ImageAttributeNameKernel
        , ImageAttributeNameRamdisk
        , ImageAttributeNameLaunchPermission
        , ImageAttributeNameProductCodes
        , ImageAttributeNameBlockDeviceMapping
        , ImageAttributeNameSriovNetSupport
        ]
        (\val ->
            case val of
                ImageAttributeNameDescription ->
                    "description"

                ImageAttributeNameKernel ->
                    "kernel"

                ImageAttributeNameRamdisk ->
                    "ramdisk"

                ImageAttributeNameLaunchPermission ->
                    "launchPermission"

                ImageAttributeNameProductCodes ->
                    "productCodes"

                ImageAttributeNameBlockDeviceMapping ->
                    "blockDeviceMapping"

                ImageAttributeNameSriovNetSupport ->
                    "sriovNetSupport"
        )


type alias ImageDiskContainer =
    { userBucket : UserBucket
    , url : String
    , snapshotId : String
    , format : String
    , deviceName : String
    , description : String
    }


type alias ImageDiskContainerList =
    List ImageDiskContainer


type alias ImageIdStringList =
    List String


type alias ImageList =
    List Image


type ImageState
    = ImageStatePending
    | ImageStateAvailable
    | ImageStateInvalid
    | ImageStateDeregistered
    | ImageStateTransient
    | ImageStateFailed
    | ImageStateError


imageState : Enum ImageState
imageState =
    Enum.define
        [ ImageStatePending
        , ImageStateAvailable
        , ImageStateInvalid
        , ImageStateDeregistered
        , ImageStateTransient
        , ImageStateFailed
        , ImageStateError
        ]
        (\val ->
            case val of
                ImageStatePending ->
                    "pending"

                ImageStateAvailable ->
                    "available"

                ImageStateInvalid ->
                    "invalid"

                ImageStateDeregistered ->
                    "deregistered"

                ImageStateTransient ->
                    "transient"

                ImageStateFailed ->
                    "failed"

                ImageStateError ->
                    "error"
        )


type ImageTypeValues
    = ImageTypeValuesMachine
    | ImageTypeValuesKernel
    | ImageTypeValuesRamdisk


imageTypeValues : Enum ImageTypeValues
imageTypeValues =
    Enum.define
        [ ImageTypeValuesMachine, ImageTypeValuesKernel, ImageTypeValuesRamdisk ]
        (\val ->
            case val of
                ImageTypeValuesMachine ->
                    "machine"

                ImageTypeValuesKernel ->
                    "kernel"

                ImageTypeValuesRamdisk ->
                    "ramdisk"
        )


type alias ImportClientVpnClientCertificateRevocationListRequest =
    { dryRun : Bool, clientVpnEndpointId : String, certificateRevocationList : String }


type alias ImportClientVpnClientCertificateRevocationListResult =
    { return : Bool }


type alias ImportImageRequest =
    { roleName : String
    , platform : String
    , licenseType : String
    , kmsKeyId : String
    , hypervisor : String
    , encrypted : Bool
    , dryRun : Bool
    , diskContainers : ImageDiskContainerList
    , description : String
    , clientToken : String
    , clientData : ClientData
    , architecture : String
    }


type alias ImportImageResult =
    { statusMessage : String
    , status : String
    , snapshotDetails : SnapshotDetailList
    , progress : String
    , platform : String
    , licenseType : String
    , kmsKeyId : String
    , importTaskId : String
    , imageId : String
    , hypervisor : String
    , encrypted : Bool
    , description : String
    , architecture : String
    }


type alias ImportImageTask =
    { statusMessage : String
    , status : String
    , snapshotDetails : SnapshotDetailList
    , progress : String
    , platform : String
    , licenseType : String
    , kmsKeyId : String
    , importTaskId : String
    , imageId : String
    , hypervisor : String
    , encrypted : Bool
    , description : String
    , architecture : String
    }


type alias ImportImageTaskList =
    List ImportImageTask


type alias ImportInstanceLaunchSpecification =
    { userData : UserData
    , subnetId : String
    , privateIpAddress : String
    , placement : Placement
    , monitoring : Bool
    , instanceType : InstanceType
    , instanceInitiatedShutdownBehavior : ShutdownBehavior
    , groupNames : SecurityGroupStringList
    , groupIds : SecurityGroupIdStringList
    , architecture : ArchitectureValues
    , additionalInfo : String
    }


type alias ImportInstanceRequest =
    { platform : PlatformValues
    , launchSpecification : ImportInstanceLaunchSpecification
    , dryRun : Bool
    , diskImages : DiskImageList
    , description : String
    }


type alias ImportInstanceResult =
    { conversionTask : ConversionTask }


type alias ImportInstanceTaskDetails =
    { volumes : ImportInstanceVolumeDetailSet, platform : PlatformValues, instanceId : String, description : String }


type alias ImportInstanceVolumeDetailItem =
    { volume : DiskImageVolumeDescription
    , statusMessage : String
    , status : String
    , image : DiskImageDescription
    , description : String
    , bytesConverted : Int
    , availabilityZone : String
    }


type alias ImportInstanceVolumeDetailSet =
    List ImportInstanceVolumeDetailItem


type alias ImportKeyPairRequest =
    { publicKeyMaterial : String, keyName : String, dryRun : Bool }


type alias ImportKeyPairResult =
    { keyName : String, keyFingerprint : String }


type alias ImportSnapshotRequest =
    { roleName : String
    , kmsKeyId : String
    , encrypted : Bool
    , dryRun : Bool
    , diskContainer : SnapshotDiskContainer
    , description : String
    , clientToken : String
    , clientData : ClientData
    }


type alias ImportSnapshotResult =
    { snapshotTaskDetail : SnapshotTaskDetail, importTaskId : String, description : String }


type alias ImportSnapshotTask =
    { snapshotTaskDetail : SnapshotTaskDetail, importTaskId : String, description : String }


type alias ImportSnapshotTaskList =
    List ImportSnapshotTask


type alias ImportTaskIdList =
    List String


type alias ImportVolumeRequest =
    { volume : VolumeDetail, image : DiskImageDetail, dryRun : Bool, description : String, availabilityZone : String }


type alias ImportVolumeResult =
    { conversionTask : ConversionTask }


type alias ImportVolumeTaskDetails =
    { volume : DiskImageVolumeDescription
    , image : DiskImageDescription
    , description : String
    , bytesConverted : Int
    , availabilityZone : String
    }


type alias Instance =
    { vpcId : String
    , virtualizationType : VirtualizationType
    , tags : TagList
    , subnetId : String
    , stateTransitionReason : String
    , stateReason : StateReason
    , state : InstanceState
    , sriovNetSupport : String
    , spotInstanceRequestId : String
    , sourceDestCheck : Bool
    , securityGroups : GroupIdentifierList
    , rootDeviceType : DeviceType
    , rootDeviceName : String
    , ramdiskId : String
    , publicIpAddress : String
    , publicDnsName : String
    , productCodes : ProductCodeList
    , privateIpAddress : String
    , privateDnsName : String
    , platform : PlatformValues
    , placement : Placement
    , networkInterfaces : InstanceNetworkInterfaceList
    , monitoring : Monitoring
    , licenses : LicenseList
    , launchTime : DateTime
    , keyName : String
    , kernelId : String
    , instanceType : InstanceType
    , instanceLifecycle : InstanceLifecycleType
    , instanceId : String
    , imageId : String
    , iamInstanceProfile : IamInstanceProfile
    , hypervisor : HypervisorType
    , hibernationOptions : HibernationOptions
    , enaSupport : Bool
    , elasticInferenceAcceleratorAssociations : ElasticInferenceAcceleratorAssociationList
    , elasticGpuAssociations : ElasticGpuAssociationList
    , ebsOptimized : Bool
    , cpuOptions : CpuOptions
    , clientToken : String
    , capacityReservationSpecification : CapacityReservationSpecificationResponse
    , capacityReservationId : String
    , blockDeviceMappings : InstanceBlockDeviceMappingList
    , architecture : ArchitectureValues
    , amiLaunchIndex : Int
    }


type alias InstanceAttribute =
    { userData : AttributeValue
    , sriovNetSupport : AttributeValue
    , sourceDestCheck : AttributeBooleanValue
    , rootDeviceName : AttributeValue
    , ramdiskId : AttributeValue
    , productCodes : ProductCodeList
    , kernelId : AttributeValue
    , instanceType : AttributeValue
    , instanceInitiatedShutdownBehavior : AttributeValue
    , instanceId : String
    , groups : GroupIdentifierList
    , enaSupport : AttributeBooleanValue
    , ebsOptimized : AttributeBooleanValue
    , disableApiTermination : AttributeBooleanValue
    , blockDeviceMappings : InstanceBlockDeviceMappingList
    }


type InstanceAttributeName
    = InstanceAttributeNameInstanceType
    | InstanceAttributeNameKernel
    | InstanceAttributeNameRamdisk
    | InstanceAttributeNameUserData
    | InstanceAttributeNameDisableApiTermination
    | InstanceAttributeNameInstanceInitiatedShutdownBehavior
    | InstanceAttributeNameRootDeviceName
    | InstanceAttributeNameBlockDeviceMapping
    | InstanceAttributeNameProductCodes
    | InstanceAttributeNameSourceDestCheck
    | InstanceAttributeNameGroupSet
    | InstanceAttributeNameEbsOptimized
    | InstanceAttributeNameSriovNetSupport
    | InstanceAttributeNameEnaSupport


instanceAttributeName : Enum InstanceAttributeName
instanceAttributeName =
    Enum.define
        [ InstanceAttributeNameInstanceType
        , InstanceAttributeNameKernel
        , InstanceAttributeNameRamdisk
        , InstanceAttributeNameUserData
        , InstanceAttributeNameDisableApiTermination
        , InstanceAttributeNameInstanceInitiatedShutdownBehavior
        , InstanceAttributeNameRootDeviceName
        , InstanceAttributeNameBlockDeviceMapping
        , InstanceAttributeNameProductCodes
        , InstanceAttributeNameSourceDestCheck
        , InstanceAttributeNameGroupSet
        , InstanceAttributeNameEbsOptimized
        , InstanceAttributeNameSriovNetSupport
        , InstanceAttributeNameEnaSupport
        ]
        (\val ->
            case val of
                InstanceAttributeNameInstanceType ->
                    "instanceType"

                InstanceAttributeNameKernel ->
                    "kernel"

                InstanceAttributeNameRamdisk ->
                    "ramdisk"

                InstanceAttributeNameUserData ->
                    "userData"

                InstanceAttributeNameDisableApiTermination ->
                    "disableApiTermination"

                InstanceAttributeNameInstanceInitiatedShutdownBehavior ->
                    "instanceInitiatedShutdownBehavior"

                InstanceAttributeNameRootDeviceName ->
                    "rootDeviceName"

                InstanceAttributeNameBlockDeviceMapping ->
                    "blockDeviceMapping"

                InstanceAttributeNameProductCodes ->
                    "productCodes"

                InstanceAttributeNameSourceDestCheck ->
                    "sourceDestCheck"

                InstanceAttributeNameGroupSet ->
                    "groupSet"

                InstanceAttributeNameEbsOptimized ->
                    "ebsOptimized"

                InstanceAttributeNameSriovNetSupport ->
                    "sriovNetSupport"

                InstanceAttributeNameEnaSupport ->
                    "enaSupport"
        )


type alias InstanceBlockDeviceMapping =
    { ebs : EbsInstanceBlockDevice, deviceName : String }


type alias InstanceBlockDeviceMappingList =
    List InstanceBlockDeviceMapping


type alias InstanceBlockDeviceMappingSpecification =
    { virtualName : String, noDevice : String, ebs : EbsInstanceBlockDeviceSpecification, deviceName : String }


type alias InstanceBlockDeviceMappingSpecificationList =
    List InstanceBlockDeviceMappingSpecification


type alias InstanceCapacity =
    { totalCapacity : Int, instanceType : String, availableCapacity : Int }


type alias InstanceCount =
    { state : ListingState, instanceCount : Int }


type alias InstanceCountList =
    List InstanceCount


type alias InstanceCreditSpecification =
    { instanceId : String, cpuCredits : String }


type alias InstanceCreditSpecificationList =
    List InstanceCreditSpecification


type alias InstanceCreditSpecificationListRequest =
    List InstanceCreditSpecificationRequest


type alias InstanceCreditSpecificationRequest =
    { instanceId : String, cpuCredits : String }


type alias InstanceEventId =
    String


type alias InstanceExportDetails =
    { targetEnvironment : ExportEnvironment, instanceId : String }


type InstanceHealthStatus
    = InstanceHealthStatusHealthy
    | InstanceHealthStatusUnhealthy


instanceHealthStatus : Enum InstanceHealthStatus
instanceHealthStatus =
    Enum.define
        [ InstanceHealthStatusHealthy, InstanceHealthStatusUnhealthy ]
        (\val ->
            case val of
                InstanceHealthStatusHealthy ->
                    "healthy"

                InstanceHealthStatusUnhealthy ->
                    "unhealthy"
        )


type alias InstanceId =
    String


type alias InstanceIdSet =
    List String


type alias InstanceIdStringList =
    List String


type alias InstanceIdsSet =
    List String


type InstanceInterruptionBehavior
    = InstanceInterruptionBehaviorHibernate
    | InstanceInterruptionBehaviorStop
    | InstanceInterruptionBehaviorTerminate


instanceInterruptionBehavior : Enum InstanceInterruptionBehavior
instanceInterruptionBehavior =
    Enum.define
        [ InstanceInterruptionBehaviorHibernate
        , InstanceInterruptionBehaviorStop
        , InstanceInterruptionBehaviorTerminate
        ]
        (\val ->
            case val of
                InstanceInterruptionBehaviorHibernate ->
                    "hibernate"

                InstanceInterruptionBehaviorStop ->
                    "stop"

                InstanceInterruptionBehaviorTerminate ->
                    "terminate"
        )


type alias InstanceIpv6Address =
    { ipv6Address : String }


type alias InstanceIpv6AddressList =
    List InstanceIpv6Address


type alias InstanceIpv6AddressListRequest =
    List InstanceIpv6AddressRequest


type alias InstanceIpv6AddressRequest =
    { ipv6Address : String }


type InstanceLifecycle
    = InstanceLifecycleSpot
    | InstanceLifecycleOnDemand


instanceLifecycle : Enum InstanceLifecycle
instanceLifecycle =
    Enum.define
        [ InstanceLifecycleSpot, InstanceLifecycleOnDemand ]
        (\val ->
            case val of
                InstanceLifecycleSpot ->
                    "spot"

                InstanceLifecycleOnDemand ->
                    "on-demand"
        )


type InstanceLifecycleType
    = InstanceLifecycleTypeSpot
    | InstanceLifecycleTypeScheduled


instanceLifecycleType : Enum InstanceLifecycleType
instanceLifecycleType =
    Enum.define
        [ InstanceLifecycleTypeSpot, InstanceLifecycleTypeScheduled ]
        (\val ->
            case val of
                InstanceLifecycleTypeSpot ->
                    "spot"

                InstanceLifecycleTypeScheduled ->
                    "scheduled"
        )


type alias InstanceList =
    List Instance


type alias InstanceMarketOptionsRequest =
    { spotOptions : SpotMarketOptions, marketType : MarketType }


type InstanceMatchCriteria
    = InstanceMatchCriteriaOpen
    | InstanceMatchCriteriaTargeted


instanceMatchCriteria : Enum InstanceMatchCriteria
instanceMatchCriteria =
    Enum.define
        [ InstanceMatchCriteriaOpen, InstanceMatchCriteriaTargeted ]
        (\val ->
            case val of
                InstanceMatchCriteriaOpen ->
                    "open"

                InstanceMatchCriteriaTargeted ->
                    "targeted"
        )


type alias InstanceMonitoring =
    { monitoring : Monitoring, instanceId : String }


type alias InstanceMonitoringList =
    List InstanceMonitoring


type alias InstanceNetworkInterface =
    { vpcId : String
    , subnetId : String
    , status : NetworkInterfaceStatus
    , sourceDestCheck : Bool
    , privateIpAddresses : InstancePrivateIpAddressList
    , privateIpAddress : String
    , privateDnsName : String
    , ownerId : String
    , networkInterfaceId : String
    , macAddress : String
    , ipv6Addresses : InstanceIpv6AddressList
    , interfaceType : String
    , groups : GroupIdentifierList
    , description : String
    , attachment : InstanceNetworkInterfaceAttachment
    , association : InstanceNetworkInterfaceAssociation
    }


type alias InstanceNetworkInterfaceAssociation =
    { publicIp : String, publicDnsName : String, ipOwnerId : String }


type alias InstanceNetworkInterfaceAttachment =
    { status : AttachmentStatus
    , deviceIndex : Int
    , deleteOnTermination : Bool
    , attachmentId : String
    , attachTime : DateTime
    }


type alias InstanceNetworkInterfaceList =
    List InstanceNetworkInterface


type alias InstanceNetworkInterfaceSpecification =
    { subnetId : String
    , secondaryPrivateIpAddressCount : Int
    , privateIpAddresses : PrivateIpAddressSpecificationList
    , privateIpAddress : String
    , networkInterfaceId : String
    , ipv6Addresses : InstanceIpv6AddressList
    , ipv6AddressCount : Int
    , interfaceType : String
    , groups : SecurityGroupIdStringList
    , deviceIndex : Int
    , description : String
    , deleteOnTermination : Bool
    , associatePublicIpAddress : Bool
    }


type alias InstanceNetworkInterfaceSpecificationList =
    List InstanceNetworkInterfaceSpecification


type alias InstancePrivateIpAddress =
    { privateIpAddress : String
    , privateDnsName : String
    , primary : Bool
    , association : InstanceNetworkInterfaceAssociation
    }


type alias InstancePrivateIpAddressList =
    List InstancePrivateIpAddress


type alias InstanceSpecification =
    { instanceId : String, excludeBootVolume : Bool }


type alias InstanceState =
    { name : InstanceStateName, code : Int }


type alias InstanceStateChange =
    { previousState : InstanceState, instanceId : String, currentState : InstanceState }


type alias InstanceStateChangeList =
    List InstanceStateChange


type InstanceStateName
    = InstanceStateNamePending
    | InstanceStateNameRunning
    | InstanceStateNameShuttingDown
    | InstanceStateNameTerminated
    | InstanceStateNameStopping
    | InstanceStateNameStopped


instanceStateName : Enum InstanceStateName
instanceStateName =
    Enum.define
        [ InstanceStateNamePending
        , InstanceStateNameRunning
        , InstanceStateNameShuttingDown
        , InstanceStateNameTerminated
        , InstanceStateNameStopping
        , InstanceStateNameStopped
        ]
        (\val ->
            case val of
                InstanceStateNamePending ->
                    "pending"

                InstanceStateNameRunning ->
                    "running"

                InstanceStateNameShuttingDown ->
                    "shutting-down"

                InstanceStateNameTerminated ->
                    "terminated"

                InstanceStateNameStopping ->
                    "stopping"

                InstanceStateNameStopped ->
                    "stopped"
        )


type alias InstanceStatus =
    { systemStatus : InstanceStatusSummary
    , instanceStatus : InstanceStatusSummary
    , instanceState : InstanceState
    , instanceId : String
    , events : InstanceStatusEventList
    , availabilityZone : String
    }


type alias InstanceStatusDetails =
    { status : StatusType, name : StatusName, impairedSince : DateTime }


type alias InstanceStatusDetailsList =
    List InstanceStatusDetails


type alias InstanceStatusEvent =
    { notBeforeDeadline : DateTime
    , notBefore : DateTime
    , notAfter : DateTime
    , instanceEventId : String
    , description : String
    , code : EventCode
    }


type alias InstanceStatusEventList =
    List InstanceStatusEvent


type alias InstanceStatusList =
    List InstanceStatus


type alias InstanceStatusSummary =
    { status : SummaryStatus, details : InstanceStatusDetailsList }


type InstanceType
    = InstanceTypeT1Micro
    | InstanceTypeT2Nano
    | InstanceTypeT2Micro
    | InstanceTypeT2Small
    | InstanceTypeT2Medium
    | InstanceTypeT2Large
    | InstanceTypeT2Xlarge
    | InstanceTypeT22xlarge
    | InstanceTypeT3Nano
    | InstanceTypeT3Micro
    | InstanceTypeT3Small
    | InstanceTypeT3Medium
    | InstanceTypeT3Large
    | InstanceTypeT3Xlarge
    | InstanceTypeT32xlarge
    | InstanceTypeT3aNano
    | InstanceTypeT3aMicro
    | InstanceTypeT3aSmall
    | InstanceTypeT3aMedium
    | InstanceTypeT3aLarge
    | InstanceTypeT3aXlarge
    | InstanceTypeT3a2xlarge
    | InstanceTypeM1Small
    | InstanceTypeM1Medium
    | InstanceTypeM1Large
    | InstanceTypeM1Xlarge
    | InstanceTypeM3Medium
    | InstanceTypeM3Large
    | InstanceTypeM3Xlarge
    | InstanceTypeM32xlarge
    | InstanceTypeM4Large
    | InstanceTypeM4Xlarge
    | InstanceTypeM42xlarge
    | InstanceTypeM44xlarge
    | InstanceTypeM410xlarge
    | InstanceTypeM416xlarge
    | InstanceTypeM2Xlarge
    | InstanceTypeM22xlarge
    | InstanceTypeM24xlarge
    | InstanceTypeCr18xlarge
    | InstanceTypeR3Large
    | InstanceTypeR3Xlarge
    | InstanceTypeR32xlarge
    | InstanceTypeR34xlarge
    | InstanceTypeR38xlarge
    | InstanceTypeR4Large
    | InstanceTypeR4Xlarge
    | InstanceTypeR42xlarge
    | InstanceTypeR44xlarge
    | InstanceTypeR48xlarge
    | InstanceTypeR416xlarge
    | InstanceTypeR5Large
    | InstanceTypeR5Xlarge
    | InstanceTypeR52xlarge
    | InstanceTypeR54xlarge
    | InstanceTypeR58xlarge
    | InstanceTypeR512xlarge
    | InstanceTypeR516xlarge
    | InstanceTypeR524xlarge
    | InstanceTypeR5Metal
    | InstanceTypeR5aLarge
    | InstanceTypeR5aXlarge
    | InstanceTypeR5a2xlarge
    | InstanceTypeR5a4xlarge
    | InstanceTypeR5a8xlarge
    | InstanceTypeR5a12xlarge
    | InstanceTypeR5a16xlarge
    | InstanceTypeR5a24xlarge
    | InstanceTypeR5dLarge
    | InstanceTypeR5dXlarge
    | InstanceTypeR5d2xlarge
    | InstanceTypeR5d4xlarge
    | InstanceTypeR5d8xlarge
    | InstanceTypeR5d12xlarge
    | InstanceTypeR5d16xlarge
    | InstanceTypeR5d24xlarge
    | InstanceTypeR5dMetal
    | InstanceTypeR5adLarge
    | InstanceTypeR5adXlarge
    | InstanceTypeR5ad2xlarge
    | InstanceTypeR5ad4xlarge
    | InstanceTypeR5ad8xlarge
    | InstanceTypeR5ad12xlarge
    | InstanceTypeR5ad16xlarge
    | InstanceTypeR5ad24xlarge
    | InstanceTypeX116xlarge
    | InstanceTypeX132xlarge
    | InstanceTypeX1eXlarge
    | InstanceTypeX1e2xlarge
    | InstanceTypeX1e4xlarge
    | InstanceTypeX1e8xlarge
    | InstanceTypeX1e16xlarge
    | InstanceTypeX1e32xlarge
    | InstanceTypeI2Xlarge
    | InstanceTypeI22xlarge
    | InstanceTypeI24xlarge
    | InstanceTypeI28xlarge
    | InstanceTypeI3Large
    | InstanceTypeI3Xlarge
    | InstanceTypeI32xlarge
    | InstanceTypeI34xlarge
    | InstanceTypeI38xlarge
    | InstanceTypeI316xlarge
    | InstanceTypeI3Metal
    | InstanceTypeI3enLarge
    | InstanceTypeI3enXlarge
    | InstanceTypeI3en2xlarge
    | InstanceTypeI3en3xlarge
    | InstanceTypeI3en6xlarge
    | InstanceTypeI3en12xlarge
    | InstanceTypeI3en24xlarge
    | InstanceTypeHi14xlarge
    | InstanceTypeHs18xlarge
    | InstanceTypeC1Medium
    | InstanceTypeC1Xlarge
    | InstanceTypeC3Large
    | InstanceTypeC3Xlarge
    | InstanceTypeC32xlarge
    | InstanceTypeC34xlarge
    | InstanceTypeC38xlarge
    | InstanceTypeC4Large
    | InstanceTypeC4Xlarge
    | InstanceTypeC42xlarge
    | InstanceTypeC44xlarge
    | InstanceTypeC48xlarge
    | InstanceTypeC5Large
    | InstanceTypeC5Xlarge
    | InstanceTypeC52xlarge
    | InstanceTypeC54xlarge
    | InstanceTypeC59xlarge
    | InstanceTypeC512xlarge
    | InstanceTypeC518xlarge
    | InstanceTypeC524xlarge
    | InstanceTypeC5Metal
    | InstanceTypeC5dLarge
    | InstanceTypeC5dXlarge
    | InstanceTypeC5d2xlarge
    | InstanceTypeC5d4xlarge
    | InstanceTypeC5d9xlarge
    | InstanceTypeC5d18xlarge
    | InstanceTypeC5nLarge
    | InstanceTypeC5nXlarge
    | InstanceTypeC5n2xlarge
    | InstanceTypeC5n4xlarge
    | InstanceTypeC5n9xlarge
    | InstanceTypeC5n18xlarge
    | InstanceTypeCc14xlarge
    | InstanceTypeCc28xlarge
    | InstanceTypeG22xlarge
    | InstanceTypeG28xlarge
    | InstanceTypeG34xlarge
    | InstanceTypeG38xlarge
    | InstanceTypeG316xlarge
    | InstanceTypeG3sXlarge
    | InstanceTypeCg14xlarge
    | InstanceTypeP2Xlarge
    | InstanceTypeP28xlarge
    | InstanceTypeP216xlarge
    | InstanceTypeP32xlarge
    | InstanceTypeP38xlarge
    | InstanceTypeP316xlarge
    | InstanceTypeP3dn24xlarge
    | InstanceTypeD2Xlarge
    | InstanceTypeD22xlarge
    | InstanceTypeD24xlarge
    | InstanceTypeD28xlarge
    | InstanceTypeF12xlarge
    | InstanceTypeF14xlarge
    | InstanceTypeF116xlarge
    | InstanceTypeM5Large
    | InstanceTypeM5Xlarge
    | InstanceTypeM52xlarge
    | InstanceTypeM54xlarge
    | InstanceTypeM58xlarge
    | InstanceTypeM512xlarge
    | InstanceTypeM516xlarge
    | InstanceTypeM524xlarge
    | InstanceTypeM5Metal
    | InstanceTypeM5aLarge
    | InstanceTypeM5aXlarge
    | InstanceTypeM5a2xlarge
    | InstanceTypeM5a4xlarge
    | InstanceTypeM5a8xlarge
    | InstanceTypeM5a12xlarge
    | InstanceTypeM5a16xlarge
    | InstanceTypeM5a24xlarge
    | InstanceTypeM5dLarge
    | InstanceTypeM5dXlarge
    | InstanceTypeM5d2xlarge
    | InstanceTypeM5d4xlarge
    | InstanceTypeM5d8xlarge
    | InstanceTypeM5d12xlarge
    | InstanceTypeM5d16xlarge
    | InstanceTypeM5d24xlarge
    | InstanceTypeM5dMetal
    | InstanceTypeM5adLarge
    | InstanceTypeM5adXlarge
    | InstanceTypeM5ad2xlarge
    | InstanceTypeM5ad4xlarge
    | InstanceTypeM5ad8xlarge
    | InstanceTypeM5ad12xlarge
    | InstanceTypeM5ad16xlarge
    | InstanceTypeM5ad24xlarge
    | InstanceTypeH12xlarge
    | InstanceTypeH14xlarge
    | InstanceTypeH18xlarge
    | InstanceTypeH116xlarge
    | InstanceTypeZ1dLarge
    | InstanceTypeZ1dXlarge
    | InstanceTypeZ1d2xlarge
    | InstanceTypeZ1d3xlarge
    | InstanceTypeZ1d6xlarge
    | InstanceTypeZ1d12xlarge
    | InstanceTypeZ1dMetal
    | InstanceTypeU6tb1Metal
    | InstanceTypeU9tb1Metal
    | InstanceTypeU12tb1Metal
    | InstanceTypeA1Medium
    | InstanceTypeA1Large
    | InstanceTypeA1Xlarge
    | InstanceTypeA12xlarge
    | InstanceTypeA14xlarge


instanceType : Enum InstanceType
instanceType =
    Enum.define
        [ InstanceTypeT1Micro
        , InstanceTypeT2Nano
        , InstanceTypeT2Micro
        , InstanceTypeT2Small
        , InstanceTypeT2Medium
        , InstanceTypeT2Large
        , InstanceTypeT2Xlarge
        , InstanceTypeT22xlarge
        , InstanceTypeT3Nano
        , InstanceTypeT3Micro
        , InstanceTypeT3Small
        , InstanceTypeT3Medium
        , InstanceTypeT3Large
        , InstanceTypeT3Xlarge
        , InstanceTypeT32xlarge
        , InstanceTypeT3aNano
        , InstanceTypeT3aMicro
        , InstanceTypeT3aSmall
        , InstanceTypeT3aMedium
        , InstanceTypeT3aLarge
        , InstanceTypeT3aXlarge
        , InstanceTypeT3a2xlarge
        , InstanceTypeM1Small
        , InstanceTypeM1Medium
        , InstanceTypeM1Large
        , InstanceTypeM1Xlarge
        , InstanceTypeM3Medium
        , InstanceTypeM3Large
        , InstanceTypeM3Xlarge
        , InstanceTypeM32xlarge
        , InstanceTypeM4Large
        , InstanceTypeM4Xlarge
        , InstanceTypeM42xlarge
        , InstanceTypeM44xlarge
        , InstanceTypeM410xlarge
        , InstanceTypeM416xlarge
        , InstanceTypeM2Xlarge
        , InstanceTypeM22xlarge
        , InstanceTypeM24xlarge
        , InstanceTypeCr18xlarge
        , InstanceTypeR3Large
        , InstanceTypeR3Xlarge
        , InstanceTypeR32xlarge
        , InstanceTypeR34xlarge
        , InstanceTypeR38xlarge
        , InstanceTypeR4Large
        , InstanceTypeR4Xlarge
        , InstanceTypeR42xlarge
        , InstanceTypeR44xlarge
        , InstanceTypeR48xlarge
        , InstanceTypeR416xlarge
        , InstanceTypeR5Large
        , InstanceTypeR5Xlarge
        , InstanceTypeR52xlarge
        , InstanceTypeR54xlarge
        , InstanceTypeR58xlarge
        , InstanceTypeR512xlarge
        , InstanceTypeR516xlarge
        , InstanceTypeR524xlarge
        , InstanceTypeR5Metal
        , InstanceTypeR5aLarge
        , InstanceTypeR5aXlarge
        , InstanceTypeR5a2xlarge
        , InstanceTypeR5a4xlarge
        , InstanceTypeR5a8xlarge
        , InstanceTypeR5a12xlarge
        , InstanceTypeR5a16xlarge
        , InstanceTypeR5a24xlarge
        , InstanceTypeR5dLarge
        , InstanceTypeR5dXlarge
        , InstanceTypeR5d2xlarge
        , InstanceTypeR5d4xlarge
        , InstanceTypeR5d8xlarge
        , InstanceTypeR5d12xlarge
        , InstanceTypeR5d16xlarge
        , InstanceTypeR5d24xlarge
        , InstanceTypeR5dMetal
        , InstanceTypeR5adLarge
        , InstanceTypeR5adXlarge
        , InstanceTypeR5ad2xlarge
        , InstanceTypeR5ad4xlarge
        , InstanceTypeR5ad8xlarge
        , InstanceTypeR5ad12xlarge
        , InstanceTypeR5ad16xlarge
        , InstanceTypeR5ad24xlarge
        , InstanceTypeX116xlarge
        , InstanceTypeX132xlarge
        , InstanceTypeX1eXlarge
        , InstanceTypeX1e2xlarge
        , InstanceTypeX1e4xlarge
        , InstanceTypeX1e8xlarge
        , InstanceTypeX1e16xlarge
        , InstanceTypeX1e32xlarge
        , InstanceTypeI2Xlarge
        , InstanceTypeI22xlarge
        , InstanceTypeI24xlarge
        , InstanceTypeI28xlarge
        , InstanceTypeI3Large
        , InstanceTypeI3Xlarge
        , InstanceTypeI32xlarge
        , InstanceTypeI34xlarge
        , InstanceTypeI38xlarge
        , InstanceTypeI316xlarge
        , InstanceTypeI3Metal
        , InstanceTypeI3enLarge
        , InstanceTypeI3enXlarge
        , InstanceTypeI3en2xlarge
        , InstanceTypeI3en3xlarge
        , InstanceTypeI3en6xlarge
        , InstanceTypeI3en12xlarge
        , InstanceTypeI3en24xlarge
        , InstanceTypeHi14xlarge
        , InstanceTypeHs18xlarge
        , InstanceTypeC1Medium
        , InstanceTypeC1Xlarge
        , InstanceTypeC3Large
        , InstanceTypeC3Xlarge
        , InstanceTypeC32xlarge
        , InstanceTypeC34xlarge
        , InstanceTypeC38xlarge
        , InstanceTypeC4Large
        , InstanceTypeC4Xlarge
        , InstanceTypeC42xlarge
        , InstanceTypeC44xlarge
        , InstanceTypeC48xlarge
        , InstanceTypeC5Large
        , InstanceTypeC5Xlarge
        , InstanceTypeC52xlarge
        , InstanceTypeC54xlarge
        , InstanceTypeC59xlarge
        , InstanceTypeC512xlarge
        , InstanceTypeC518xlarge
        , InstanceTypeC524xlarge
        , InstanceTypeC5Metal
        , InstanceTypeC5dLarge
        , InstanceTypeC5dXlarge
        , InstanceTypeC5d2xlarge
        , InstanceTypeC5d4xlarge
        , InstanceTypeC5d9xlarge
        , InstanceTypeC5d18xlarge
        , InstanceTypeC5nLarge
        , InstanceTypeC5nXlarge
        , InstanceTypeC5n2xlarge
        , InstanceTypeC5n4xlarge
        , InstanceTypeC5n9xlarge
        , InstanceTypeC5n18xlarge
        , InstanceTypeCc14xlarge
        , InstanceTypeCc28xlarge
        , InstanceTypeG22xlarge
        , InstanceTypeG28xlarge
        , InstanceTypeG34xlarge
        , InstanceTypeG38xlarge
        , InstanceTypeG316xlarge
        , InstanceTypeG3sXlarge
        , InstanceTypeCg14xlarge
        , InstanceTypeP2Xlarge
        , InstanceTypeP28xlarge
        , InstanceTypeP216xlarge
        , InstanceTypeP32xlarge
        , InstanceTypeP38xlarge
        , InstanceTypeP316xlarge
        , InstanceTypeP3dn24xlarge
        , InstanceTypeD2Xlarge
        , InstanceTypeD22xlarge
        , InstanceTypeD24xlarge
        , InstanceTypeD28xlarge
        , InstanceTypeF12xlarge
        , InstanceTypeF14xlarge
        , InstanceTypeF116xlarge
        , InstanceTypeM5Large
        , InstanceTypeM5Xlarge
        , InstanceTypeM52xlarge
        , InstanceTypeM54xlarge
        , InstanceTypeM58xlarge
        , InstanceTypeM512xlarge
        , InstanceTypeM516xlarge
        , InstanceTypeM524xlarge
        , InstanceTypeM5Metal
        , InstanceTypeM5aLarge
        , InstanceTypeM5aXlarge
        , InstanceTypeM5a2xlarge
        , InstanceTypeM5a4xlarge
        , InstanceTypeM5a8xlarge
        , InstanceTypeM5a12xlarge
        , InstanceTypeM5a16xlarge
        , InstanceTypeM5a24xlarge
        , InstanceTypeM5dLarge
        , InstanceTypeM5dXlarge
        , InstanceTypeM5d2xlarge
        , InstanceTypeM5d4xlarge
        , InstanceTypeM5d8xlarge
        , InstanceTypeM5d12xlarge
        , InstanceTypeM5d16xlarge
        , InstanceTypeM5d24xlarge
        , InstanceTypeM5dMetal
        , InstanceTypeM5adLarge
        , InstanceTypeM5adXlarge
        , InstanceTypeM5ad2xlarge
        , InstanceTypeM5ad4xlarge
        , InstanceTypeM5ad8xlarge
        , InstanceTypeM5ad12xlarge
        , InstanceTypeM5ad16xlarge
        , InstanceTypeM5ad24xlarge
        , InstanceTypeH12xlarge
        , InstanceTypeH14xlarge
        , InstanceTypeH18xlarge
        , InstanceTypeH116xlarge
        , InstanceTypeZ1dLarge
        , InstanceTypeZ1dXlarge
        , InstanceTypeZ1d2xlarge
        , InstanceTypeZ1d3xlarge
        , InstanceTypeZ1d6xlarge
        , InstanceTypeZ1d12xlarge
        , InstanceTypeZ1dMetal
        , InstanceTypeU6tb1Metal
        , InstanceTypeU9tb1Metal
        , InstanceTypeU12tb1Metal
        , InstanceTypeA1Medium
        , InstanceTypeA1Large
        , InstanceTypeA1Xlarge
        , InstanceTypeA12xlarge
        , InstanceTypeA14xlarge
        ]
        (\val ->
            case val of
                InstanceTypeT1Micro ->
                    "t1.micro"

                InstanceTypeT2Nano ->
                    "t2.nano"

                InstanceTypeT2Micro ->
                    "t2.micro"

                InstanceTypeT2Small ->
                    "t2.small"

                InstanceTypeT2Medium ->
                    "t2.medium"

                InstanceTypeT2Large ->
                    "t2.large"

                InstanceTypeT2Xlarge ->
                    "t2.xlarge"

                InstanceTypeT22xlarge ->
                    "t2.2xlarge"

                InstanceTypeT3Nano ->
                    "t3.nano"

                InstanceTypeT3Micro ->
                    "t3.micro"

                InstanceTypeT3Small ->
                    "t3.small"

                InstanceTypeT3Medium ->
                    "t3.medium"

                InstanceTypeT3Large ->
                    "t3.large"

                InstanceTypeT3Xlarge ->
                    "t3.xlarge"

                InstanceTypeT32xlarge ->
                    "t3.2xlarge"

                InstanceTypeT3aNano ->
                    "t3a.nano"

                InstanceTypeT3aMicro ->
                    "t3a.micro"

                InstanceTypeT3aSmall ->
                    "t3a.small"

                InstanceTypeT3aMedium ->
                    "t3a.medium"

                InstanceTypeT3aLarge ->
                    "t3a.large"

                InstanceTypeT3aXlarge ->
                    "t3a.xlarge"

                InstanceTypeT3a2xlarge ->
                    "t3a.2xlarge"

                InstanceTypeM1Small ->
                    "m1.small"

                InstanceTypeM1Medium ->
                    "m1.medium"

                InstanceTypeM1Large ->
                    "m1.large"

                InstanceTypeM1Xlarge ->
                    "m1.xlarge"

                InstanceTypeM3Medium ->
                    "m3.medium"

                InstanceTypeM3Large ->
                    "m3.large"

                InstanceTypeM3Xlarge ->
                    "m3.xlarge"

                InstanceTypeM32xlarge ->
                    "m3.2xlarge"

                InstanceTypeM4Large ->
                    "m4.large"

                InstanceTypeM4Xlarge ->
                    "m4.xlarge"

                InstanceTypeM42xlarge ->
                    "m4.2xlarge"

                InstanceTypeM44xlarge ->
                    "m4.4xlarge"

                InstanceTypeM410xlarge ->
                    "m4.10xlarge"

                InstanceTypeM416xlarge ->
                    "m4.16xlarge"

                InstanceTypeM2Xlarge ->
                    "m2.xlarge"

                InstanceTypeM22xlarge ->
                    "m2.2xlarge"

                InstanceTypeM24xlarge ->
                    "m2.4xlarge"

                InstanceTypeCr18xlarge ->
                    "cr1.8xlarge"

                InstanceTypeR3Large ->
                    "r3.large"

                InstanceTypeR3Xlarge ->
                    "r3.xlarge"

                InstanceTypeR32xlarge ->
                    "r3.2xlarge"

                InstanceTypeR34xlarge ->
                    "r3.4xlarge"

                InstanceTypeR38xlarge ->
                    "r3.8xlarge"

                InstanceTypeR4Large ->
                    "r4.large"

                InstanceTypeR4Xlarge ->
                    "r4.xlarge"

                InstanceTypeR42xlarge ->
                    "r4.2xlarge"

                InstanceTypeR44xlarge ->
                    "r4.4xlarge"

                InstanceTypeR48xlarge ->
                    "r4.8xlarge"

                InstanceTypeR416xlarge ->
                    "r4.16xlarge"

                InstanceTypeR5Large ->
                    "r5.large"

                InstanceTypeR5Xlarge ->
                    "r5.xlarge"

                InstanceTypeR52xlarge ->
                    "r5.2xlarge"

                InstanceTypeR54xlarge ->
                    "r5.4xlarge"

                InstanceTypeR58xlarge ->
                    "r5.8xlarge"

                InstanceTypeR512xlarge ->
                    "r5.12xlarge"

                InstanceTypeR516xlarge ->
                    "r5.16xlarge"

                InstanceTypeR524xlarge ->
                    "r5.24xlarge"

                InstanceTypeR5Metal ->
                    "r5.metal"

                InstanceTypeR5aLarge ->
                    "r5a.large"

                InstanceTypeR5aXlarge ->
                    "r5a.xlarge"

                InstanceTypeR5a2xlarge ->
                    "r5a.2xlarge"

                InstanceTypeR5a4xlarge ->
                    "r5a.4xlarge"

                InstanceTypeR5a8xlarge ->
                    "r5a.8xlarge"

                InstanceTypeR5a12xlarge ->
                    "r5a.12xlarge"

                InstanceTypeR5a16xlarge ->
                    "r5a.16xlarge"

                InstanceTypeR5a24xlarge ->
                    "r5a.24xlarge"

                InstanceTypeR5dLarge ->
                    "r5d.large"

                InstanceTypeR5dXlarge ->
                    "r5d.xlarge"

                InstanceTypeR5d2xlarge ->
                    "r5d.2xlarge"

                InstanceTypeR5d4xlarge ->
                    "r5d.4xlarge"

                InstanceTypeR5d8xlarge ->
                    "r5d.8xlarge"

                InstanceTypeR5d12xlarge ->
                    "r5d.12xlarge"

                InstanceTypeR5d16xlarge ->
                    "r5d.16xlarge"

                InstanceTypeR5d24xlarge ->
                    "r5d.24xlarge"

                InstanceTypeR5dMetal ->
                    "r5d.metal"

                InstanceTypeR5adLarge ->
                    "r5ad.large"

                InstanceTypeR5adXlarge ->
                    "r5ad.xlarge"

                InstanceTypeR5ad2xlarge ->
                    "r5ad.2xlarge"

                InstanceTypeR5ad4xlarge ->
                    "r5ad.4xlarge"

                InstanceTypeR5ad8xlarge ->
                    "r5ad.8xlarge"

                InstanceTypeR5ad12xlarge ->
                    "r5ad.12xlarge"

                InstanceTypeR5ad16xlarge ->
                    "r5ad.16xlarge"

                InstanceTypeR5ad24xlarge ->
                    "r5ad.24xlarge"

                InstanceTypeX116xlarge ->
                    "x1.16xlarge"

                InstanceTypeX132xlarge ->
                    "x1.32xlarge"

                InstanceTypeX1eXlarge ->
                    "x1e.xlarge"

                InstanceTypeX1e2xlarge ->
                    "x1e.2xlarge"

                InstanceTypeX1e4xlarge ->
                    "x1e.4xlarge"

                InstanceTypeX1e8xlarge ->
                    "x1e.8xlarge"

                InstanceTypeX1e16xlarge ->
                    "x1e.16xlarge"

                InstanceTypeX1e32xlarge ->
                    "x1e.32xlarge"

                InstanceTypeI2Xlarge ->
                    "i2.xlarge"

                InstanceTypeI22xlarge ->
                    "i2.2xlarge"

                InstanceTypeI24xlarge ->
                    "i2.4xlarge"

                InstanceTypeI28xlarge ->
                    "i2.8xlarge"

                InstanceTypeI3Large ->
                    "i3.large"

                InstanceTypeI3Xlarge ->
                    "i3.xlarge"

                InstanceTypeI32xlarge ->
                    "i3.2xlarge"

                InstanceTypeI34xlarge ->
                    "i3.4xlarge"

                InstanceTypeI38xlarge ->
                    "i3.8xlarge"

                InstanceTypeI316xlarge ->
                    "i3.16xlarge"

                InstanceTypeI3Metal ->
                    "i3.metal"

                InstanceTypeI3enLarge ->
                    "i3en.large"

                InstanceTypeI3enXlarge ->
                    "i3en.xlarge"

                InstanceTypeI3en2xlarge ->
                    "i3en.2xlarge"

                InstanceTypeI3en3xlarge ->
                    "i3en.3xlarge"

                InstanceTypeI3en6xlarge ->
                    "i3en.6xlarge"

                InstanceTypeI3en12xlarge ->
                    "i3en.12xlarge"

                InstanceTypeI3en24xlarge ->
                    "i3en.24xlarge"

                InstanceTypeHi14xlarge ->
                    "hi1.4xlarge"

                InstanceTypeHs18xlarge ->
                    "hs1.8xlarge"

                InstanceTypeC1Medium ->
                    "c1.medium"

                InstanceTypeC1Xlarge ->
                    "c1.xlarge"

                InstanceTypeC3Large ->
                    "c3.large"

                InstanceTypeC3Xlarge ->
                    "c3.xlarge"

                InstanceTypeC32xlarge ->
                    "c3.2xlarge"

                InstanceTypeC34xlarge ->
                    "c3.4xlarge"

                InstanceTypeC38xlarge ->
                    "c3.8xlarge"

                InstanceTypeC4Large ->
                    "c4.large"

                InstanceTypeC4Xlarge ->
                    "c4.xlarge"

                InstanceTypeC42xlarge ->
                    "c4.2xlarge"

                InstanceTypeC44xlarge ->
                    "c4.4xlarge"

                InstanceTypeC48xlarge ->
                    "c4.8xlarge"

                InstanceTypeC5Large ->
                    "c5.large"

                InstanceTypeC5Xlarge ->
                    "c5.xlarge"

                InstanceTypeC52xlarge ->
                    "c5.2xlarge"

                InstanceTypeC54xlarge ->
                    "c5.4xlarge"

                InstanceTypeC59xlarge ->
                    "c5.9xlarge"

                InstanceTypeC512xlarge ->
                    "c5.12xlarge"

                InstanceTypeC518xlarge ->
                    "c5.18xlarge"

                InstanceTypeC524xlarge ->
                    "c5.24xlarge"

                InstanceTypeC5Metal ->
                    "c5.metal"

                InstanceTypeC5dLarge ->
                    "c5d.large"

                InstanceTypeC5dXlarge ->
                    "c5d.xlarge"

                InstanceTypeC5d2xlarge ->
                    "c5d.2xlarge"

                InstanceTypeC5d4xlarge ->
                    "c5d.4xlarge"

                InstanceTypeC5d9xlarge ->
                    "c5d.9xlarge"

                InstanceTypeC5d18xlarge ->
                    "c5d.18xlarge"

                InstanceTypeC5nLarge ->
                    "c5n.large"

                InstanceTypeC5nXlarge ->
                    "c5n.xlarge"

                InstanceTypeC5n2xlarge ->
                    "c5n.2xlarge"

                InstanceTypeC5n4xlarge ->
                    "c5n.4xlarge"

                InstanceTypeC5n9xlarge ->
                    "c5n.9xlarge"

                InstanceTypeC5n18xlarge ->
                    "c5n.18xlarge"

                InstanceTypeCc14xlarge ->
                    "cc1.4xlarge"

                InstanceTypeCc28xlarge ->
                    "cc2.8xlarge"

                InstanceTypeG22xlarge ->
                    "g2.2xlarge"

                InstanceTypeG28xlarge ->
                    "g2.8xlarge"

                InstanceTypeG34xlarge ->
                    "g3.4xlarge"

                InstanceTypeG38xlarge ->
                    "g3.8xlarge"

                InstanceTypeG316xlarge ->
                    "g3.16xlarge"

                InstanceTypeG3sXlarge ->
                    "g3s.xlarge"

                InstanceTypeCg14xlarge ->
                    "cg1.4xlarge"

                InstanceTypeP2Xlarge ->
                    "p2.xlarge"

                InstanceTypeP28xlarge ->
                    "p2.8xlarge"

                InstanceTypeP216xlarge ->
                    "p2.16xlarge"

                InstanceTypeP32xlarge ->
                    "p3.2xlarge"

                InstanceTypeP38xlarge ->
                    "p3.8xlarge"

                InstanceTypeP316xlarge ->
                    "p3.16xlarge"

                InstanceTypeP3dn24xlarge ->
                    "p3dn.24xlarge"

                InstanceTypeD2Xlarge ->
                    "d2.xlarge"

                InstanceTypeD22xlarge ->
                    "d2.2xlarge"

                InstanceTypeD24xlarge ->
                    "d2.4xlarge"

                InstanceTypeD28xlarge ->
                    "d2.8xlarge"

                InstanceTypeF12xlarge ->
                    "f1.2xlarge"

                InstanceTypeF14xlarge ->
                    "f1.4xlarge"

                InstanceTypeF116xlarge ->
                    "f1.16xlarge"

                InstanceTypeM5Large ->
                    "m5.large"

                InstanceTypeM5Xlarge ->
                    "m5.xlarge"

                InstanceTypeM52xlarge ->
                    "m5.2xlarge"

                InstanceTypeM54xlarge ->
                    "m5.4xlarge"

                InstanceTypeM58xlarge ->
                    "m5.8xlarge"

                InstanceTypeM512xlarge ->
                    "m5.12xlarge"

                InstanceTypeM516xlarge ->
                    "m5.16xlarge"

                InstanceTypeM524xlarge ->
                    "m5.24xlarge"

                InstanceTypeM5Metal ->
                    "m5.metal"

                InstanceTypeM5aLarge ->
                    "m5a.large"

                InstanceTypeM5aXlarge ->
                    "m5a.xlarge"

                InstanceTypeM5a2xlarge ->
                    "m5a.2xlarge"

                InstanceTypeM5a4xlarge ->
                    "m5a.4xlarge"

                InstanceTypeM5a8xlarge ->
                    "m5a.8xlarge"

                InstanceTypeM5a12xlarge ->
                    "m5a.12xlarge"

                InstanceTypeM5a16xlarge ->
                    "m5a.16xlarge"

                InstanceTypeM5a24xlarge ->
                    "m5a.24xlarge"

                InstanceTypeM5dLarge ->
                    "m5d.large"

                InstanceTypeM5dXlarge ->
                    "m5d.xlarge"

                InstanceTypeM5d2xlarge ->
                    "m5d.2xlarge"

                InstanceTypeM5d4xlarge ->
                    "m5d.4xlarge"

                InstanceTypeM5d8xlarge ->
                    "m5d.8xlarge"

                InstanceTypeM5d12xlarge ->
                    "m5d.12xlarge"

                InstanceTypeM5d16xlarge ->
                    "m5d.16xlarge"

                InstanceTypeM5d24xlarge ->
                    "m5d.24xlarge"

                InstanceTypeM5dMetal ->
                    "m5d.metal"

                InstanceTypeM5adLarge ->
                    "m5ad.large"

                InstanceTypeM5adXlarge ->
                    "m5ad.xlarge"

                InstanceTypeM5ad2xlarge ->
                    "m5ad.2xlarge"

                InstanceTypeM5ad4xlarge ->
                    "m5ad.4xlarge"

                InstanceTypeM5ad8xlarge ->
                    "m5ad.8xlarge"

                InstanceTypeM5ad12xlarge ->
                    "m5ad.12xlarge"

                InstanceTypeM5ad16xlarge ->
                    "m5ad.16xlarge"

                InstanceTypeM5ad24xlarge ->
                    "m5ad.24xlarge"

                InstanceTypeH12xlarge ->
                    "h1.2xlarge"

                InstanceTypeH14xlarge ->
                    "h1.4xlarge"

                InstanceTypeH18xlarge ->
                    "h1.8xlarge"

                InstanceTypeH116xlarge ->
                    "h1.16xlarge"

                InstanceTypeZ1dLarge ->
                    "z1d.large"

                InstanceTypeZ1dXlarge ->
                    "z1d.xlarge"

                InstanceTypeZ1d2xlarge ->
                    "z1d.2xlarge"

                InstanceTypeZ1d3xlarge ->
                    "z1d.3xlarge"

                InstanceTypeZ1d6xlarge ->
                    "z1d.6xlarge"

                InstanceTypeZ1d12xlarge ->
                    "z1d.12xlarge"

                InstanceTypeZ1dMetal ->
                    "z1d.metal"

                InstanceTypeU6tb1Metal ->
                    "u-6tb1.metal"

                InstanceTypeU9tb1Metal ->
                    "u-9tb1.metal"

                InstanceTypeU12tb1Metal ->
                    "u-12tb1.metal"

                InstanceTypeA1Medium ->
                    "a1.medium"

                InstanceTypeA1Large ->
                    "a1.large"

                InstanceTypeA1Xlarge ->
                    "a1.xlarge"

                InstanceTypeA12xlarge ->
                    "a1.2xlarge"

                InstanceTypeA14xlarge ->
                    "a1.4xlarge"
        )


type alias InstanceTypeList =
    List InstanceType


type alias InstanceUsage =
    { usedInstanceCount : Int, accountId : String }


type alias InstanceUsageSet =
    List InstanceUsage


type alias Integer =
    Int


type InterfacePermissionType
    = InterfacePermissionTypeInstanceAttach
    | InterfacePermissionTypeEipAssociate


interfacePermissionType : Enum InterfacePermissionType
interfacePermissionType =
    Enum.define
        [ InterfacePermissionTypeInstanceAttach, InterfacePermissionTypeEipAssociate ]
        (\val ->
            case val of
                InterfacePermissionTypeInstanceAttach ->
                    "INSTANCE-ATTACH"

                InterfacePermissionTypeEipAssociate ->
                    "EIP-ASSOCIATE"
        )


type alias InternetGateway =
    { tags : TagList, ownerId : String, internetGatewayId : String, attachments : InternetGatewayAttachmentList }


type alias InternetGatewayAttachment =
    { vpcId : String, state : AttachmentStatus }


type alias InternetGatewayAttachmentList =
    List InternetGatewayAttachment


type alias InternetGatewayList =
    List InternetGateway


type alias IpPermission =
    { userIdGroupPairs : UserIdGroupPairList
    , toPort : Int
    , prefixListIds : PrefixListIdList
    , ipv6Ranges : Ipv6RangeList
    , ipRanges : IpRangeList
    , ipProtocol : String
    , fromPort : Int
    }


type alias IpPermissionList =
    List IpPermission


type alias IpRange =
    { description : String, cidrIp : String }


type alias IpRangeList =
    List IpRange


type alias IpRanges =
    List String


type alias Ipv6Address =
    String


type alias Ipv6AddressList =
    List String


type alias Ipv6CidrBlock =
    { ipv6CidrBlock : String }


type alias Ipv6CidrBlockSet =
    List Ipv6CidrBlock


type alias Ipv6Range =
    { description : String, cidrIpv6 : String }


type alias Ipv6RangeList =
    List Ipv6Range


type Ipv6SupportValue
    = Ipv6SupportValueEnable
    | Ipv6SupportValueDisable


ipv6SupportValue : Enum Ipv6SupportValue
ipv6SupportValue =
    Enum.define
        [ Ipv6SupportValueEnable, Ipv6SupportValueDisable ]
        (\val ->
            case val of
                Ipv6SupportValueEnable ->
                    "enable"

                Ipv6SupportValueDisable ->
                    "disable"
        )


type alias KeyNameStringList =
    List String


type alias KeyPair =
    { keyName : String, keyMaterial : String, keyFingerprint : String }


type alias KeyPairInfo =
    { keyName : String, keyFingerprint : String }


type alias KeyPairList =
    List KeyPairInfo


type alias LaunchPermission =
    { userId : String, group : PermissionGroup }


type alias LaunchPermissionList =
    List LaunchPermission


type alias LaunchPermissionModifications =
    { remove : LaunchPermissionList, add : LaunchPermissionList }


type alias LaunchSpecification =
    { userData : String
    , subnetId : String
    , securityGroups : GroupIdentifierList
    , ramdiskId : String
    , placement : SpotPlacement
    , networkInterfaces : InstanceNetworkInterfaceSpecificationList
    , monitoring : RunInstancesMonitoringEnabled
    , keyName : String
    , kernelId : String
    , instanceType : InstanceType
    , imageId : String
    , iamInstanceProfile : IamInstanceProfileSpecification
    , ebsOptimized : Bool
    , blockDeviceMappings : BlockDeviceMappingList
    , addressingType : String
    }


type alias LaunchSpecsList =
    List SpotFleetLaunchSpecification


type alias LaunchTemplate =
    { tags : TagList
    , launchTemplateName : LaunchTemplateName
    , launchTemplateId : String
    , latestVersionNumber : Int
    , defaultVersionNumber : Int
    , createdBy : String
    , createTime : DateTime
    }


type alias LaunchTemplateAndOverridesResponse =
    { overrides : FleetLaunchTemplateOverrides, launchTemplateSpecification : FleetLaunchTemplateSpecification }


type alias LaunchTemplateBlockDeviceMapping =
    { virtualName : String, noDevice : String, ebs : LaunchTemplateEbsBlockDevice, deviceName : String }


type alias LaunchTemplateBlockDeviceMappingList =
    List LaunchTemplateBlockDeviceMapping


type alias LaunchTemplateBlockDeviceMappingRequest =
    { virtualName : String, noDevice : String, ebs : LaunchTemplateEbsBlockDeviceRequest, deviceName : String }


type alias LaunchTemplateBlockDeviceMappingRequestList =
    List LaunchTemplateBlockDeviceMappingRequest


type alias LaunchTemplateCapacityReservationSpecificationRequest =
    { capacityReservationTarget : CapacityReservationTarget
    , capacityReservationPreference : CapacityReservationPreference
    }


type alias LaunchTemplateCapacityReservationSpecificationResponse =
    { capacityReservationTarget : CapacityReservationTargetResponse
    , capacityReservationPreference : CapacityReservationPreference
    }


type alias LaunchTemplateConfig =
    { overrides : LaunchTemplateOverridesList, launchTemplateSpecification : FleetLaunchTemplateSpecification }


type alias LaunchTemplateConfigList =
    List LaunchTemplateConfig


type alias LaunchTemplateCpuOptions =
    { threadsPerCore : Int, coreCount : Int }


type alias LaunchTemplateCpuOptionsRequest =
    { threadsPerCore : Int, coreCount : Int }


type alias LaunchTemplateEbsBlockDevice =
    { volumeType : VolumeType
    , volumeSize : Int
    , snapshotId : String
    , kmsKeyId : String
    , iops : Int
    , encrypted : Bool
    , deleteOnTermination : Bool
    }


type alias LaunchTemplateEbsBlockDeviceRequest =
    { volumeType : VolumeType
    , volumeSize : Int
    , snapshotId : String
    , kmsKeyId : String
    , iops : Int
    , encrypted : Bool
    , deleteOnTermination : Bool
    }


type alias LaunchTemplateElasticInferenceAccelerator =
    { type_ : String }


type alias LaunchTemplateElasticInferenceAcceleratorList =
    List LaunchTemplateElasticInferenceAccelerator


type alias LaunchTemplateElasticInferenceAcceleratorResponse =
    { type_ : String }


type alias LaunchTemplateElasticInferenceAcceleratorResponseList =
    List LaunchTemplateElasticInferenceAcceleratorResponse


type LaunchTemplateErrorCode
    = LaunchTemplateErrorCodeLaunchTemplateIdDoesNotExist
    | LaunchTemplateErrorCodeLaunchTemplateIdMalformed
    | LaunchTemplateErrorCodeLaunchTemplateNameDoesNotExist
    | LaunchTemplateErrorCodeLaunchTemplateNameMalformed
    | LaunchTemplateErrorCodeLaunchTemplateVersionDoesNotExist
    | LaunchTemplateErrorCodeUnexpectedError


launchTemplateErrorCode : Enum LaunchTemplateErrorCode
launchTemplateErrorCode =
    Enum.define
        [ LaunchTemplateErrorCodeLaunchTemplateIdDoesNotExist
        , LaunchTemplateErrorCodeLaunchTemplateIdMalformed
        , LaunchTemplateErrorCodeLaunchTemplateNameDoesNotExist
        , LaunchTemplateErrorCodeLaunchTemplateNameMalformed
        , LaunchTemplateErrorCodeLaunchTemplateVersionDoesNotExist
        , LaunchTemplateErrorCodeUnexpectedError
        ]
        (\val ->
            case val of
                LaunchTemplateErrorCodeLaunchTemplateIdDoesNotExist ->
                    "launchTemplateIdDoesNotExist"

                LaunchTemplateErrorCodeLaunchTemplateIdMalformed ->
                    "launchTemplateIdMalformed"

                LaunchTemplateErrorCodeLaunchTemplateNameDoesNotExist ->
                    "launchTemplateNameDoesNotExist"

                LaunchTemplateErrorCodeLaunchTemplateNameMalformed ->
                    "launchTemplateNameMalformed"

                LaunchTemplateErrorCodeLaunchTemplateVersionDoesNotExist ->
                    "launchTemplateVersionDoesNotExist"

                LaunchTemplateErrorCodeUnexpectedError ->
                    "unexpectedError"
        )


type alias LaunchTemplateHibernationOptions =
    { configured : Bool }


type alias LaunchTemplateHibernationOptionsRequest =
    { configured : Bool }


type alias LaunchTemplateIamInstanceProfileSpecification =
    { name : String, arn : String }


type alias LaunchTemplateIamInstanceProfileSpecificationRequest =
    { name : String, arn : String }


type alias LaunchTemplateInstanceMarketOptions =
    { spotOptions : LaunchTemplateSpotMarketOptions, marketType : MarketType }


type alias LaunchTemplateInstanceMarketOptionsRequest =
    { spotOptions : LaunchTemplateSpotMarketOptionsRequest, marketType : MarketType }


type alias LaunchTemplateInstanceNetworkInterfaceSpecification =
    { subnetId : String
    , secondaryPrivateIpAddressCount : Int
    , privateIpAddresses : PrivateIpAddressSpecificationList
    , privateIpAddress : String
    , networkInterfaceId : String
    , ipv6Addresses : InstanceIpv6AddressList
    , ipv6AddressCount : Int
    , interfaceType : String
    , groups : GroupIdStringList
    , deviceIndex : Int
    , description : String
    , deleteOnTermination : Bool
    , associatePublicIpAddress : Bool
    }


type alias LaunchTemplateInstanceNetworkInterfaceSpecificationList =
    List LaunchTemplateInstanceNetworkInterfaceSpecification


type alias LaunchTemplateInstanceNetworkInterfaceSpecificationRequest =
    { subnetId : String
    , secondaryPrivateIpAddressCount : Int
    , privateIpAddresses : PrivateIpAddressSpecificationList
    , privateIpAddress : String
    , networkInterfaceId : String
    , ipv6Addresses : InstanceIpv6AddressListRequest
    , ipv6AddressCount : Int
    , interfaceType : String
    , groups : SecurityGroupIdStringList
    , deviceIndex : Int
    , description : String
    , deleteOnTermination : Bool
    , associatePublicIpAddress : Bool
    }


type alias LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList =
    List LaunchTemplateInstanceNetworkInterfaceSpecificationRequest


type alias LaunchTemplateLicenseConfiguration =
    { licenseConfigurationArn : String }


type alias LaunchTemplateLicenseConfigurationRequest =
    { licenseConfigurationArn : String }


type alias LaunchTemplateLicenseList =
    List LaunchTemplateLicenseConfiguration


type alias LaunchTemplateLicenseSpecificationListRequest =
    List LaunchTemplateLicenseConfigurationRequest


type LaunchTemplateName
    = LaunchTemplateName String


launchTemplateName : Refined String LaunchTemplateName StringError
launchTemplateName =
    let
        guardFn val =
            Refined.minLength 3 val
                |> Result.andThen (Refined.maxLength 128)
                |> Result.andThen (Refined.regexMatch "[a-zA-Z0-9\\(\\)\\.\\-/_]+")
                |> Result.map LaunchTemplateName

        unboxFn (LaunchTemplateName val) =
            val
    in
    Refined.define guardFn Json.Decode.string Json.Encode.string Refined.stringErrorToString unboxFn


type alias LaunchTemplateNameStringList =
    List LaunchTemplateName


type alias LaunchTemplateOverrides =
    { weightedCapacity : Float
    , subnetId : String
    , spotPrice : String
    , priority : Float
    , instanceType : InstanceType
    , availabilityZone : String
    }


type alias LaunchTemplateOverridesList =
    List LaunchTemplateOverrides


type alias LaunchTemplatePlacement =
    { tenancy : Tenancy
    , spreadDomain : String
    , hostId : String
    , groupName : String
    , availabilityZone : String
    , affinity : String
    }


type alias LaunchTemplatePlacementRequest =
    { tenancy : Tenancy
    , spreadDomain : String
    , hostId : String
    , groupName : String
    , availabilityZone : String
    , affinity : String
    }


type alias LaunchTemplateSet =
    List LaunchTemplate


type alias LaunchTemplateSpecification =
    { version : String, launchTemplateName : String, launchTemplateId : String }


type alias LaunchTemplateSpotMarketOptions =
    { validUntil : DateTime
    , spotInstanceType : SpotInstanceType
    , maxPrice : String
    , instanceInterruptionBehavior : InstanceInterruptionBehavior
    , blockDurationMinutes : Int
    }


type alias LaunchTemplateSpotMarketOptionsRequest =
    { validUntil : DateTime
    , spotInstanceType : SpotInstanceType
    , maxPrice : String
    , instanceInterruptionBehavior : InstanceInterruptionBehavior
    , blockDurationMinutes : Int
    }


type alias LaunchTemplateTagSpecification =
    { tags : TagList, resourceType : ResourceType }


type alias LaunchTemplateTagSpecificationList =
    List LaunchTemplateTagSpecification


type alias LaunchTemplateTagSpecificationRequest =
    { tags : TagList, resourceType : ResourceType }


type alias LaunchTemplateTagSpecificationRequestList =
    List LaunchTemplateTagSpecificationRequest


type alias LaunchTemplateVersion =
    { versionNumber : Int
    , versionDescription : VersionDescription
    , launchTemplateName : LaunchTemplateName
    , launchTemplateId : String
    , launchTemplateData : ResponseLaunchTemplateData
    , defaultVersion : Bool
    , createdBy : String
    , createTime : DateTime
    }


type alias LaunchTemplateVersionSet =
    List LaunchTemplateVersion


type alias LaunchTemplatesMonitoring =
    { enabled : Bool }


type alias LaunchTemplatesMonitoringRequest =
    { enabled : Bool }


type alias LicenseConfiguration =
    { licenseConfigurationArn : String }


type alias LicenseConfigurationRequest =
    { licenseConfigurationArn : String }


type alias LicenseList =
    List LicenseConfiguration


type alias LicenseSpecificationListRequest =
    List LicenseConfigurationRequest


type ListingState
    = ListingStateAvailable
    | ListingStateSold
    | ListingStateCancelled
    | ListingStatePending


listingState : Enum ListingState
listingState =
    Enum.define
        [ ListingStateAvailable, ListingStateSold, ListingStateCancelled, ListingStatePending ]
        (\val ->
            case val of
                ListingStateAvailable ->
                    "available"

                ListingStateSold ->
                    "sold"

                ListingStateCancelled ->
                    "cancelled"

                ListingStatePending ->
                    "pending"
        )


type ListingStatus
    = ListingStatusActive
    | ListingStatusPending
    | ListingStatusCancelled
    | ListingStatusClosed


listingStatus : Enum ListingStatus
listingStatus =
    Enum.define
        [ ListingStatusActive, ListingStatusPending, ListingStatusCancelled, ListingStatusClosed ]
        (\val ->
            case val of
                ListingStatusActive ->
                    "active"

                ListingStatusPending ->
                    "pending"

                ListingStatusCancelled ->
                    "cancelled"

                ListingStatusClosed ->
                    "closed"
        )


type alias LoadBalancersConfig =
    { targetGroupsConfig : TargetGroupsConfig, classicLoadBalancersConfig : ClassicLoadBalancersConfig }


type alias LoadPermission =
    { userId : String, group : PermissionGroup }


type alias LoadPermissionList =
    List LoadPermission


type alias LoadPermissionListRequest =
    List LoadPermissionRequest


type alias LoadPermissionModifications =
    { remove : LoadPermissionListRequest, add : LoadPermissionListRequest }


type alias LoadPermissionRequest =
    { userId : String, group : PermissionGroup }


type LogDestinationType
    = LogDestinationTypeCloudWatchLogs
    | LogDestinationTypeS3


logDestinationType : Enum LogDestinationType
logDestinationType =
    Enum.define
        [ LogDestinationTypeCloudWatchLogs, LogDestinationTypeS3 ]
        (\val ->
            case val of
                LogDestinationTypeCloudWatchLogs ->
                    "cloud-watch-logs"

                LogDestinationTypeS3 ->
                    "s3"
        )


type alias Long =
    Int


type MarketType
    = MarketTypeSpot


marketType : Enum MarketType
marketType =
    Enum.define
        [ MarketTypeSpot ]
        (\val ->
            case val of
                MarketTypeSpot ->
                    "spot"
        )


type alias MillisecondDateTime =
    String


type alias ModifyCapacityReservationRequest =
    { instanceCount : Int
    , endDateType : EndDateType
    , endDate : DateTime
    , dryRun : Bool
    , capacityReservationId : String
    }


type alias ModifyCapacityReservationResult =
    { return : Bool }


type alias ModifyClientVpnEndpointRequest =
    { splitTunnel : Bool
    , serverCertificateArn : String
    , dryRun : Bool
    , dnsServers : DnsServersOptionsModifyStructure
    , description : String
    , connectionLogOptions : ConnectionLogOptions
    , clientVpnEndpointId : String
    }


type alias ModifyClientVpnEndpointResult =
    { return : Bool }


type alias ModifyEbsDefaultKmsKeyIdRequest =
    { kmsKeyId : String, dryRun : Bool }


type alias ModifyEbsDefaultKmsKeyIdResult =
    { kmsKeyId : String }


type alias ModifyFleetRequest =
    { targetCapacitySpecification : TargetCapacitySpecificationRequest
    , fleetId : String
    , excessCapacityTerminationPolicy : FleetExcessCapacityTerminationPolicy
    , dryRun : Bool
    }


type alias ModifyFleetResult =
    { return : Bool }


type alias ModifyFpgaImageAttributeRequest =
    { userIds : UserIdStringList
    , userGroups : UserGroupStringList
    , productCodes : ProductCodeStringList
    , operationType : OperationType
    , name : String
    , loadPermission : LoadPermissionModifications
    , fpgaImageId : String
    , dryRun : Bool
    , description : String
    , attribute : FpgaImageAttributeName
    }


type alias ModifyFpgaImageAttributeResult =
    { fpgaImageAttribute : FpgaImageAttribute }


type alias ModifyHostsRequest =
    { hostRecovery : HostRecovery, hostIds : RequestHostIdList, autoPlacement : AutoPlacement }


type alias ModifyHostsResult =
    { unsuccessful : UnsuccessfulItemList, successful : ResponseHostIdList }


type alias ModifyIdFormatRequest =
    { useLongIds : Bool, resource : String }


type alias ModifyIdentityIdFormatRequest =
    { useLongIds : Bool, resource : String, principalArn : String }


type alias ModifyImageAttributeRequest =
    { value : String
    , userIds : UserIdStringList
    , userGroups : UserGroupStringList
    , productCodes : ProductCodeStringList
    , operationType : OperationType
    , launchPermission : LaunchPermissionModifications
    , imageId : String
    , dryRun : Bool
    , description : AttributeValue
    , attribute : String
    }


type alias ModifyInstanceAttributeRequest =
    { value : String
    , userData : BlobAttributeValue
    , sriovNetSupport : AttributeValue
    , sourceDestCheck : AttributeBooleanValue
    , ramdisk : AttributeValue
    , kernel : AttributeValue
    , instanceType : AttributeValue
    , instanceInitiatedShutdownBehavior : AttributeValue
    , instanceId : String
    , groups : GroupIdStringList
    , enaSupport : AttributeBooleanValue
    , ebsOptimized : AttributeBooleanValue
    , dryRun : Bool
    , disableApiTermination : AttributeBooleanValue
    , blockDeviceMappings : InstanceBlockDeviceMappingSpecificationList
    , attribute : InstanceAttributeName
    }


type alias ModifyInstanceCapacityReservationAttributesRequest =
    { instanceId : String, dryRun : Bool, capacityReservationSpecification : CapacityReservationSpecification }


type alias ModifyInstanceCapacityReservationAttributesResult =
    { return : Bool }


type alias ModifyInstanceCreditSpecificationRequest =
    { instanceCreditSpecifications : InstanceCreditSpecificationListRequest, dryRun : Bool, clientToken : String }


type alias ModifyInstanceCreditSpecificationResult =
    { unsuccessfulInstanceCreditSpecifications : UnsuccessfulInstanceCreditSpecificationSet
    , successfulInstanceCreditSpecifications : SuccessfulInstanceCreditSpecificationSet
    }


type alias ModifyInstanceEventStartTimeRequest =
    { notBefore : DateTime, instanceId : String, instanceEventId : String, dryRun : Bool }


type alias ModifyInstanceEventStartTimeResult =
    { event : InstanceStatusEvent }


type alias ModifyInstancePlacementRequest =
    { tenancy : HostTenancy
    , partitionNumber : Int
    , instanceId : String
    , hostId : String
    , groupName : String
    , affinity : Affinity
    }


type alias ModifyInstancePlacementResult =
    { return : Bool }


type alias ModifyLaunchTemplateRequest =
    { launchTemplateName : LaunchTemplateName
    , launchTemplateId : String
    , dryRun : Bool
    , defaultVersion : String
    , clientToken : String
    }


type alias ModifyLaunchTemplateResult =
    { launchTemplate : LaunchTemplate }


type alias ModifyNetworkInterfaceAttributeRequest =
    { sourceDestCheck : AttributeBooleanValue
    , networkInterfaceId : String
    , groups : SecurityGroupIdStringList
    , dryRun : Bool
    , description : AttributeValue
    , attachment : NetworkInterfaceAttachmentChanges
    }


type alias ModifyReservedInstancesRequest =
    { targetConfigurations : ReservedInstancesConfigurationList
    , reservedInstancesIds : ReservedInstancesIdStringList
    , clientToken : String
    }


type alias ModifyReservedInstancesResult =
    { reservedInstancesModificationId : String }


type alias ModifySnapshotAttributeRequest =
    { userIds : UserIdStringList
    , snapshotId : String
    , operationType : OperationType
    , groupNames : GroupNameStringList
    , dryRun : Bool
    , createVolumePermission : CreateVolumePermissionModifications
    , attribute : SnapshotAttributeName
    }


type alias ModifySpotFleetRequestRequest =
    { targetCapacity : Int
    , spotFleetRequestId : String
    , onDemandTargetCapacity : Int
    , excessCapacityTerminationPolicy : ExcessCapacityTerminationPolicy
    }


type alias ModifySpotFleetRequestResponse =
    { return : Bool }


type alias ModifySubnetAttributeRequest =
    { subnetId : String
    , mapPublicIpOnLaunch : AttributeBooleanValue
    , assignIpv6AddressOnCreation : AttributeBooleanValue
    }


type alias ModifyTrafficMirrorFilterNetworkServicesRequest =
    { trafficMirrorFilterId : String
    , removeNetworkServices : TrafficMirrorNetworkServiceList
    , dryRun : Bool
    , addNetworkServices : TrafficMirrorNetworkServiceList
    }


type alias ModifyTrafficMirrorFilterNetworkServicesResult =
    { trafficMirrorFilter : TrafficMirrorFilter }


type alias ModifyTrafficMirrorFilterRuleRequest =
    { trafficMirrorFilterRuleId : String
    , trafficDirection : TrafficDirection
    , sourcePortRange : TrafficMirrorPortRangeRequest
    , sourceCidrBlock : String
    , ruleNumber : Int
    , ruleAction : TrafficMirrorRuleAction
    , removeFields : TrafficMirrorFilterRuleFieldList
    , protocol : Int
    , dryRun : Bool
    , destinationPortRange : TrafficMirrorPortRangeRequest
    , destinationCidrBlock : String
    , description : String
    }


type alias ModifyTrafficMirrorFilterRuleResult =
    { trafficMirrorFilterRule : TrafficMirrorFilterRule }


type alias ModifyTrafficMirrorSessionRequest =
    { virtualNetworkId : Int
    , trafficMirrorTargetId : String
    , trafficMirrorSessionId : String
    , trafficMirrorFilterId : String
    , sessionNumber : Int
    , removeFields : TrafficMirrorSessionFieldList
    , packetLength : Int
    , dryRun : Bool
    , description : String
    }


type alias ModifyTrafficMirrorSessionResult =
    { trafficMirrorSession : TrafficMirrorSession }


type alias ModifyTransitGatewayVpcAttachmentRequest =
    { transitGatewayAttachmentId : String
    , removeSubnetIds : ValueStringList
    , options : ModifyTransitGatewayVpcAttachmentRequestOptions
    , dryRun : Bool
    , addSubnetIds : ValueStringList
    }


type alias ModifyTransitGatewayVpcAttachmentRequestOptions =
    { ipv6Support : Ipv6SupportValue, dnsSupport : DnsSupportValue }


type alias ModifyTransitGatewayVpcAttachmentResult =
    { transitGatewayVpcAttachment : TransitGatewayVpcAttachment }


type alias ModifyVolumeAttributeRequest =
    { volumeId : String, dryRun : Bool, autoEnableIo : AttributeBooleanValue }


type alias ModifyVolumeRequest =
    { volumeType : VolumeType, volumeId : String, size : Int, iops : Int, dryRun : Bool }


type alias ModifyVolumeResult =
    { volumeModification : VolumeModification }


type alias ModifyVpcAttributeRequest =
    { vpcId : String, enableDnsSupport : AttributeBooleanValue, enableDnsHostnames : AttributeBooleanValue }


type alias ModifyVpcEndpointConnectionNotificationRequest =
    { dryRun : Bool
    , connectionNotificationId : String
    , connectionNotificationArn : String
    , connectionEvents : ValueStringList
    }


type alias ModifyVpcEndpointConnectionNotificationResult =
    { returnValue : Bool }


type alias ModifyVpcEndpointRequest =
    { vpcEndpointId : String
    , resetPolicy : Bool
    , removeSubnetIds : ValueStringList
    , removeSecurityGroupIds : ValueStringList
    , removeRouteTableIds : ValueStringList
    , privateDnsEnabled : Bool
    , policyDocument : String
    , dryRun : Bool
    , addSubnetIds : ValueStringList
    , addSecurityGroupIds : ValueStringList
    , addRouteTableIds : ValueStringList
    }


type alias ModifyVpcEndpointResult =
    { return : Bool }


type alias ModifyVpcEndpointServiceConfigurationRequest =
    { serviceId : String
    , removeNetworkLoadBalancerArns : ValueStringList
    , dryRun : Bool
    , addNetworkLoadBalancerArns : ValueStringList
    , acceptanceRequired : Bool
    }


type alias ModifyVpcEndpointServiceConfigurationResult =
    { return : Bool }


type alias ModifyVpcEndpointServicePermissionsRequest =
    { serviceId : String
    , removeAllowedPrincipals : ValueStringList
    , dryRun : Bool
    , addAllowedPrincipals : ValueStringList
    }


type alias ModifyVpcEndpointServicePermissionsResult =
    { returnValue : Bool }


type alias ModifyVpcPeeringConnectionOptionsRequest =
    { vpcPeeringConnectionId : String
    , requesterPeeringConnectionOptions : PeeringConnectionOptionsRequest
    , dryRun : Bool
    , accepterPeeringConnectionOptions : PeeringConnectionOptionsRequest
    }


type alias ModifyVpcPeeringConnectionOptionsResult =
    { requesterPeeringConnectionOptions : PeeringConnectionOptions
    , accepterPeeringConnectionOptions : PeeringConnectionOptions
    }


type alias ModifyVpcTenancyRequest =
    { vpcId : String, instanceTenancy : VpcTenancy, dryRun : Bool }


type alias ModifyVpcTenancyResult =
    { returnValue : Bool }


type alias ModifyVpnConnectionRequest =
    { vpnGatewayId : String, vpnConnectionId : String, transitGatewayId : String, dryRun : Bool }


type alias ModifyVpnConnectionResult =
    { vpnConnection : VpnConnection }


type alias MonitorInstancesRequest =
    { instanceIds : InstanceIdStringList, dryRun : Bool }


type alias MonitorInstancesResult =
    { instanceMonitorings : InstanceMonitoringList }


type alias Monitoring =
    { state : MonitoringState }


type MonitoringState
    = MonitoringStateDisabled
    | MonitoringStateDisabling
    | MonitoringStateEnabled
    | MonitoringStatePending


monitoringState : Enum MonitoringState
monitoringState =
    Enum.define
        [ MonitoringStateDisabled, MonitoringStateDisabling, MonitoringStateEnabled, MonitoringStatePending ]
        (\val ->
            case val of
                MonitoringStateDisabled ->
                    "disabled"

                MonitoringStateDisabling ->
                    "disabling"

                MonitoringStateEnabled ->
                    "enabled"

                MonitoringStatePending ->
                    "pending"
        )


type alias MoveAddressToVpcRequest =
    { publicIp : String, dryRun : Bool }


type alias MoveAddressToVpcResult =
    { status : Status, allocationId : String }


type MoveStatus
    = MoveStatusMovingToVpc
    | MoveStatusRestoringToClassic


moveStatus : Enum MoveStatus
moveStatus =
    Enum.define
        [ MoveStatusMovingToVpc, MoveStatusRestoringToClassic ]
        (\val ->
            case val of
                MoveStatusMovingToVpc ->
                    "movingToVpc"

                MoveStatusRestoringToClassic ->
                    "restoringToClassic"
        )


type alias MovingAddressStatus =
    { publicIp : String, moveStatus : MoveStatus }


type alias MovingAddressStatusSet =
    List MovingAddressStatus


type alias NatGateway =
    { vpcId : String
    , tags : TagList
    , subnetId : String
    , state : NatGatewayState
    , provisionedBandwidth : ProvisionedBandwidth
    , natGatewayId : String
    , natGatewayAddresses : NatGatewayAddressList
    , failureMessage : String
    , failureCode : String
    , deleteTime : DateTime
    , createTime : DateTime
    }


type alias NatGatewayAddress =
    { publicIp : String, privateIp : String, networkInterfaceId : String, allocationId : String }


type alias NatGatewayAddressList =
    List NatGatewayAddress


type alias NatGatewayList =
    List NatGateway


type NatGatewayState
    = NatGatewayStatePending
    | NatGatewayStateFailed
    | NatGatewayStateAvailable
    | NatGatewayStateDeleting
    | NatGatewayStateDeleted


natGatewayState : Enum NatGatewayState
natGatewayState =
    Enum.define
        [ NatGatewayStatePending
        , NatGatewayStateFailed
        , NatGatewayStateAvailable
        , NatGatewayStateDeleting
        , NatGatewayStateDeleted
        ]
        (\val ->
            case val of
                NatGatewayStatePending ->
                    "pending"

                NatGatewayStateFailed ->
                    "failed"

                NatGatewayStateAvailable ->
                    "available"

                NatGatewayStateDeleting ->
                    "deleting"

                NatGatewayStateDeleted ->
                    "deleted"
        )


type alias NetworkAcl =
    { vpcId : String
    , tags : TagList
    , ownerId : String
    , networkAclId : String
    , isDefault : Bool
    , entries : NetworkAclEntryList
    , associations : NetworkAclAssociationList
    }


type alias NetworkAclAssociation =
    { subnetId : String, networkAclId : String, networkAclAssociationId : String }


type alias NetworkAclAssociationList =
    List NetworkAclAssociation


type alias NetworkAclEntry =
    { ruleNumber : Int
    , ruleAction : RuleAction
    , protocol : String
    , portRange : PortRange
    , ipv6CidrBlock : String
    , icmpTypeCode : IcmpTypeCode
    , egress : Bool
    , cidrBlock : String
    }


type alias NetworkAclEntryList =
    List NetworkAclEntry


type alias NetworkAclList =
    List NetworkAcl


type alias NetworkInterface =
    { vpcId : String
    , tagSet : TagList
    , subnetId : String
    , status : NetworkInterfaceStatus
    , sourceDestCheck : Bool
    , requesterManaged : Bool
    , requesterId : String
    , privateIpAddresses : NetworkInterfacePrivateIpAddressList
    , privateIpAddress : String
    , privateDnsName : String
    , ownerId : String
    , networkInterfaceId : String
    , macAddress : String
    , ipv6Addresses : NetworkInterfaceIpv6AddressesList
    , interfaceType : NetworkInterfaceType
    , groups : GroupIdentifierList
    , description : String
    , availabilityZone : String
    , attachment : NetworkInterfaceAttachment
    , association : NetworkInterfaceAssociation
    }


type alias NetworkInterfaceAssociation =
    { publicIp : String, publicDnsName : String, ipOwnerId : String, associationId : String, allocationId : String }


type alias NetworkInterfaceAttachment =
    { status : AttachmentStatus
    , instanceOwnerId : String
    , instanceId : String
    , deviceIndex : Int
    , deleteOnTermination : Bool
    , attachmentId : String
    , attachTime : DateTime
    }


type alias NetworkInterfaceAttachmentChanges =
    { deleteOnTermination : Bool, attachmentId : String }


type NetworkInterfaceAttribute
    = NetworkInterfaceAttributeDescription
    | NetworkInterfaceAttributeGroupSet
    | NetworkInterfaceAttributeSourceDestCheck
    | NetworkInterfaceAttributeAttachment


networkInterfaceAttribute : Enum NetworkInterfaceAttribute
networkInterfaceAttribute =
    Enum.define
        [ NetworkInterfaceAttributeDescription
        , NetworkInterfaceAttributeGroupSet
        , NetworkInterfaceAttributeSourceDestCheck
        , NetworkInterfaceAttributeAttachment
        ]
        (\val ->
            case val of
                NetworkInterfaceAttributeDescription ->
                    "description"

                NetworkInterfaceAttributeGroupSet ->
                    "groupSet"

                NetworkInterfaceAttributeSourceDestCheck ->
                    "sourceDestCheck"

                NetworkInterfaceAttributeAttachment ->
                    "attachment"
        )


type NetworkInterfaceCreationType
    = NetworkInterfaceCreationTypeEfa


networkInterfaceCreationType : Enum NetworkInterfaceCreationType
networkInterfaceCreationType =
    Enum.define
        [ NetworkInterfaceCreationTypeEfa ]
        (\val ->
            case val of
                NetworkInterfaceCreationTypeEfa ->
                    "efa"
        )


type alias NetworkInterfaceIdList =
    List String


type alias NetworkInterfaceIpv6Address =
    { ipv6Address : String }


type alias NetworkInterfaceIpv6AddressesList =
    List NetworkInterfaceIpv6Address


type alias NetworkInterfaceList =
    List NetworkInterface


type alias NetworkInterfacePermission =
    { permissionState : NetworkInterfacePermissionState
    , permission : InterfacePermissionType
    , networkInterfacePermissionId : String
    , networkInterfaceId : String
    , awsService : String
    , awsAccountId : String
    }


type alias NetworkInterfacePermissionIdList =
    List String


type alias NetworkInterfacePermissionList =
    List NetworkInterfacePermission


type alias NetworkInterfacePermissionState =
    { statusMessage : String, state : NetworkInterfacePermissionStateCode }


type NetworkInterfacePermissionStateCode
    = NetworkInterfacePermissionStateCodePending
    | NetworkInterfacePermissionStateCodeGranted
    | NetworkInterfacePermissionStateCodeRevoking
    | NetworkInterfacePermissionStateCodeRevoked


networkInterfacePermissionStateCode : Enum NetworkInterfacePermissionStateCode
networkInterfacePermissionStateCode =
    Enum.define
        [ NetworkInterfacePermissionStateCodePending
        , NetworkInterfacePermissionStateCodeGranted
        , NetworkInterfacePermissionStateCodeRevoking
        , NetworkInterfacePermissionStateCodeRevoked
        ]
        (\val ->
            case val of
                NetworkInterfacePermissionStateCodePending ->
                    "pending"

                NetworkInterfacePermissionStateCodeGranted ->
                    "granted"

                NetworkInterfacePermissionStateCodeRevoking ->
                    "revoking"

                NetworkInterfacePermissionStateCodeRevoked ->
                    "revoked"
        )


type alias NetworkInterfacePrivateIpAddress =
    { privateIpAddress : String, privateDnsName : String, primary : Bool, association : NetworkInterfaceAssociation }


type alias NetworkInterfacePrivateIpAddressList =
    List NetworkInterfacePrivateIpAddress


type NetworkInterfaceStatus
    = NetworkInterfaceStatusAvailable
    | NetworkInterfaceStatusAssociated
    | NetworkInterfaceStatusAttaching
    | NetworkInterfaceStatusInUse
    | NetworkInterfaceStatusDetaching


networkInterfaceStatus : Enum NetworkInterfaceStatus
networkInterfaceStatus =
    Enum.define
        [ NetworkInterfaceStatusAvailable
        , NetworkInterfaceStatusAssociated
        , NetworkInterfaceStatusAttaching
        , NetworkInterfaceStatusInUse
        , NetworkInterfaceStatusDetaching
        ]
        (\val ->
            case val of
                NetworkInterfaceStatusAvailable ->
                    "available"

                NetworkInterfaceStatusAssociated ->
                    "associated"

                NetworkInterfaceStatusAttaching ->
                    "attaching"

                NetworkInterfaceStatusInUse ->
                    "in-use"

                NetworkInterfaceStatusDetaching ->
                    "detaching"
        )


type NetworkInterfaceType
    = NetworkInterfaceTypeInterface
    | NetworkInterfaceTypeNatGateway
    | NetworkInterfaceTypeEfa


networkInterfaceType : Enum NetworkInterfaceType
networkInterfaceType =
    Enum.define
        [ NetworkInterfaceTypeInterface, NetworkInterfaceTypeNatGateway, NetworkInterfaceTypeEfa ]
        (\val ->
            case val of
                NetworkInterfaceTypeInterface ->
                    "interface"

                NetworkInterfaceTypeNatGateway ->
                    "natGateway"

                NetworkInterfaceTypeEfa ->
                    "efa"
        )


type alias NewDhcpConfiguration =
    { values : ValueStringList, key : String }


type alias NewDhcpConfigurationList =
    List NewDhcpConfiguration


type alias NextToken =
    String


type alias OccurrenceDayRequestSet =
    List Int


type alias OccurrenceDaySet =
    List Int


type OfferingClassType
    = OfferingClassTypeStandard
    | OfferingClassTypeConvertible


offeringClassType : Enum OfferingClassType
offeringClassType =
    Enum.define
        [ OfferingClassTypeStandard, OfferingClassTypeConvertible ]
        (\val ->
            case val of
                OfferingClassTypeStandard ->
                    "standard"

                OfferingClassTypeConvertible ->
                    "convertible"
        )


type OfferingTypeValues
    = OfferingTypeValuesHeavyUtilization
    | OfferingTypeValuesMediumUtilization
    | OfferingTypeValuesLightUtilization
    | OfferingTypeValuesNoUpfront
    | OfferingTypeValuesPartialUpfront
    | OfferingTypeValuesAllUpfront


offeringTypeValues : Enum OfferingTypeValues
offeringTypeValues =
    Enum.define
        [ OfferingTypeValuesHeavyUtilization
        , OfferingTypeValuesMediumUtilization
        , OfferingTypeValuesLightUtilization
        , OfferingTypeValuesNoUpfront
        , OfferingTypeValuesPartialUpfront
        , OfferingTypeValuesAllUpfront
        ]
        (\val ->
            case val of
                OfferingTypeValuesHeavyUtilization ->
                    "Heavy Utilization"

                OfferingTypeValuesMediumUtilization ->
                    "Medium Utilization"

                OfferingTypeValuesLightUtilization ->
                    "Light Utilization"

                OfferingTypeValuesNoUpfront ->
                    "No Upfront"

                OfferingTypeValuesPartialUpfront ->
                    "Partial Upfront"

                OfferingTypeValuesAllUpfront ->
                    "All Upfront"
        )


type OnDemandAllocationStrategy
    = OnDemandAllocationStrategyLowestPrice
    | OnDemandAllocationStrategyPrioritized


onDemandAllocationStrategy : Enum OnDemandAllocationStrategy
onDemandAllocationStrategy =
    Enum.define
        [ OnDemandAllocationStrategyLowestPrice, OnDemandAllocationStrategyPrioritized ]
        (\val ->
            case val of
                OnDemandAllocationStrategyLowestPrice ->
                    "lowestPrice"

                OnDemandAllocationStrategyPrioritized ->
                    "prioritized"
        )


type alias OnDemandOptions =
    { singleInstanceType : Bool
    , singleAvailabilityZone : Bool
    , minTargetCapacity : Int
    , maxTotalPrice : String
    , allocationStrategy : FleetOnDemandAllocationStrategy
    }


type alias OnDemandOptionsRequest =
    { singleInstanceType : Bool
    , singleAvailabilityZone : Bool
    , minTargetCapacity : Int
    , maxTotalPrice : String
    , allocationStrategy : FleetOnDemandAllocationStrategy
    }


type OperationType
    = OperationTypeAdd
    | OperationTypeRemove


operationType : Enum OperationType
operationType =
    Enum.define
        [ OperationTypeAdd, OperationTypeRemove ]
        (\val ->
            case val of
                OperationTypeAdd ->
                    "add"

                OperationTypeRemove ->
                    "remove"
        )


type alias OwnerStringList =
    List String


type PaymentOption
    = PaymentOptionAllUpfront
    | PaymentOptionPartialUpfront
    | PaymentOptionNoUpfront


paymentOption : Enum PaymentOption
paymentOption =
    Enum.define
        [ PaymentOptionAllUpfront, PaymentOptionPartialUpfront, PaymentOptionNoUpfront ]
        (\val ->
            case val of
                PaymentOptionAllUpfront ->
                    "AllUpfront"

                PaymentOptionPartialUpfront ->
                    "PartialUpfront"

                PaymentOptionNoUpfront ->
                    "NoUpfront"
        )


type alias PciId =
    { vendorId : String, subsystemVendorId : String, subsystemId : String, deviceId : String }


type alias PeeringConnectionOptions =
    { allowEgressFromLocalVpcToRemoteClassicLink : Bool
    , allowEgressFromLocalClassicLinkToRemoteVpc : Bool
    , allowDnsResolutionFromRemoteVpc : Bool
    }


type alias PeeringConnectionOptionsRequest =
    { allowEgressFromLocalVpcToRemoteClassicLink : Bool
    , allowEgressFromLocalClassicLinkToRemoteVpc : Bool
    , allowDnsResolutionFromRemoteVpc : Bool
    }


type PermissionGroup
    = PermissionGroupAll


permissionGroup : Enum PermissionGroup
permissionGroup =
    Enum.define
        [ PermissionGroupAll ]
        (\val ->
            case val of
                PermissionGroupAll ->
                    "all"
        )


type alias Placement =
    { tenancy : Tenancy
    , spreadDomain : String
    , partitionNumber : Int
    , hostId : String
    , groupName : String
    , availabilityZone : String
    , affinity : String
    }


type alias PlacementGroup =
    { strategy : PlacementStrategy, state : PlacementGroupState, partitionCount : Int, groupName : String }


type alias PlacementGroupList =
    List PlacementGroup


type PlacementGroupState
    = PlacementGroupStatePending
    | PlacementGroupStateAvailable
    | PlacementGroupStateDeleting
    | PlacementGroupStateDeleted


placementGroupState : Enum PlacementGroupState
placementGroupState =
    Enum.define
        [ PlacementGroupStatePending
        , PlacementGroupStateAvailable
        , PlacementGroupStateDeleting
        , PlacementGroupStateDeleted
        ]
        (\val ->
            case val of
                PlacementGroupStatePending ->
                    "pending"

                PlacementGroupStateAvailable ->
                    "available"

                PlacementGroupStateDeleting ->
                    "deleting"

                PlacementGroupStateDeleted ->
                    "deleted"
        )


type alias PlacementGroupStringList =
    List String


type alias PlacementResponse =
    { groupName : String }


type PlacementStrategy
    = PlacementStrategyCluster
    | PlacementStrategySpread
    | PlacementStrategyPartition


placementStrategy : Enum PlacementStrategy
placementStrategy =
    Enum.define
        [ PlacementStrategyCluster, PlacementStrategySpread, PlacementStrategyPartition ]
        (\val ->
            case val of
                PlacementStrategyCluster ->
                    "cluster"

                PlacementStrategySpread ->
                    "spread"

                PlacementStrategyPartition ->
                    "partition"
        )


type PlatformValues
    = PlatformValuesWindows


platformValues : Enum PlatformValues
platformValues =
    Enum.define
        [ PlatformValuesWindows ]
        (\val ->
            case val of
                PlatformValuesWindows ->
                    "Windows"
        )


type PoolMaxResults
    = PoolMaxResults Int


poolMaxResults : Refined Int PoolMaxResults IntError
poolMaxResults =
    let
        guardFn val =
            Refined.gt 1 val |> Result.andThen (Refined.lt 10) |> Result.map PoolMaxResults

        unboxFn (PoolMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias PortRange =
    { to : Int, from : Int }


type alias PrefixList =
    { prefixListName : String, prefixListId : String, cidrs : ValueStringList }


type alias PrefixListId =
    { prefixListId : String, description : String }


type alias PrefixListIdList =
    List PrefixListId


type alias PrefixListIdSet =
    List String


type alias PrefixListSet =
    List PrefixList


type alias PriceSchedule =
    { term : Int, price : Float, currencyCode : CurrencyCodeValues, active : Bool }


type alias PriceScheduleList =
    List PriceSchedule


type alias PriceScheduleSpecification =
    { term : Int, price : Float, currencyCode : CurrencyCodeValues }


type alias PriceScheduleSpecificationList =
    List PriceScheduleSpecification


type alias PricingDetail =
    { price : Float, count : Int }


type alias PricingDetailsList =
    List PricingDetail


type alias PrincipalIdFormat =
    { statuses : IdFormatList, arn : String }


type alias PrincipalIdFormatList =
    List PrincipalIdFormat


type PrincipalType
    = PrincipalTypeAll
    | PrincipalTypeService
    | PrincipalTypeOrganizationUnit
    | PrincipalTypeAccount
    | PrincipalTypeUser
    | PrincipalTypeRole


principalType : Enum PrincipalType
principalType =
    Enum.define
        [ PrincipalTypeAll
        , PrincipalTypeService
        , PrincipalTypeOrganizationUnit
        , PrincipalTypeAccount
        , PrincipalTypeUser
        , PrincipalTypeRole
        ]
        (\val ->
            case val of
                PrincipalTypeAll ->
                    "All"

                PrincipalTypeService ->
                    "Service"

                PrincipalTypeOrganizationUnit ->
                    "OrganizationUnit"

                PrincipalTypeAccount ->
                    "Account"

                PrincipalTypeUser ->
                    "User"

                PrincipalTypeRole ->
                    "Role"
        )


type alias PrivateIpAddressConfigSet =
    List ScheduledInstancesPrivateIpAddressConfig


type alias PrivateIpAddressSpecification =
    { privateIpAddress : String, primary : Bool }


type alias PrivateIpAddressSpecificationList =
    List PrivateIpAddressSpecification


type alias PrivateIpAddressStringList =
    List String


type alias ProductCode =
    { productCodeType : ProductCodeValues, productCodeId : String }


type alias ProductCodeList =
    List ProductCode


type alias ProductCodeStringList =
    List String


type ProductCodeValues
    = ProductCodeValuesDevpay
    | ProductCodeValuesMarketplace


productCodeValues : Enum ProductCodeValues
productCodeValues =
    Enum.define
        [ ProductCodeValuesDevpay, ProductCodeValuesMarketplace ]
        (\val ->
            case val of
                ProductCodeValuesDevpay ->
                    "devpay"

                ProductCodeValuesMarketplace ->
                    "marketplace"
        )


type alias ProductDescriptionList =
    List String


type alias PropagatingVgw =
    { gatewayId : String }


type alias PropagatingVgwList =
    List PropagatingVgw


type alias ProvisionByoipCidrRequest =
    { dryRun : Bool, description : String, cidrAuthorizationContext : CidrAuthorizationContext, cidr : String }


type alias ProvisionByoipCidrResult =
    { byoipCidr : ByoipCidr }


type alias ProvisionedBandwidth =
    { status : String, requested : String, requestTime : DateTime, provisioned : String, provisionTime : DateTime }


type alias PublicIpStringList =
    List String


type alias PublicIpv4Pool =
    { totalAvailableAddressCount : Int
    , totalAddressCount : Int
    , poolId : String
    , poolAddressRanges : PublicIpv4PoolRangeSet
    , description : String
    }


type alias PublicIpv4PoolRange =
    { lastAddress : String, firstAddress : String, availableAddressCount : Int, addressCount : Int }


type alias PublicIpv4PoolRangeSet =
    List PublicIpv4PoolRange


type alias PublicIpv4PoolSet =
    List PublicIpv4Pool


type alias Purchase =
    { upfrontPrice : String
    , paymentOption : PaymentOption
    , instanceFamily : String
    , hourlyPrice : String
    , hostReservationId : String
    , hostIdSet : ResponseHostIdSet
    , duration : Int
    , currencyCode : CurrencyCodeValues
    }


type alias PurchaseHostReservationRequest =
    { offeringId : String
    , limitPrice : String
    , hostIdSet : RequestHostIdSet
    , currencyCode : CurrencyCodeValues
    , clientToken : String
    }


type alias PurchaseHostReservationResult =
    { totalUpfrontPrice : String
    , totalHourlyPrice : String
    , purchase : PurchaseSet
    , currencyCode : CurrencyCodeValues
    , clientToken : String
    }


type alias PurchaseRequest =
    { purchaseToken : String, instanceCount : Int }


type alias PurchaseRequestSet =
    List PurchaseRequest


type alias PurchaseReservedInstancesOfferingRequest =
    { reservedInstancesOfferingId : String
    , limitPrice : ReservedInstanceLimitPrice
    , instanceCount : Int
    , dryRun : Bool
    }


type alias PurchaseReservedInstancesOfferingResult =
    { reservedInstancesId : String }


type alias PurchaseScheduledInstancesRequest =
    { purchaseRequests : PurchaseRequestSet, dryRun : Bool, clientToken : String }


type alias PurchaseScheduledInstancesResult =
    { scheduledInstanceSet : PurchasedScheduledInstanceSet }


type alias PurchaseSet =
    List Purchase


type alias PurchasedScheduledInstanceSet =
    List ScheduledInstance


type RiproductDescription
    = RiproductDescriptionLinuxUnix
    | RiproductDescriptionLinuxUnixAmazonVpc
    | RiproductDescriptionWindows
    | RiproductDescriptionWindowsAmazonVpc


riproductDescription : Enum RiproductDescription
riproductDescription =
    Enum.define
        [ RiproductDescriptionLinuxUnix
        , RiproductDescriptionLinuxUnixAmazonVpc
        , RiproductDescriptionWindows
        , RiproductDescriptionWindowsAmazonVpc
        ]
        (\val ->
            case val of
                RiproductDescriptionLinuxUnix ->
                    "Linux/UNIX"

                RiproductDescriptionLinuxUnixAmazonVpc ->
                    "Linux/UNIX (Amazon VPC)"

                RiproductDescriptionWindows ->
                    "Windows"

                RiproductDescriptionWindowsAmazonVpc ->
                    "Windows (Amazon VPC)"
        )


type alias ReasonCodesList =
    List ReportInstanceReasonCodes


type alias RebootInstancesRequest =
    { instanceIds : InstanceIdStringList, dryRun : Bool }


type alias RecurringCharge =
    { frequency : RecurringChargeFrequency, amount : Float }


type RecurringChargeFrequency
    = RecurringChargeFrequencyHourly


recurringChargeFrequency : Enum RecurringChargeFrequency
recurringChargeFrequency =
    Enum.define
        [ RecurringChargeFrequencyHourly ]
        (\val ->
            case val of
                RecurringChargeFrequencyHourly ->
                    "Hourly"
        )


type alias RecurringChargesList =
    List RecurringCharge


type alias Region =
    { regionName : String, optInStatus : String, endpoint : String }


type alias RegionList =
    List Region


type alias RegionNameStringList =
    List String


type alias RegisterImageRequest =
    { virtualizationType : String
    , sriovNetSupport : String
    , rootDeviceName : String
    , ramdiskId : String
    , name : String
    , kernelId : String
    , imageLocation : String
    , enaSupport : Bool
    , dryRun : Bool
    , description : String
    , blockDeviceMappings : BlockDeviceMappingRequestList
    , billingProducts : BillingProductList
    , architecture : ArchitectureValues
    }


type alias RegisterImageResult =
    { imageId : String }


type alias RejectTransitGatewayVpcAttachmentRequest =
    { transitGatewayAttachmentId : String, dryRun : Bool }


type alias RejectTransitGatewayVpcAttachmentResult =
    { transitGatewayVpcAttachment : TransitGatewayVpcAttachment }


type alias RejectVpcEndpointConnectionsRequest =
    { vpcEndpointIds : ValueStringList, serviceId : String, dryRun : Bool }


type alias RejectVpcEndpointConnectionsResult =
    { unsuccessful : UnsuccessfulItemSet }


type alias RejectVpcPeeringConnectionRequest =
    { vpcPeeringConnectionId : String, dryRun : Bool }


type alias RejectVpcPeeringConnectionResult =
    { return : Bool }


type alias ReleaseAddressRequest =
    { publicIp : String, dryRun : Bool, allocationId : String }


type alias ReleaseHostsRequest =
    { hostIds : RequestHostIdList }


type alias ReleaseHostsResult =
    { unsuccessful : UnsuccessfulItemList, successful : ResponseHostIdList }


type alias ReplaceIamInstanceProfileAssociationRequest =
    { iamInstanceProfile : IamInstanceProfileSpecification, associationId : String }


type alias ReplaceIamInstanceProfileAssociationResult =
    { iamInstanceProfileAssociation : IamInstanceProfileAssociation }


type alias ReplaceNetworkAclAssociationRequest =
    { networkAclId : String, dryRun : Bool, associationId : String }


type alias ReplaceNetworkAclAssociationResult =
    { newAssociationId : String }


type alias ReplaceNetworkAclEntryRequest =
    { ruleNumber : Int
    , ruleAction : RuleAction
    , protocol : String
    , portRange : PortRange
    , networkAclId : String
    , ipv6CidrBlock : String
    , icmpTypeCode : IcmpTypeCode
    , egress : Bool
    , dryRun : Bool
    , cidrBlock : String
    }


type alias ReplaceRouteRequest =
    { vpcPeeringConnectionId : String
    , transitGatewayId : String
    , routeTableId : String
    , networkInterfaceId : String
    , natGatewayId : String
    , instanceId : String
    , gatewayId : String
    , egressOnlyInternetGatewayId : String
    , dryRun : Bool
    , destinationIpv6CidrBlock : String
    , destinationCidrBlock : String
    }


type alias ReplaceRouteTableAssociationRequest =
    { routeTableId : String, dryRun : Bool, associationId : String }


type alias ReplaceRouteTableAssociationResult =
    { newAssociationId : String }


type alias ReplaceTransitGatewayRouteRequest =
    { transitGatewayRouteTableId : String
    , transitGatewayAttachmentId : String
    , dryRun : Bool
    , destinationCidrBlock : String
    , blackhole : Bool
    }


type alias ReplaceTransitGatewayRouteResult =
    { route : TransitGatewayRoute }


type ReportInstanceReasonCodes
    = ReportInstanceReasonCodesInstanceStuckInState
    | ReportInstanceReasonCodesUnresponsive
    | ReportInstanceReasonCodesNotAcceptingCredentials
    | ReportInstanceReasonCodesPasswordNotAvailable
    | ReportInstanceReasonCodesPerformanceNetwork
    | ReportInstanceReasonCodesPerformanceInstanceStore
    | ReportInstanceReasonCodesPerformanceEbsVolume
    | ReportInstanceReasonCodesPerformanceOther
    | ReportInstanceReasonCodesOther


reportInstanceReasonCodes : Enum ReportInstanceReasonCodes
reportInstanceReasonCodes =
    Enum.define
        [ ReportInstanceReasonCodesInstanceStuckInState
        , ReportInstanceReasonCodesUnresponsive
        , ReportInstanceReasonCodesNotAcceptingCredentials
        , ReportInstanceReasonCodesPasswordNotAvailable
        , ReportInstanceReasonCodesPerformanceNetwork
        , ReportInstanceReasonCodesPerformanceInstanceStore
        , ReportInstanceReasonCodesPerformanceEbsVolume
        , ReportInstanceReasonCodesPerformanceOther
        , ReportInstanceReasonCodesOther
        ]
        (\val ->
            case val of
                ReportInstanceReasonCodesInstanceStuckInState ->
                    "instance-stuck-in-state"

                ReportInstanceReasonCodesUnresponsive ->
                    "unresponsive"

                ReportInstanceReasonCodesNotAcceptingCredentials ->
                    "not-accepting-credentials"

                ReportInstanceReasonCodesPasswordNotAvailable ->
                    "password-not-available"

                ReportInstanceReasonCodesPerformanceNetwork ->
                    "performance-network"

                ReportInstanceReasonCodesPerformanceInstanceStore ->
                    "performance-instance-store"

                ReportInstanceReasonCodesPerformanceEbsVolume ->
                    "performance-ebs-volume"

                ReportInstanceReasonCodesPerformanceOther ->
                    "performance-other"

                ReportInstanceReasonCodesOther ->
                    "other"
        )


type alias ReportInstanceStatusRequest =
    { status : ReportStatusType
    , startTime : DateTime
    , reasonCodes : ReasonCodesList
    , instances : InstanceIdStringList
    , endTime : DateTime
    , dryRun : Bool
    , description : String
    }


type ReportStatusType
    = ReportStatusTypeOk
    | ReportStatusTypeImpaired


reportStatusType : Enum ReportStatusType
reportStatusType =
    Enum.define
        [ ReportStatusTypeOk, ReportStatusTypeImpaired ]
        (\val ->
            case val of
                ReportStatusTypeOk ->
                    "ok"

                ReportStatusTypeImpaired ->
                    "impaired"
        )


type alias RequestHostIdList =
    List String


type alias RequestHostIdSet =
    List String


type alias RequestLaunchTemplateData =
    { userData : String
    , tagSpecifications : LaunchTemplateTagSpecificationRequestList
    , securityGroups : SecurityGroupStringList
    , securityGroupIds : SecurityGroupIdStringList
    , ramDiskId : String
    , placement : LaunchTemplatePlacementRequest
    , networkInterfaces : LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList
    , monitoring : LaunchTemplatesMonitoringRequest
    , licenseSpecifications : LaunchTemplateLicenseSpecificationListRequest
    , keyName : String
    , kernelId : String
    , instanceType : InstanceType
    , instanceMarketOptions : LaunchTemplateInstanceMarketOptionsRequest
    , instanceInitiatedShutdownBehavior : ShutdownBehavior
    , imageId : String
    , iamInstanceProfile : LaunchTemplateIamInstanceProfileSpecificationRequest
    , hibernationOptions : LaunchTemplateHibernationOptionsRequest
    , elasticInferenceAccelerators : LaunchTemplateElasticInferenceAcceleratorList
    , elasticGpuSpecifications : ElasticGpuSpecificationList
    , ebsOptimized : Bool
    , disableApiTermination : Bool
    , creditSpecification : CreditSpecificationRequest
    , cpuOptions : LaunchTemplateCpuOptionsRequest
    , capacityReservationSpecification : LaunchTemplateCapacityReservationSpecificationRequest
    , blockDeviceMappings : LaunchTemplateBlockDeviceMappingRequestList
    }


type alias RequestSpotFleetRequest =
    { spotFleetRequestConfig : SpotFleetRequestConfigData, dryRun : Bool }


type alias RequestSpotFleetResponse =
    { spotFleetRequestId : String }


type alias RequestSpotInstancesRequest =
    { validUntil : DateTime
    , validFrom : DateTime
    , type_ : SpotInstanceType
    , spotPrice : String
    , launchSpecification : RequestSpotLaunchSpecification
    , launchGroup : String
    , instanceInterruptionBehavior : InstanceInterruptionBehavior
    , instanceCount : Int
    , dryRun : Bool
    , clientToken : String
    , blockDurationMinutes : Int
    , availabilityZoneGroup : String
    }


type alias RequestSpotInstancesResult =
    { spotInstanceRequests : SpotInstanceRequestList }


type alias RequestSpotLaunchSpecification =
    { userData : String
    , subnetId : String
    , securityGroups : ValueStringList
    , securityGroupIds : ValueStringList
    , ramdiskId : String
    , placement : SpotPlacement
    , networkInterfaces : InstanceNetworkInterfaceSpecificationList
    , monitoring : RunInstancesMonitoringEnabled
    , keyName : String
    , kernelId : String
    , instanceType : InstanceType
    , imageId : String
    , iamInstanceProfile : IamInstanceProfileSpecification
    , ebsOptimized : Bool
    , blockDeviceMappings : BlockDeviceMappingList
    , addressingType : String
    }


type alias Reservation =
    { reservationId : String
    , requesterId : String
    , ownerId : String
    , instances : InstanceList
    , groups : GroupIdentifierList
    }


type alias ReservationList =
    List Reservation


type ReservationState
    = ReservationStatePaymentPending
    | ReservationStatePaymentFailed
    | ReservationStateActive
    | ReservationStateRetired


reservationState : Enum ReservationState
reservationState =
    Enum.define
        [ ReservationStatePaymentPending
        , ReservationStatePaymentFailed
        , ReservationStateActive
        , ReservationStateRetired
        ]
        (\val ->
            case val of
                ReservationStatePaymentPending ->
                    "payment-pending"

                ReservationStatePaymentFailed ->
                    "payment-failed"

                ReservationStateActive ->
                    "active"

                ReservationStateRetired ->
                    "retired"
        )


type alias ReservationValue =
    { remainingUpfrontValue : String, remainingTotalValue : String, hourlyPrice : String }


type alias ReservedInstanceIdSet =
    List String


type alias ReservedInstanceLimitPrice =
    { currencyCode : CurrencyCodeValues, amount : Float }


type alias ReservedInstanceReservationValue =
    { reservedInstanceId : String, reservationValue : ReservationValue }


type alias ReservedInstanceReservationValueSet =
    List ReservedInstanceReservationValue


type ReservedInstanceState
    = ReservedInstanceStatePaymentPending
    | ReservedInstanceStateActive
    | ReservedInstanceStatePaymentFailed
    | ReservedInstanceStateRetired


reservedInstanceState : Enum ReservedInstanceState
reservedInstanceState =
    Enum.define
        [ ReservedInstanceStatePaymentPending
        , ReservedInstanceStateActive
        , ReservedInstanceStatePaymentFailed
        , ReservedInstanceStateRetired
        ]
        (\val ->
            case val of
                ReservedInstanceStatePaymentPending ->
                    "payment-pending"

                ReservedInstanceStateActive ->
                    "active"

                ReservedInstanceStatePaymentFailed ->
                    "payment-failed"

                ReservedInstanceStateRetired ->
                    "retired"
        )


type alias ReservedInstances =
    { usagePrice : Float
    , tags : TagList
    , state : ReservedInstanceState
    , start : DateTime
    , scope : Scope
    , reservedInstancesId : String
    , recurringCharges : RecurringChargesList
    , productDescription : RiproductDescription
    , offeringType : OfferingTypeValues
    , offeringClass : OfferingClassType
    , instanceType : InstanceType
    , instanceTenancy : Tenancy
    , instanceCount : Int
    , fixedPrice : Float
    , end : DateTime
    , duration : Int
    , currencyCode : CurrencyCodeValues
    , availabilityZone : String
    }


type alias ReservedInstancesConfiguration =
    { scope : Scope, platform : String, instanceType : InstanceType, instanceCount : Int, availabilityZone : String }


type alias ReservedInstancesConfigurationList =
    List ReservedInstancesConfiguration


type alias ReservedInstancesId =
    { reservedInstancesId : String }


type alias ReservedInstancesIdStringList =
    List String


type alias ReservedInstancesList =
    List ReservedInstances


type alias ReservedInstancesListing =
    { updateDate : DateTime
    , tags : TagList
    , statusMessage : String
    , status : ListingStatus
    , reservedInstancesListingId : String
    , reservedInstancesId : String
    , priceSchedules : PriceScheduleList
    , instanceCounts : InstanceCountList
    , createDate : DateTime
    , clientToken : String
    }


type alias ReservedInstancesListingList =
    List ReservedInstancesListing


type alias ReservedInstancesModification =
    { updateDate : DateTime
    , statusMessage : String
    , status : String
    , reservedInstancesModificationId : String
    , reservedInstancesIds : ReservedIntancesIds
    , modificationResults : ReservedInstancesModificationResultList
    , effectiveDate : DateTime
    , createDate : DateTime
    , clientToken : String
    }


type alias ReservedInstancesModificationIdStringList =
    List String


type alias ReservedInstancesModificationList =
    List ReservedInstancesModification


type alias ReservedInstancesModificationResult =
    { targetConfiguration : ReservedInstancesConfiguration, reservedInstancesId : String }


type alias ReservedInstancesModificationResultList =
    List ReservedInstancesModificationResult


type alias ReservedInstancesOffering =
    { usagePrice : Float
    , scope : Scope
    , reservedInstancesOfferingId : String
    , recurringCharges : RecurringChargesList
    , productDescription : RiproductDescription
    , pricingDetails : PricingDetailsList
    , offeringType : OfferingTypeValues
    , offeringClass : OfferingClassType
    , marketplace : Bool
    , instanceType : InstanceType
    , instanceTenancy : Tenancy
    , fixedPrice : Float
    , duration : Int
    , currencyCode : CurrencyCodeValues
    , availabilityZone : String
    }


type alias ReservedInstancesOfferingIdStringList =
    List String


type alias ReservedInstancesOfferingList =
    List ReservedInstancesOffering


type alias ReservedIntancesIds =
    List ReservedInstancesId


type alias ResetEbsDefaultKmsKeyIdRequest =
    { dryRun : Bool }


type alias ResetEbsDefaultKmsKeyIdResult =
    { kmsKeyId : String }


type ResetFpgaImageAttributeName
    = ResetFpgaImageAttributeNameLoadPermission


resetFpgaImageAttributeName : Enum ResetFpgaImageAttributeName
resetFpgaImageAttributeName =
    Enum.define
        [ ResetFpgaImageAttributeNameLoadPermission ]
        (\val ->
            case val of
                ResetFpgaImageAttributeNameLoadPermission ->
                    "loadPermission"
        )


type alias ResetFpgaImageAttributeRequest =
    { fpgaImageId : String, dryRun : Bool, attribute : ResetFpgaImageAttributeName }


type alias ResetFpgaImageAttributeResult =
    { return : Bool }


type ResetImageAttributeName
    = ResetImageAttributeNameLaunchPermission


resetImageAttributeName : Enum ResetImageAttributeName
resetImageAttributeName =
    Enum.define
        [ ResetImageAttributeNameLaunchPermission ]
        (\val ->
            case val of
                ResetImageAttributeNameLaunchPermission ->
                    "launchPermission"
        )


type alias ResetImageAttributeRequest =
    { imageId : String, dryRun : Bool, attribute : ResetImageAttributeName }


type alias ResetInstanceAttributeRequest =
    { instanceId : String, dryRun : Bool, attribute : InstanceAttributeName }


type alias ResetNetworkInterfaceAttributeRequest =
    { sourceDestCheck : String, networkInterfaceId : String, dryRun : Bool }


type alias ResetSnapshotAttributeRequest =
    { snapshotId : String, dryRun : Bool, attribute : SnapshotAttributeName }


type alias ResourceIdList =
    List String


type alias ResourceList =
    List String


type ResourceType
    = ResourceTypeClientVpnEndpoint
    | ResourceTypeCustomerGateway
    | ResourceTypeDedicatedHost
    | ResourceTypeDhcpOptions
    | ResourceTypeElasticIp
    | ResourceTypeFleet
    | ResourceTypeFpgaImage
    | ResourceTypeHostReservation
    | ResourceTypeImage
    | ResourceTypeInstance
    | ResourceTypeInternetGateway
    | ResourceTypeLaunchTemplate
    | ResourceTypeNatgateway
    | ResourceTypeNetworkAcl
    | ResourceTypeNetworkInterface
    | ResourceTypeReservedInstances
    | ResourceTypeRouteTable
    | ResourceTypeSecurityGroup
    | ResourceTypeSnapshot
    | ResourceTypeSpotInstancesRequest
    | ResourceTypeSubnet
    | ResourceTypeTrafficMirrorFilter
    | ResourceTypeTrafficMirrorSession
    | ResourceTypeTrafficMirrorTarget
    | ResourceTypeTransitGateway
    | ResourceTypeTransitGatewayAttachment
    | ResourceTypeTransitGatewayRouteTable
    | ResourceTypeVolume
    | ResourceTypeVpc
    | ResourceTypeVpcPeeringConnection
    | ResourceTypeVpnConnection
    | ResourceTypeVpnGateway


resourceType : Enum ResourceType
resourceType =
    Enum.define
        [ ResourceTypeClientVpnEndpoint
        , ResourceTypeCustomerGateway
        , ResourceTypeDedicatedHost
        , ResourceTypeDhcpOptions
        , ResourceTypeElasticIp
        , ResourceTypeFleet
        , ResourceTypeFpgaImage
        , ResourceTypeHostReservation
        , ResourceTypeImage
        , ResourceTypeInstance
        , ResourceTypeInternetGateway
        , ResourceTypeLaunchTemplate
        , ResourceTypeNatgateway
        , ResourceTypeNetworkAcl
        , ResourceTypeNetworkInterface
        , ResourceTypeReservedInstances
        , ResourceTypeRouteTable
        , ResourceTypeSecurityGroup
        , ResourceTypeSnapshot
        , ResourceTypeSpotInstancesRequest
        , ResourceTypeSubnet
        , ResourceTypeTrafficMirrorFilter
        , ResourceTypeTrafficMirrorSession
        , ResourceTypeTrafficMirrorTarget
        , ResourceTypeTransitGateway
        , ResourceTypeTransitGatewayAttachment
        , ResourceTypeTransitGatewayRouteTable
        , ResourceTypeVolume
        , ResourceTypeVpc
        , ResourceTypeVpcPeeringConnection
        , ResourceTypeVpnConnection
        , ResourceTypeVpnGateway
        ]
        (\val ->
            case val of
                ResourceTypeClientVpnEndpoint ->
                    "client-vpn-endpoint"

                ResourceTypeCustomerGateway ->
                    "customer-gateway"

                ResourceTypeDedicatedHost ->
                    "dedicated-host"

                ResourceTypeDhcpOptions ->
                    "dhcp-options"

                ResourceTypeElasticIp ->
                    "elastic-ip"

                ResourceTypeFleet ->
                    "fleet"

                ResourceTypeFpgaImage ->
                    "fpga-image"

                ResourceTypeHostReservation ->
                    "host-reservation"

                ResourceTypeImage ->
                    "image"

                ResourceTypeInstance ->
                    "instance"

                ResourceTypeInternetGateway ->
                    "internet-gateway"

                ResourceTypeLaunchTemplate ->
                    "launch-template"

                ResourceTypeNatgateway ->
                    "natgateway"

                ResourceTypeNetworkAcl ->
                    "network-acl"

                ResourceTypeNetworkInterface ->
                    "network-interface"

                ResourceTypeReservedInstances ->
                    "reserved-instances"

                ResourceTypeRouteTable ->
                    "route-table"

                ResourceTypeSecurityGroup ->
                    "security-group"

                ResourceTypeSnapshot ->
                    "snapshot"

                ResourceTypeSpotInstancesRequest ->
                    "spot-instances-request"

                ResourceTypeSubnet ->
                    "subnet"

                ResourceTypeTrafficMirrorFilter ->
                    "traffic-mirror-filter"

                ResourceTypeTrafficMirrorSession ->
                    "traffic-mirror-session"

                ResourceTypeTrafficMirrorTarget ->
                    "traffic-mirror-target"

                ResourceTypeTransitGateway ->
                    "transit-gateway"

                ResourceTypeTransitGatewayAttachment ->
                    "transit-gateway-attachment"

                ResourceTypeTransitGatewayRouteTable ->
                    "transit-gateway-route-table"

                ResourceTypeVolume ->
                    "volume"

                ResourceTypeVpc ->
                    "vpc"

                ResourceTypeVpcPeeringConnection ->
                    "vpc-peering-connection"

                ResourceTypeVpnConnection ->
                    "vpn-connection"

                ResourceTypeVpnGateway ->
                    "vpn-gateway"
        )


type alias ResponseError =
    { message : String, code : LaunchTemplateErrorCode }


type alias ResponseHostIdList =
    List String


type alias ResponseHostIdSet =
    List String


type alias ResponseLaunchTemplateData =
    { userData : String
    , tagSpecifications : LaunchTemplateTagSpecificationList
    , securityGroups : ValueStringList
    , securityGroupIds : ValueStringList
    , ramDiskId : String
    , placement : LaunchTemplatePlacement
    , networkInterfaces : LaunchTemplateInstanceNetworkInterfaceSpecificationList
    , monitoring : LaunchTemplatesMonitoring
    , licenseSpecifications : LaunchTemplateLicenseList
    , keyName : String
    , kernelId : String
    , instanceType : InstanceType
    , instanceMarketOptions : LaunchTemplateInstanceMarketOptions
    , instanceInitiatedShutdownBehavior : ShutdownBehavior
    , imageId : String
    , iamInstanceProfile : LaunchTemplateIamInstanceProfileSpecification
    , hibernationOptions : LaunchTemplateHibernationOptions
    , elasticInferenceAccelerators : LaunchTemplateElasticInferenceAcceleratorResponseList
    , elasticGpuSpecifications : ElasticGpuSpecificationResponseList
    , ebsOptimized : Bool
    , disableApiTermination : Bool
    , creditSpecification : CreditSpecification
    , cpuOptions : LaunchTemplateCpuOptions
    , capacityReservationSpecification : LaunchTemplateCapacityReservationSpecificationResponse
    , blockDeviceMappings : LaunchTemplateBlockDeviceMappingList
    }


type alias RestorableByStringList =
    List String


type alias RestoreAddressToClassicRequest =
    { publicIp : String, dryRun : Bool }


type alias RestoreAddressToClassicResult =
    { status : Status, publicIp : String }


type alias RevokeClientVpnIngressRequest =
    { targetNetworkCidr : String
    , revokeAllGroups : Bool
    , dryRun : Bool
    , clientVpnEndpointId : String
    , accessGroupId : String
    }


type alias RevokeClientVpnIngressResult =
    { status : ClientVpnAuthorizationRuleStatus }


type alias RevokeSecurityGroupEgressRequest =
    { toPort : Int
    , sourceSecurityGroupOwnerId : String
    , sourceSecurityGroupName : String
    , ipProtocol : String
    , ipPermissions : IpPermissionList
    , groupId : String
    , fromPort : Int
    , dryRun : Bool
    , cidrIp : String
    }


type alias RevokeSecurityGroupIngressRequest =
    { toPort : Int
    , sourceSecurityGroupOwnerId : String
    , sourceSecurityGroupName : String
    , ipProtocol : String
    , ipPermissions : IpPermissionList
    , groupName : String
    , groupId : String
    , fromPort : Int
    , dryRun : Bool
    , cidrIp : String
    }


type alias Route =
    { vpcPeeringConnectionId : String
    , transitGatewayId : String
    , state : RouteState
    , origin : RouteOrigin
    , networkInterfaceId : String
    , natGatewayId : String
    , instanceOwnerId : String
    , instanceId : String
    , gatewayId : String
    , egressOnlyInternetGatewayId : String
    , destinationPrefixListId : String
    , destinationIpv6CidrBlock : String
    , destinationCidrBlock : String
    }


type alias RouteList =
    List Route


type RouteOrigin
    = RouteOriginCreateRouteTable
    | RouteOriginCreateRoute
    | RouteOriginEnableVgwRoutePropagation


routeOrigin : Enum RouteOrigin
routeOrigin =
    Enum.define
        [ RouteOriginCreateRouteTable, RouteOriginCreateRoute, RouteOriginEnableVgwRoutePropagation ]
        (\val ->
            case val of
                RouteOriginCreateRouteTable ->
                    "CreateRouteTable"

                RouteOriginCreateRoute ->
                    "CreateRoute"

                RouteOriginEnableVgwRoutePropagation ->
                    "EnableVgwRoutePropagation"
        )


type RouteState
    = RouteStateActive
    | RouteStateBlackhole


routeState : Enum RouteState
routeState =
    Enum.define
        [ RouteStateActive, RouteStateBlackhole ]
        (\val ->
            case val of
                RouteStateActive ->
                    "active"

                RouteStateBlackhole ->
                    "blackhole"
        )


type alias RouteTable =
    { vpcId : String
    , tags : TagList
    , routes : RouteList
    , routeTableId : String
    , propagatingVgws : PropagatingVgwList
    , ownerId : String
    , associations : RouteTableAssociationList
    }


type alias RouteTableAssociation =
    { subnetId : String, routeTableId : String, routeTableAssociationId : String, main : Bool }


type alias RouteTableAssociationList =
    List RouteTableAssociation


type alias RouteTableList =
    List RouteTable


type RuleAction
    = RuleActionAllow
    | RuleActionDeny


ruleAction : Enum RuleAction
ruleAction =
    Enum.define
        [ RuleActionAllow, RuleActionDeny ]
        (\val ->
            case val of
                RuleActionAllow ->
                    "allow"

                RuleActionDeny ->
                    "deny"
        )


type alias RunInstancesMonitoringEnabled =
    { enabled : Bool }


type alias RunInstancesRequest =
    { userData : String
    , tagSpecifications : TagSpecificationList
    , subnetId : String
    , securityGroups : SecurityGroupStringList
    , securityGroupIds : SecurityGroupIdStringList
    , ramdiskId : String
    , privateIpAddress : String
    , placement : Placement
    , networkInterfaces : InstanceNetworkInterfaceSpecificationList
    , monitoring : RunInstancesMonitoringEnabled
    , minCount : Int
    , maxCount : Int
    , licenseSpecifications : LicenseSpecificationListRequest
    , launchTemplate : LaunchTemplateSpecification
    , keyName : String
    , kernelId : String
    , ipv6Addresses : InstanceIpv6AddressList
    , ipv6AddressCount : Int
    , instanceType : InstanceType
    , instanceMarketOptions : InstanceMarketOptionsRequest
    , instanceInitiatedShutdownBehavior : ShutdownBehavior
    , imageId : String
    , iamInstanceProfile : IamInstanceProfileSpecification
    , hibernationOptions : HibernationOptionsRequest
    , elasticInferenceAccelerators : ElasticInferenceAccelerators
    , elasticGpuSpecification : ElasticGpuSpecifications
    , ebsOptimized : Bool
    , dryRun : Bool
    , disableApiTermination : Bool
    , creditSpecification : CreditSpecificationRequest
    , cpuOptions : CpuOptionsRequest
    , clientToken : String
    , capacityReservationSpecification : CapacityReservationSpecification
    , blockDeviceMappings : BlockDeviceMappingRequestList
    , additionalInfo : String
    }


type alias RunScheduledInstancesRequest =
    { scheduledInstanceId : String
    , launchSpecification : ScheduledInstancesLaunchSpecification
    , instanceCount : Int
    , dryRun : Bool
    , clientToken : String
    }


type alias RunScheduledInstancesResult =
    { instanceIdSet : InstanceIdSet }


type alias S3Storage =
    { uploadPolicySignature : String, uploadPolicy : String, prefix : String, bucket : String, awsaccessKeyId : String }


type alias ScheduledInstance =
    { totalScheduledInstanceHours : Int
    , termStartDate : DateTime
    , termEndDate : DateTime
    , slotDurationInHours : Int
    , scheduledInstanceId : String
    , recurrence : ScheduledInstanceRecurrence
    , previousSlotEndTime : DateTime
    , platform : String
    , nextSlotStartTime : DateTime
    , networkPlatform : String
    , instanceType : String
    , instanceCount : Int
    , hourlyPrice : String
    , createDate : DateTime
    , availabilityZone : String
    }


type alias ScheduledInstanceAvailability =
    { totalScheduledInstanceHours : Int
    , slotDurationInHours : Int
    , recurrence : ScheduledInstanceRecurrence
    , purchaseToken : String
    , platform : String
    , networkPlatform : String
    , minTermDurationInDays : Int
    , maxTermDurationInDays : Int
    , instanceType : String
    , hourlyPrice : String
    , firstSlotStartTime : DateTime
    , availableInstanceCount : Int
    , availabilityZone : String
    }


type alias ScheduledInstanceAvailabilitySet =
    List ScheduledInstanceAvailability


type alias ScheduledInstanceIdRequestSet =
    List String


type alias ScheduledInstanceRecurrence =
    { occurrenceUnit : String
    , occurrenceRelativeToEnd : Bool
    , occurrenceDaySet : OccurrenceDaySet
    , interval : Int
    , frequency : String
    }


type alias ScheduledInstanceRecurrenceRequest =
    { occurrenceUnit : String
    , occurrenceRelativeToEnd : Bool
    , occurrenceDays : OccurrenceDayRequestSet
    , interval : Int
    , frequency : String
    }


type alias ScheduledInstanceSet =
    List ScheduledInstance


type alias ScheduledInstancesBlockDeviceMapping =
    { virtualName : String, noDevice : String, ebs : ScheduledInstancesEbs, deviceName : String }


type alias ScheduledInstancesBlockDeviceMappingSet =
    List ScheduledInstancesBlockDeviceMapping


type alias ScheduledInstancesEbs =
    { volumeType : String
    , volumeSize : Int
    , snapshotId : String
    , iops : Int
    , encrypted : Bool
    , deleteOnTermination : Bool
    }


type alias ScheduledInstancesIamInstanceProfile =
    { name : String, arn : String }


type alias ScheduledInstancesIpv6Address =
    { ipv6Address : String }


type alias ScheduledInstancesIpv6AddressList =
    List ScheduledInstancesIpv6Address


type alias ScheduledInstancesLaunchSpecification =
    { userData : String
    , subnetId : String
    , securityGroupIds : ScheduledInstancesSecurityGroupIdSet
    , ramdiskId : String
    , placement : ScheduledInstancesPlacement
    , networkInterfaces : ScheduledInstancesNetworkInterfaceSet
    , monitoring : ScheduledInstancesMonitoring
    , keyName : String
    , kernelId : String
    , instanceType : String
    , imageId : String
    , iamInstanceProfile : ScheduledInstancesIamInstanceProfile
    , ebsOptimized : Bool
    , blockDeviceMappings : ScheduledInstancesBlockDeviceMappingSet
    }


type alias ScheduledInstancesMonitoring =
    { enabled : Bool }


type alias ScheduledInstancesNetworkInterface =
    { subnetId : String
    , secondaryPrivateIpAddressCount : Int
    , privateIpAddressConfigs : PrivateIpAddressConfigSet
    , privateIpAddress : String
    , networkInterfaceId : String
    , ipv6Addresses : ScheduledInstancesIpv6AddressList
    , ipv6AddressCount : Int
    , groups : ScheduledInstancesSecurityGroupIdSet
    , deviceIndex : Int
    , description : String
    , deleteOnTermination : Bool
    , associatePublicIpAddress : Bool
    }


type alias ScheduledInstancesNetworkInterfaceSet =
    List ScheduledInstancesNetworkInterface


type alias ScheduledInstancesPlacement =
    { groupName : String, availabilityZone : String }


type alias ScheduledInstancesPrivateIpAddressConfig =
    { privateIpAddress : String, primary : Bool }


type alias ScheduledInstancesSecurityGroupIdSet =
    List String


type alias SearchTransitGatewayRoutesRequest =
    { transitGatewayRouteTableId : String, maxResults : TransitGatewayMaxResults, filters : FilterList, dryRun : Bool }


type alias SearchTransitGatewayRoutesResult =
    { routes : TransitGatewayRouteList, additionalRoutesAvailable : Bool }


type alias SecurityGroup =
    { vpcId : String
    , tags : TagList
    , ownerId : String
    , ipPermissionsEgress : IpPermissionList
    , ipPermissions : IpPermissionList
    , groupName : String
    , groupId : String
    , description : String
    }


type alias SecurityGroupIdStringList =
    List String


type alias SecurityGroupIdentifier =
    { groupName : String, groupId : String }


type alias SecurityGroupList =
    List SecurityGroup


type alias SecurityGroupReference =
    { vpcPeeringConnectionId : String, referencingVpcId : String, groupId : String }


type alias SecurityGroupReferences =
    List SecurityGroupReference


type alias SecurityGroupStringList =
    List String


type alias ServiceConfiguration =
    { tags : TagList
    , serviceType : ServiceTypeDetailSet
    , serviceState : ServiceState
    , serviceName : String
    , serviceId : String
    , privateDnsName : String
    , networkLoadBalancerArns : ValueStringList
    , managesVpcEndpoints : Bool
    , baseEndpointDnsNames : ValueStringList
    , availabilityZones : ValueStringList
    , acceptanceRequired : Bool
    }


type alias ServiceConfigurationSet =
    List ServiceConfiguration


type alias ServiceDetail =
    { vpcEndpointPolicySupported : Bool
    , tags : TagList
    , serviceType : ServiceTypeDetailSet
    , serviceName : String
    , serviceId : String
    , privateDnsName : String
    , owner : String
    , managesVpcEndpoints : Bool
    , baseEndpointDnsNames : ValueStringList
    , availabilityZones : ValueStringList
    , acceptanceRequired : Bool
    }


type alias ServiceDetailSet =
    List ServiceDetail


type ServiceState
    = ServiceStatePending
    | ServiceStateAvailable
    | ServiceStateDeleting
    | ServiceStateDeleted
    | ServiceStateFailed


serviceState : Enum ServiceState
serviceState =
    Enum.define
        [ ServiceStatePending, ServiceStateAvailable, ServiceStateDeleting, ServiceStateDeleted, ServiceStateFailed ]
        (\val ->
            case val of
                ServiceStatePending ->
                    "Pending"

                ServiceStateAvailable ->
                    "Available"

                ServiceStateDeleting ->
                    "Deleting"

                ServiceStateDeleted ->
                    "Deleted"

                ServiceStateFailed ->
                    "Failed"
        )


type ServiceType
    = ServiceTypeInterface
    | ServiceTypeGateway


serviceType : Enum ServiceType
serviceType =
    Enum.define
        [ ServiceTypeInterface, ServiceTypeGateway ]
        (\val ->
            case val of
                ServiceTypeInterface ->
                    "Interface"

                ServiceTypeGateway ->
                    "Gateway"
        )


type alias ServiceTypeDetail =
    { serviceType : ServiceType }


type alias ServiceTypeDetailSet =
    List ServiceTypeDetail


type ShutdownBehavior
    = ShutdownBehaviorStop
    | ShutdownBehaviorTerminate


shutdownBehavior : Enum ShutdownBehavior
shutdownBehavior =
    Enum.define
        [ ShutdownBehaviorStop, ShutdownBehaviorTerminate ]
        (\val ->
            case val of
                ShutdownBehaviorStop ->
                    "stop"

                ShutdownBehaviorTerminate ->
                    "terminate"
        )


type alias SlotDateTimeRangeRequest =
    { latestTime : DateTime, earliestTime : DateTime }


type alias SlotStartTimeRangeRequest =
    { latestTime : DateTime, earliestTime : DateTime }


type alias Snapshot =
    { volumeSize : Int
    , volumeId : String
    , tags : TagList
    , stateMessage : String
    , state : SnapshotState
    , startTime : DateTime
    , snapshotId : String
    , progress : String
    , ownerId : String
    , ownerAlias : String
    , kmsKeyId : String
    , encrypted : Bool
    , description : String
    , dataEncryptionKeyId : String
    }


type SnapshotAttributeName
    = SnapshotAttributeNameProductCodes
    | SnapshotAttributeNameCreateVolumePermission


snapshotAttributeName : Enum SnapshotAttributeName
snapshotAttributeName =
    Enum.define
        [ SnapshotAttributeNameProductCodes, SnapshotAttributeNameCreateVolumePermission ]
        (\val ->
            case val of
                SnapshotAttributeNameProductCodes ->
                    "productCodes"

                SnapshotAttributeNameCreateVolumePermission ->
                    "createVolumePermission"
        )


type alias SnapshotDetail =
    { userBucket : UserBucketDetails
    , url : String
    , statusMessage : String
    , status : String
    , snapshotId : String
    , progress : String
    , format : String
    , diskImageSize : Float
    , deviceName : String
    , description : String
    }


type alias SnapshotDetailList =
    List SnapshotDetail


type alias SnapshotDiskContainer =
    { userBucket : UserBucket, url : String, format : String, description : String }


type alias SnapshotIdStringList =
    List String


type alias SnapshotInfo =
    { volumeSize : Int
    , volumeId : String
    , tags : TagList
    , state : SnapshotState
    , startTime : MillisecondDateTime
    , snapshotId : String
    , progress : String
    , ownerId : String
    , encrypted : Bool
    , description : String
    }


type alias SnapshotList =
    List Snapshot


type alias SnapshotSet =
    List SnapshotInfo


type SnapshotState
    = SnapshotStatePending
    | SnapshotStateCompleted
    | SnapshotStateError


snapshotState : Enum SnapshotState
snapshotState =
    Enum.define
        [ SnapshotStatePending, SnapshotStateCompleted, SnapshotStateError ]
        (\val ->
            case val of
                SnapshotStatePending ->
                    "pending"

                SnapshotStateCompleted ->
                    "completed"

                SnapshotStateError ->
                    "error"
        )


type alias SnapshotTaskDetail =
    { userBucket : UserBucketDetails
    , url : String
    , statusMessage : String
    , status : String
    , snapshotId : String
    , progress : String
    , kmsKeyId : String
    , format : String
    , encrypted : Bool
    , diskImageSize : Float
    , description : String
    }


type SpotAllocationStrategy
    = SpotAllocationStrategyLowestPrice
    | SpotAllocationStrategyDiversified
    | SpotAllocationStrategyCapacityOptimized


spotAllocationStrategy : Enum SpotAllocationStrategy
spotAllocationStrategy =
    Enum.define
        [ SpotAllocationStrategyLowestPrice
        , SpotAllocationStrategyDiversified
        , SpotAllocationStrategyCapacityOptimized
        ]
        (\val ->
            case val of
                SpotAllocationStrategyLowestPrice ->
                    "lowest-price"

                SpotAllocationStrategyDiversified ->
                    "diversified"

                SpotAllocationStrategyCapacityOptimized ->
                    "capacity-optimized"
        )


type alias SpotDatafeedSubscription =
    { state : DatafeedSubscriptionState
    , prefix : String
    , ownerId : String
    , fault : SpotInstanceStateFault
    , bucket : String
    }


type alias SpotFleetLaunchSpecification =
    { weightedCapacity : Float
    , userData : String
    , tagSpecifications : SpotFleetTagSpecificationList
    , subnetId : String
    , spotPrice : String
    , securityGroups : GroupIdentifierList
    , ramdiskId : String
    , placement : SpotPlacement
    , networkInterfaces : InstanceNetworkInterfaceSpecificationList
    , monitoring : SpotFleetMonitoring
    , keyName : String
    , kernelId : String
    , instanceType : InstanceType
    , imageId : String
    , iamInstanceProfile : IamInstanceProfileSpecification
    , ebsOptimized : Bool
    , blockDeviceMappings : BlockDeviceMappingList
    , addressingType : String
    }


type alias SpotFleetMonitoring =
    { enabled : Bool }


type alias SpotFleetRequestConfig =
    { spotFleetRequestState : BatchState
    , spotFleetRequestId : String
    , spotFleetRequestConfig : SpotFleetRequestConfigData
    , createTime : DateTime
    , activityStatus : ActivityStatus
    }


type alias SpotFleetRequestConfigData =
    { validUntil : DateTime
    , validFrom : DateTime
    , type_ : FleetType
    , terminateInstancesWithExpiration : Bool
    , targetCapacity : Int
    , spotPrice : String
    , spotMaxTotalPrice : String
    , replaceUnhealthyInstances : Bool
    , onDemandTargetCapacity : Int
    , onDemandMaxTotalPrice : String
    , onDemandFulfilledCapacity : Float
    , onDemandAllocationStrategy : OnDemandAllocationStrategy
    , loadBalancersConfig : LoadBalancersConfig
    , launchTemplateConfigs : LaunchTemplateConfigList
    , launchSpecifications : LaunchSpecsList
    , instancePoolsToUseCount : Int
    , instanceInterruptionBehavior : InstanceInterruptionBehavior
    , iamFleetRole : String
    , fulfilledCapacity : Float
    , excessCapacityTerminationPolicy : ExcessCapacityTerminationPolicy
    , clientToken : String
    , allocationStrategy : AllocationStrategy
    }


type alias SpotFleetRequestConfigSet =
    List SpotFleetRequestConfig


type alias SpotFleetTagSpecification =
    { tags : TagList, resourceType : ResourceType }


type alias SpotFleetTagSpecificationList =
    List SpotFleetTagSpecification


type SpotInstanceInterruptionBehavior
    = SpotInstanceInterruptionBehaviorHibernate
    | SpotInstanceInterruptionBehaviorStop
    | SpotInstanceInterruptionBehaviorTerminate


spotInstanceInterruptionBehavior : Enum SpotInstanceInterruptionBehavior
spotInstanceInterruptionBehavior =
    Enum.define
        [ SpotInstanceInterruptionBehaviorHibernate
        , SpotInstanceInterruptionBehaviorStop
        , SpotInstanceInterruptionBehaviorTerminate
        ]
        (\val ->
            case val of
                SpotInstanceInterruptionBehaviorHibernate ->
                    "hibernate"

                SpotInstanceInterruptionBehaviorStop ->
                    "stop"

                SpotInstanceInterruptionBehaviorTerminate ->
                    "terminate"
        )


type alias SpotInstanceRequest =
    { validUntil : DateTime
    , validFrom : DateTime
    , type_ : SpotInstanceType
    , tags : TagList
    , status : SpotInstanceStatus
    , state : SpotInstanceState
    , spotPrice : String
    , spotInstanceRequestId : String
    , productDescription : RiproductDescription
    , launchedAvailabilityZone : String
    , launchSpecification : LaunchSpecification
    , launchGroup : String
    , instanceInterruptionBehavior : InstanceInterruptionBehavior
    , instanceId : String
    , fault : SpotInstanceStateFault
    , createTime : DateTime
    , blockDurationMinutes : Int
    , availabilityZoneGroup : String
    , actualBlockHourlyPrice : String
    }


type alias SpotInstanceRequestIdList =
    List String


type alias SpotInstanceRequestList =
    List SpotInstanceRequest


type SpotInstanceState
    = SpotInstanceStateOpen
    | SpotInstanceStateActive
    | SpotInstanceStateClosed
    | SpotInstanceStateCancelled
    | SpotInstanceStateFailed


spotInstanceState : Enum SpotInstanceState
spotInstanceState =
    Enum.define
        [ SpotInstanceStateOpen
        , SpotInstanceStateActive
        , SpotInstanceStateClosed
        , SpotInstanceStateCancelled
        , SpotInstanceStateFailed
        ]
        (\val ->
            case val of
                SpotInstanceStateOpen ->
                    "open"

                SpotInstanceStateActive ->
                    "active"

                SpotInstanceStateClosed ->
                    "closed"

                SpotInstanceStateCancelled ->
                    "cancelled"

                SpotInstanceStateFailed ->
                    "failed"
        )


type alias SpotInstanceStateFault =
    { message : String, code : String }


type alias SpotInstanceStatus =
    { updateTime : DateTime, message : String, code : String }


type SpotInstanceType
    = SpotInstanceTypeOneTime
    | SpotInstanceTypePersistent


spotInstanceType : Enum SpotInstanceType
spotInstanceType =
    Enum.define
        [ SpotInstanceTypeOneTime, SpotInstanceTypePersistent ]
        (\val ->
            case val of
                SpotInstanceTypeOneTime ->
                    "one-time"

                SpotInstanceTypePersistent ->
                    "persistent"
        )


type alias SpotMarketOptions =
    { validUntil : DateTime
    , spotInstanceType : SpotInstanceType
    , maxPrice : String
    , instanceInterruptionBehavior : InstanceInterruptionBehavior
    , blockDurationMinutes : Int
    }


type alias SpotOptions =
    { singleInstanceType : Bool
    , singleAvailabilityZone : Bool
    , minTargetCapacity : Int
    , maxTotalPrice : String
    , instancePoolsToUseCount : Int
    , instanceInterruptionBehavior : SpotInstanceInterruptionBehavior
    , allocationStrategy : SpotAllocationStrategy
    }


type alias SpotOptionsRequest =
    { singleInstanceType : Bool
    , singleAvailabilityZone : Bool
    , minTargetCapacity : Int
    , maxTotalPrice : String
    , instancePoolsToUseCount : Int
    , instanceInterruptionBehavior : SpotInstanceInterruptionBehavior
    , allocationStrategy : SpotAllocationStrategy
    }


type alias SpotPlacement =
    { tenancy : Tenancy, groupName : String, availabilityZone : String }


type alias SpotPrice =
    { timestamp : DateTime
    , spotPrice : String
    , productDescription : RiproductDescription
    , instanceType : InstanceType
    , availabilityZone : String
    }


type alias SpotPriceHistoryList =
    List SpotPrice


type alias StaleIpPermission =
    { userIdGroupPairs : UserIdGroupPairSet
    , toPort : Int
    , prefixListIds : PrefixListIdSet
    , ipRanges : IpRanges
    , ipProtocol : String
    , fromPort : Int
    }


type alias StaleIpPermissionSet =
    List StaleIpPermission


type alias StaleSecurityGroup =
    { vpcId : String
    , staleIpPermissionsEgress : StaleIpPermissionSet
    , staleIpPermissions : StaleIpPermissionSet
    , groupName : String
    , groupId : String
    , description : String
    }


type alias StaleSecurityGroupSet =
    List StaleSecurityGroup


type alias StartInstancesRequest =
    { instanceIds : InstanceIdStringList, dryRun : Bool, additionalInfo : String }


type alias StartInstancesResult =
    { startingInstances : InstanceStateChangeList }


type State
    = StatePendingAcceptance
    | StatePending
    | StateAvailable
    | StateDeleting
    | StateDeleted
    | StateRejected
    | StateFailed
    | StateExpired


state : Enum State
state =
    Enum.define
        [ StatePendingAcceptance
        , StatePending
        , StateAvailable
        , StateDeleting
        , StateDeleted
        , StateRejected
        , StateFailed
        , StateExpired
        ]
        (\val ->
            case val of
                StatePendingAcceptance ->
                    "PendingAcceptance"

                StatePending ->
                    "Pending"

                StateAvailable ->
                    "Available"

                StateDeleting ->
                    "Deleting"

                StateDeleted ->
                    "Deleted"

                StateRejected ->
                    "Rejected"

                StateFailed ->
                    "Failed"

                StateExpired ->
                    "Expired"
        )


type alias StateReason =
    { message : String, code : String }


type Status
    = StatusMoveInProgress
    | StatusInVpc
    | StatusInClassic


status : Enum Status
status =
    Enum.define
        [ StatusMoveInProgress, StatusInVpc, StatusInClassic ]
        (\val ->
            case val of
                StatusMoveInProgress ->
                    "MoveInProgress"

                StatusInVpc ->
                    "InVpc"

                StatusInClassic ->
                    "InClassic"
        )


type StatusName
    = StatusNameReachability


statusName : Enum StatusName
statusName =
    Enum.define
        [ StatusNameReachability ]
        (\val ->
            case val of
                StatusNameReachability ->
                    "reachability"
        )


type StatusType
    = StatusTypePassed
    | StatusTypeFailed
    | StatusTypeInsufficientData
    | StatusTypeInitializing


statusType : Enum StatusType
statusType =
    Enum.define
        [ StatusTypePassed, StatusTypeFailed, StatusTypeInsufficientData, StatusTypeInitializing ]
        (\val ->
            case val of
                StatusTypePassed ->
                    "passed"

                StatusTypeFailed ->
                    "failed"

                StatusTypeInsufficientData ->
                    "insufficient-data"

                StatusTypeInitializing ->
                    "initializing"
        )


type alias StopInstancesRequest =
    { instanceIds : InstanceIdStringList, hibernate : Bool, force : Bool, dryRun : Bool }


type alias StopInstancesResult =
    { stoppingInstances : InstanceStateChangeList }


type alias Storage =
    { s3 : S3Storage }


type alias StorageLocation =
    { key : String, bucket : String }


type alias String_ =
    String


type alias Subnet =
    { vpcId : String
    , tags : TagList
    , subnetId : String
    , subnetArn : String
    , state : SubnetState
    , ownerId : String
    , mapPublicIpOnLaunch : Bool
    , ipv6CidrBlockAssociationSet : SubnetIpv6CidrBlockAssociationSet
    , defaultForAz : Bool
    , cidrBlock : String
    , availableIpAddressCount : Int
    , availabilityZoneId : String
    , availabilityZone : String
    , assignIpv6AddressOnCreation : Bool
    }


type alias SubnetCidrBlockState =
    { statusMessage : String, state : SubnetCidrBlockStateCode }


type SubnetCidrBlockStateCode
    = SubnetCidrBlockStateCodeAssociating
    | SubnetCidrBlockStateCodeAssociated
    | SubnetCidrBlockStateCodeDisassociating
    | SubnetCidrBlockStateCodeDisassociated
    | SubnetCidrBlockStateCodeFailing
    | SubnetCidrBlockStateCodeFailed


subnetCidrBlockStateCode : Enum SubnetCidrBlockStateCode
subnetCidrBlockStateCode =
    Enum.define
        [ SubnetCidrBlockStateCodeAssociating
        , SubnetCidrBlockStateCodeAssociated
        , SubnetCidrBlockStateCodeDisassociating
        , SubnetCidrBlockStateCodeDisassociated
        , SubnetCidrBlockStateCodeFailing
        , SubnetCidrBlockStateCodeFailed
        ]
        (\val ->
            case val of
                SubnetCidrBlockStateCodeAssociating ->
                    "associating"

                SubnetCidrBlockStateCodeAssociated ->
                    "associated"

                SubnetCidrBlockStateCodeDisassociating ->
                    "disassociating"

                SubnetCidrBlockStateCodeDisassociated ->
                    "disassociated"

                SubnetCidrBlockStateCodeFailing ->
                    "failing"

                SubnetCidrBlockStateCodeFailed ->
                    "failed"
        )


type alias SubnetIdStringList =
    List String


type alias SubnetIpv6CidrBlockAssociation =
    { ipv6CidrBlockState : SubnetCidrBlockState, ipv6CidrBlock : String, associationId : String }


type alias SubnetIpv6CidrBlockAssociationSet =
    List SubnetIpv6CidrBlockAssociation


type alias SubnetList =
    List Subnet


type SubnetState
    = SubnetStatePending
    | SubnetStateAvailable


subnetState : Enum SubnetState
subnetState =
    Enum.define
        [ SubnetStatePending, SubnetStateAvailable ]
        (\val ->
            case val of
                SubnetStatePending ->
                    "pending"

                SubnetStateAvailable ->
                    "available"
        )


type alias SuccessfulInstanceCreditSpecificationItem =
    { instanceId : String }


type alias SuccessfulInstanceCreditSpecificationSet =
    List SuccessfulInstanceCreditSpecificationItem


type SummaryStatus
    = SummaryStatusOk
    | SummaryStatusImpaired
    | SummaryStatusInsufficientData
    | SummaryStatusNotApplicable
    | SummaryStatusInitializing


summaryStatus : Enum SummaryStatus
summaryStatus =
    Enum.define
        [ SummaryStatusOk
        , SummaryStatusImpaired
        , SummaryStatusInsufficientData
        , SummaryStatusNotApplicable
        , SummaryStatusInitializing
        ]
        (\val ->
            case val of
                SummaryStatusOk ->
                    "ok"

                SummaryStatusImpaired ->
                    "impaired"

                SummaryStatusInsufficientData ->
                    "insufficient-data"

                SummaryStatusNotApplicable ->
                    "not-applicable"

                SummaryStatusInitializing ->
                    "initializing"
        )


type alias Tag =
    { value : String, key : String }


type alias TagDescription =
    { value : String, resourceType : ResourceType, resourceId : String, key : String }


type alias TagDescriptionList =
    List TagDescription


type alias TagList =
    List Tag


type alias TagSpecification =
    { tags : TagList, resourceType : ResourceType }


type alias TagSpecificationList =
    List TagSpecification


type alias TargetCapacitySpecification =
    { totalTargetCapacity : Int
    , spotTargetCapacity : Int
    , onDemandTargetCapacity : Int
    , defaultTargetCapacityType : DefaultTargetCapacityType
    }


type alias TargetCapacitySpecificationRequest =
    { totalTargetCapacity : Int
    , spotTargetCapacity : Int
    , onDemandTargetCapacity : Int
    , defaultTargetCapacityType : DefaultTargetCapacityType
    }


type alias TargetConfiguration =
    { offeringId : String, instanceCount : Int }


type alias TargetConfigurationRequest =
    { offeringId : String, instanceCount : Int }


type alias TargetConfigurationRequestSet =
    List TargetConfigurationRequest


type alias TargetGroup =
    { arn : String }


type alias TargetGroups =
    List TargetGroup


type alias TargetGroupsConfig =
    { targetGroups : TargetGroups }


type alias TargetNetwork =
    { vpcId : String
    , targetNetworkId : String
    , status : AssociationStatus
    , securityGroups : ValueStringList
    , clientVpnEndpointId : String
    , associationId : String
    }


type alias TargetNetworkSet =
    List TargetNetwork


type alias TargetReservationValue =
    { targetConfiguration : TargetConfiguration, reservationValue : ReservationValue }


type alias TargetReservationValueSet =
    List TargetReservationValue


type TelemetryStatus
    = TelemetryStatusUp
    | TelemetryStatusDown


telemetryStatus : Enum TelemetryStatus
telemetryStatus =
    Enum.define
        [ TelemetryStatusUp, TelemetryStatusDown ]
        (\val ->
            case val of
                TelemetryStatusUp ->
                    "UP"

                TelemetryStatusDown ->
                    "DOWN"
        )


type Tenancy
    = TenancyDefault
    | TenancyDedicated
    | TenancyHost


tenancy : Enum Tenancy
tenancy =
    Enum.define
        [ TenancyDefault, TenancyDedicated, TenancyHost ]
        (\val ->
            case val of
                TenancyDefault ->
                    "default"

                TenancyDedicated ->
                    "dedicated"

                TenancyHost ->
                    "host"
        )


type alias TerminateClientVpnConnectionsRequest =
    { username : String, dryRun : Bool, connectionId : String, clientVpnEndpointId : String }


type alias TerminateClientVpnConnectionsResult =
    { username : String, connectionStatuses : TerminateConnectionStatusSet, clientVpnEndpointId : String }


type alias TerminateConnectionStatus =
    { previousStatus : ClientVpnConnectionStatus, currentStatus : ClientVpnConnectionStatus, connectionId : String }


type alias TerminateConnectionStatusSet =
    List TerminateConnectionStatus


type alias TerminateInstancesRequest =
    { instanceIds : InstanceIdStringList, dryRun : Bool }


type alias TerminateInstancesResult =
    { terminatingInstances : InstanceStateChangeList }


type TrafficDirection
    = TrafficDirectionIngress
    | TrafficDirectionEgress


trafficDirection : Enum TrafficDirection
trafficDirection =
    Enum.define
        [ TrafficDirectionIngress, TrafficDirectionEgress ]
        (\val ->
            case val of
                TrafficDirectionIngress ->
                    "ingress"

                TrafficDirectionEgress ->
                    "egress"
        )


type alias TrafficMirrorFilter =
    { trafficMirrorFilterId : String
    , tags : TagList
    , networkServices : TrafficMirrorNetworkServiceList
    , ingressFilterRules : TrafficMirrorFilterRuleList
    , egressFilterRules : TrafficMirrorFilterRuleList
    , description : String
    }


type alias TrafficMirrorFilterRule =
    { trafficMirrorFilterRuleId : String
    , trafficMirrorFilterId : String
    , trafficDirection : TrafficDirection
    , sourcePortRange : TrafficMirrorPortRange
    , sourceCidrBlock : String
    , ruleNumber : Int
    , ruleAction : TrafficMirrorRuleAction
    , protocol : Int
    , destinationPortRange : TrafficMirrorPortRange
    , destinationCidrBlock : String
    , description : String
    }


type TrafficMirrorFilterRuleField
    = TrafficMirrorFilterRuleFieldDestinationPortRange
    | TrafficMirrorFilterRuleFieldSourcePortRange
    | TrafficMirrorFilterRuleFieldProtocol
    | TrafficMirrorFilterRuleFieldDescription


trafficMirrorFilterRuleField : Enum TrafficMirrorFilterRuleField
trafficMirrorFilterRuleField =
    Enum.define
        [ TrafficMirrorFilterRuleFieldDestinationPortRange
        , TrafficMirrorFilterRuleFieldSourcePortRange
        , TrafficMirrorFilterRuleFieldProtocol
        , TrafficMirrorFilterRuleFieldDescription
        ]
        (\val ->
            case val of
                TrafficMirrorFilterRuleFieldDestinationPortRange ->
                    "destination-port-range"

                TrafficMirrorFilterRuleFieldSourcePortRange ->
                    "source-port-range"

                TrafficMirrorFilterRuleFieldProtocol ->
                    "protocol"

                TrafficMirrorFilterRuleFieldDescription ->
                    "description"
        )


type alias TrafficMirrorFilterRuleFieldList =
    List TrafficMirrorFilterRuleField


type alias TrafficMirrorFilterRuleList =
    List TrafficMirrorFilterRule


type alias TrafficMirrorFilterSet =
    List TrafficMirrorFilter


type TrafficMirrorNetworkService
    = TrafficMirrorNetworkServiceAmazonDns


trafficMirrorNetworkService : Enum TrafficMirrorNetworkService
trafficMirrorNetworkService =
    Enum.define
        [ TrafficMirrorNetworkServiceAmazonDns ]
        (\val ->
            case val of
                TrafficMirrorNetworkServiceAmazonDns ->
                    "amazon-dns"
        )


type alias TrafficMirrorNetworkServiceList =
    List TrafficMirrorNetworkService


type alias TrafficMirrorPortRange =
    { toPort : Int, fromPort : Int }


type alias TrafficMirrorPortRangeRequest =
    { toPort : Int, fromPort : Int }


type TrafficMirrorRuleAction
    = TrafficMirrorRuleActionAccept
    | TrafficMirrorRuleActionReject


trafficMirrorRuleAction : Enum TrafficMirrorRuleAction
trafficMirrorRuleAction =
    Enum.define
        [ TrafficMirrorRuleActionAccept, TrafficMirrorRuleActionReject ]
        (\val ->
            case val of
                TrafficMirrorRuleActionAccept ->
                    "accept"

                TrafficMirrorRuleActionReject ->
                    "reject"
        )


type alias TrafficMirrorSession =
    { virtualNetworkId : Int
    , trafficMirrorTargetId : String
    , trafficMirrorSessionId : String
    , trafficMirrorFilterId : String
    , tags : TagList
    , sessionNumber : Int
    , packetLength : Int
    , ownerId : String
    , networkInterfaceId : String
    , description : String
    }


type TrafficMirrorSessionField
    = TrafficMirrorSessionFieldPacketLength
    | TrafficMirrorSessionFieldDescription
    | TrafficMirrorSessionFieldVirtualNetworkId


trafficMirrorSessionField : Enum TrafficMirrorSessionField
trafficMirrorSessionField =
    Enum.define
        [ TrafficMirrorSessionFieldPacketLength
        , TrafficMirrorSessionFieldDescription
        , TrafficMirrorSessionFieldVirtualNetworkId
        ]
        (\val ->
            case val of
                TrafficMirrorSessionFieldPacketLength ->
                    "packet-length"

                TrafficMirrorSessionFieldDescription ->
                    "description"

                TrafficMirrorSessionFieldVirtualNetworkId ->
                    "virtual-network-id"
        )


type alias TrafficMirrorSessionFieldList =
    List TrafficMirrorSessionField


type alias TrafficMirrorSessionSet =
    List TrafficMirrorSession


type alias TrafficMirrorTarget =
    { type_ : TrafficMirrorTargetType
    , trafficMirrorTargetId : String
    , tags : TagList
    , ownerId : String
    , networkLoadBalancerArn : String
    , networkInterfaceId : String
    , description : String
    }


type alias TrafficMirrorTargetSet =
    List TrafficMirrorTarget


type TrafficMirrorTargetType
    = TrafficMirrorTargetTypeNetworkInterface
    | TrafficMirrorTargetTypeNetworkLoadBalancer


trafficMirrorTargetType : Enum TrafficMirrorTargetType
trafficMirrorTargetType =
    Enum.define
        [ TrafficMirrorTargetTypeNetworkInterface, TrafficMirrorTargetTypeNetworkLoadBalancer ]
        (\val ->
            case val of
                TrafficMirrorTargetTypeNetworkInterface ->
                    "network-interface"

                TrafficMirrorTargetTypeNetworkLoadBalancer ->
                    "network-load-balancer"
        )


type TrafficMirroringMaxResults
    = TrafficMirroringMaxResults Int


trafficMirroringMaxResults : Refined Int TrafficMirroringMaxResults IntError
trafficMirroringMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map TrafficMirroringMaxResults

        unboxFn (TrafficMirroringMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type TrafficType
    = TrafficTypeAccept
    | TrafficTypeReject
    | TrafficTypeAll


trafficType : Enum TrafficType
trafficType =
    Enum.define
        [ TrafficTypeAccept, TrafficTypeReject, TrafficTypeAll ]
        (\val ->
            case val of
                TrafficTypeAccept ->
                    "ACCEPT"

                TrafficTypeReject ->
                    "REJECT"

                TrafficTypeAll ->
                    "ALL"
        )


type alias TransitGateway =
    { transitGatewayId : String
    , transitGatewayArn : String
    , tags : TagList
    , state : TransitGatewayState
    , ownerId : String
    , options : TransitGatewayOptions
    , description : String
    , creationTime : DateTime
    }


type alias TransitGatewayAssociation =
    { transitGatewayRouteTableId : String
    , transitGatewayAttachmentId : String
    , state : TransitGatewayAssociationState
    , resourceType : TransitGatewayAttachmentResourceType
    , resourceId : String
    }


type TransitGatewayAssociationState
    = TransitGatewayAssociationStateAssociating
    | TransitGatewayAssociationStateAssociated
    | TransitGatewayAssociationStateDisassociating
    | TransitGatewayAssociationStateDisassociated


transitGatewayAssociationState : Enum TransitGatewayAssociationState
transitGatewayAssociationState =
    Enum.define
        [ TransitGatewayAssociationStateAssociating
        , TransitGatewayAssociationStateAssociated
        , TransitGatewayAssociationStateDisassociating
        , TransitGatewayAssociationStateDisassociated
        ]
        (\val ->
            case val of
                TransitGatewayAssociationStateAssociating ->
                    "associating"

                TransitGatewayAssociationStateAssociated ->
                    "associated"

                TransitGatewayAssociationStateDisassociating ->
                    "disassociating"

                TransitGatewayAssociationStateDisassociated ->
                    "disassociated"
        )


type alias TransitGatewayAttachment =
    { transitGatewayOwnerId : String
    , transitGatewayId : String
    , transitGatewayAttachmentId : String
    , tags : TagList
    , state : TransitGatewayAttachmentState
    , resourceType : TransitGatewayAttachmentResourceType
    , resourceOwnerId : String
    , resourceId : String
    , creationTime : DateTime
    , association : TransitGatewayAttachmentAssociation
    }


type alias TransitGatewayAttachmentAssociation =
    { transitGatewayRouteTableId : String, state : TransitGatewayAssociationState }


type alias TransitGatewayAttachmentIdStringList =
    List String


type alias TransitGatewayAttachmentList =
    List TransitGatewayAttachment


type alias TransitGatewayAttachmentPropagation =
    { transitGatewayRouteTableId : String, state : TransitGatewayPropagationState }


type alias TransitGatewayAttachmentPropagationList =
    List TransitGatewayAttachmentPropagation


type TransitGatewayAttachmentResourceType
    = TransitGatewayAttachmentResourceTypeVpc
    | TransitGatewayAttachmentResourceTypeVpn
    | TransitGatewayAttachmentResourceTypeDirectConnectGateway


transitGatewayAttachmentResourceType : Enum TransitGatewayAttachmentResourceType
transitGatewayAttachmentResourceType =
    Enum.define
        [ TransitGatewayAttachmentResourceTypeVpc
        , TransitGatewayAttachmentResourceTypeVpn
        , TransitGatewayAttachmentResourceTypeDirectConnectGateway
        ]
        (\val ->
            case val of
                TransitGatewayAttachmentResourceTypeVpc ->
                    "vpc"

                TransitGatewayAttachmentResourceTypeVpn ->
                    "vpn"

                TransitGatewayAttachmentResourceTypeDirectConnectGateway ->
                    "direct-connect-gateway"
        )


type TransitGatewayAttachmentState
    = TransitGatewayAttachmentStatePendingAcceptance
    | TransitGatewayAttachmentStateRollingBack
    | TransitGatewayAttachmentStatePending
    | TransitGatewayAttachmentStateAvailable
    | TransitGatewayAttachmentStateModifying
    | TransitGatewayAttachmentStateDeleting
    | TransitGatewayAttachmentStateDeleted
    | TransitGatewayAttachmentStateFailed
    | TransitGatewayAttachmentStateRejected
    | TransitGatewayAttachmentStateRejecting
    | TransitGatewayAttachmentStateFailing


transitGatewayAttachmentState : Enum TransitGatewayAttachmentState
transitGatewayAttachmentState =
    Enum.define
        [ TransitGatewayAttachmentStatePendingAcceptance
        , TransitGatewayAttachmentStateRollingBack
        , TransitGatewayAttachmentStatePending
        , TransitGatewayAttachmentStateAvailable
        , TransitGatewayAttachmentStateModifying
        , TransitGatewayAttachmentStateDeleting
        , TransitGatewayAttachmentStateDeleted
        , TransitGatewayAttachmentStateFailed
        , TransitGatewayAttachmentStateRejected
        , TransitGatewayAttachmentStateRejecting
        , TransitGatewayAttachmentStateFailing
        ]
        (\val ->
            case val of
                TransitGatewayAttachmentStatePendingAcceptance ->
                    "pendingAcceptance"

                TransitGatewayAttachmentStateRollingBack ->
                    "rollingBack"

                TransitGatewayAttachmentStatePending ->
                    "pending"

                TransitGatewayAttachmentStateAvailable ->
                    "available"

                TransitGatewayAttachmentStateModifying ->
                    "modifying"

                TransitGatewayAttachmentStateDeleting ->
                    "deleting"

                TransitGatewayAttachmentStateDeleted ->
                    "deleted"

                TransitGatewayAttachmentStateFailed ->
                    "failed"

                TransitGatewayAttachmentStateRejected ->
                    "rejected"

                TransitGatewayAttachmentStateRejecting ->
                    "rejecting"

                TransitGatewayAttachmentStateFailing ->
                    "failing"
        )


type alias TransitGatewayIdStringList =
    List String


type alias TransitGatewayList =
    List TransitGateway


type TransitGatewayMaxResults
    = TransitGatewayMaxResults Int


transitGatewayMaxResults : Refined Int TransitGatewayMaxResults IntError
transitGatewayMaxResults =
    let
        guardFn val =
            Refined.gt 5 val |> Result.andThen (Refined.lt 1000) |> Result.map TransitGatewayMaxResults

        unboxFn (TransitGatewayMaxResults val) =
            val
    in
    Refined.define guardFn Json.Decode.int Json.Encode.int Refined.intErrorToString unboxFn


type alias TransitGatewayOptions =
    { vpnEcmpSupport : VpnEcmpSupportValue
    , propagationDefaultRouteTableId : String
    , dnsSupport : DnsSupportValue
    , defaultRouteTablePropagation : DefaultRouteTablePropagationValue
    , defaultRouteTableAssociation : DefaultRouteTableAssociationValue
    , autoAcceptSharedAttachments : AutoAcceptSharedAttachmentsValue
    , associationDefaultRouteTableId : String
    , amazonSideAsn : Int
    }


type alias TransitGatewayPropagation =
    { transitGatewayRouteTableId : String
    , transitGatewayAttachmentId : String
    , state : TransitGatewayPropagationState
    , resourceType : TransitGatewayAttachmentResourceType
    , resourceId : String
    }


type TransitGatewayPropagationState
    = TransitGatewayPropagationStateEnabling
    | TransitGatewayPropagationStateEnabled
    | TransitGatewayPropagationStateDisabling
    | TransitGatewayPropagationStateDisabled


transitGatewayPropagationState : Enum TransitGatewayPropagationState
transitGatewayPropagationState =
    Enum.define
        [ TransitGatewayPropagationStateEnabling
        , TransitGatewayPropagationStateEnabled
        , TransitGatewayPropagationStateDisabling
        , TransitGatewayPropagationStateDisabled
        ]
        (\val ->
            case val of
                TransitGatewayPropagationStateEnabling ->
                    "enabling"

                TransitGatewayPropagationStateEnabled ->
                    "enabled"

                TransitGatewayPropagationStateDisabling ->
                    "disabling"

                TransitGatewayPropagationStateDisabled ->
                    "disabled"
        )


type alias TransitGatewayRequestOptions =
    { vpnEcmpSupport : VpnEcmpSupportValue
    , dnsSupport : DnsSupportValue
    , defaultRouteTablePropagation : DefaultRouteTablePropagationValue
    , defaultRouteTableAssociation : DefaultRouteTableAssociationValue
    , autoAcceptSharedAttachments : AutoAcceptSharedAttachmentsValue
    , amazonSideAsn : Int
    }


type alias TransitGatewayRoute =
    { type_ : TransitGatewayRouteType
    , transitGatewayAttachments : TransitGatewayRouteAttachmentList
    , state : TransitGatewayRouteState
    , destinationCidrBlock : String
    }


type alias TransitGatewayRouteAttachment =
    { transitGatewayAttachmentId : String, resourceType : TransitGatewayAttachmentResourceType, resourceId : String }


type alias TransitGatewayRouteAttachmentList =
    List TransitGatewayRouteAttachment


type alias TransitGatewayRouteList =
    List TransitGatewayRoute


type TransitGatewayRouteState
    = TransitGatewayRouteStatePending
    | TransitGatewayRouteStateActive
    | TransitGatewayRouteStateBlackhole
    | TransitGatewayRouteStateDeleting
    | TransitGatewayRouteStateDeleted


transitGatewayRouteState : Enum TransitGatewayRouteState
transitGatewayRouteState =
    Enum.define
        [ TransitGatewayRouteStatePending
        , TransitGatewayRouteStateActive
        , TransitGatewayRouteStateBlackhole
        , TransitGatewayRouteStateDeleting
        , TransitGatewayRouteStateDeleted
        ]
        (\val ->
            case val of
                TransitGatewayRouteStatePending ->
                    "pending"

                TransitGatewayRouteStateActive ->
                    "active"

                TransitGatewayRouteStateBlackhole ->
                    "blackhole"

                TransitGatewayRouteStateDeleting ->
                    "deleting"

                TransitGatewayRouteStateDeleted ->
                    "deleted"
        )


type alias TransitGatewayRouteTable =
    { transitGatewayRouteTableId : String
    , transitGatewayId : String
    , tags : TagList
    , state : TransitGatewayRouteTableState
    , defaultPropagationRouteTable : Bool
    , defaultAssociationRouteTable : Bool
    , creationTime : DateTime
    }


type alias TransitGatewayRouteTableAssociation =
    { transitGatewayAttachmentId : String
    , state : TransitGatewayAssociationState
    , resourceType : TransitGatewayAttachmentResourceType
    , resourceId : String
    }


type alias TransitGatewayRouteTableAssociationList =
    List TransitGatewayRouteTableAssociation


type alias TransitGatewayRouteTableIdStringList =
    List String


type alias TransitGatewayRouteTableList =
    List TransitGatewayRouteTable


type alias TransitGatewayRouteTablePropagation =
    { transitGatewayAttachmentId : String
    , state : TransitGatewayPropagationState
    , resourceType : TransitGatewayAttachmentResourceType
    , resourceId : String
    }


type alias TransitGatewayRouteTablePropagationList =
    List TransitGatewayRouteTablePropagation


type TransitGatewayRouteTableState
    = TransitGatewayRouteTableStatePending
    | TransitGatewayRouteTableStateAvailable
    | TransitGatewayRouteTableStateDeleting
    | TransitGatewayRouteTableStateDeleted


transitGatewayRouteTableState : Enum TransitGatewayRouteTableState
transitGatewayRouteTableState =
    Enum.define
        [ TransitGatewayRouteTableStatePending
        , TransitGatewayRouteTableStateAvailable
        , TransitGatewayRouteTableStateDeleting
        , TransitGatewayRouteTableStateDeleted
        ]
        (\val ->
            case val of
                TransitGatewayRouteTableStatePending ->
                    "pending"

                TransitGatewayRouteTableStateAvailable ->
                    "available"

                TransitGatewayRouteTableStateDeleting ->
                    "deleting"

                TransitGatewayRouteTableStateDeleted ->
                    "deleted"
        )


type TransitGatewayRouteType
    = TransitGatewayRouteTypeStatic
    | TransitGatewayRouteTypePropagated


transitGatewayRouteType : Enum TransitGatewayRouteType
transitGatewayRouteType =
    Enum.define
        [ TransitGatewayRouteTypeStatic, TransitGatewayRouteTypePropagated ]
        (\val ->
            case val of
                TransitGatewayRouteTypeStatic ->
                    "static"

                TransitGatewayRouteTypePropagated ->
                    "propagated"
        )


type TransitGatewayState
    = TransitGatewayStatePending
    | TransitGatewayStateAvailable
    | TransitGatewayStateModifying
    | TransitGatewayStateDeleting
    | TransitGatewayStateDeleted


transitGatewayState : Enum TransitGatewayState
transitGatewayState =
    Enum.define
        [ TransitGatewayStatePending
        , TransitGatewayStateAvailable
        , TransitGatewayStateModifying
        , TransitGatewayStateDeleting
        , TransitGatewayStateDeleted
        ]
        (\val ->
            case val of
                TransitGatewayStatePending ->
                    "pending"

                TransitGatewayStateAvailable ->
                    "available"

                TransitGatewayStateModifying ->
                    "modifying"

                TransitGatewayStateDeleting ->
                    "deleting"

                TransitGatewayStateDeleted ->
                    "deleted"
        )


type alias TransitGatewayVpcAttachment =
    { vpcOwnerId : String
    , vpcId : String
    , transitGatewayId : String
    , transitGatewayAttachmentId : String
    , tags : TagList
    , subnetIds : ValueStringList
    , state : TransitGatewayAttachmentState
    , options : TransitGatewayVpcAttachmentOptions
    , creationTime : DateTime
    }


type alias TransitGatewayVpcAttachmentList =
    List TransitGatewayVpcAttachment


type alias TransitGatewayVpcAttachmentOptions =
    { ipv6Support : Ipv6SupportValue, dnsSupport : DnsSupportValue }


type TransportProtocol
    = TransportProtocolTcp
    | TransportProtocolUdp


transportProtocol : Enum TransportProtocol
transportProtocol =
    Enum.define
        [ TransportProtocolTcp, TransportProtocolUdp ]
        (\val ->
            case val of
                TransportProtocolTcp ->
                    "tcp"

                TransportProtocolUdp ->
                    "udp"
        )


type alias TunnelOptionsList =
    List VpnTunnelOptionsSpecification


type alias UnassignIpv6AddressesRequest =
    { networkInterfaceId : String, ipv6Addresses : Ipv6AddressList }


type alias UnassignIpv6AddressesResult =
    { unassignedIpv6Addresses : Ipv6AddressList, networkInterfaceId : String }


type alias UnassignPrivateIpAddressesRequest =
    { privateIpAddresses : PrivateIpAddressStringList, networkInterfaceId : String }


type alias UnmonitorInstancesRequest =
    { instanceIds : InstanceIdStringList, dryRun : Bool }


type alias UnmonitorInstancesResult =
    { instanceMonitorings : InstanceMonitoringList }


type UnsuccessfulInstanceCreditSpecificationErrorCode
    = UnsuccessfulInstanceCreditSpecificationErrorCodeInvalidInstanceIdMalformed
    | UnsuccessfulInstanceCreditSpecificationErrorCodeInvalidInstanceIdNotFound
    | UnsuccessfulInstanceCreditSpecificationErrorCodeIncorrectInstanceState
    | UnsuccessfulInstanceCreditSpecificationErrorCodeInstanceCreditSpecificationNotSupported


unsuccessfulInstanceCreditSpecificationErrorCode : Enum UnsuccessfulInstanceCreditSpecificationErrorCode
unsuccessfulInstanceCreditSpecificationErrorCode =
    Enum.define
        [ UnsuccessfulInstanceCreditSpecificationErrorCodeInvalidInstanceIdMalformed
        , UnsuccessfulInstanceCreditSpecificationErrorCodeInvalidInstanceIdNotFound
        , UnsuccessfulInstanceCreditSpecificationErrorCodeIncorrectInstanceState
        , UnsuccessfulInstanceCreditSpecificationErrorCodeInstanceCreditSpecificationNotSupported
        ]
        (\val ->
            case val of
                UnsuccessfulInstanceCreditSpecificationErrorCodeInvalidInstanceIdMalformed ->
                    "InvalidInstanceID.Malformed"

                UnsuccessfulInstanceCreditSpecificationErrorCodeInvalidInstanceIdNotFound ->
                    "InvalidInstanceID.NotFound"

                UnsuccessfulInstanceCreditSpecificationErrorCodeIncorrectInstanceState ->
                    "IncorrectInstanceState"

                UnsuccessfulInstanceCreditSpecificationErrorCodeInstanceCreditSpecificationNotSupported ->
                    "InstanceCreditSpecification.NotSupported"
        )


type alias UnsuccessfulInstanceCreditSpecificationItem =
    { instanceId : String, error : UnsuccessfulInstanceCreditSpecificationItemError }


type alias UnsuccessfulInstanceCreditSpecificationItemError =
    { message : String, code : UnsuccessfulInstanceCreditSpecificationErrorCode }


type alias UnsuccessfulInstanceCreditSpecificationSet =
    List UnsuccessfulInstanceCreditSpecificationItem


type alias UnsuccessfulItem =
    { resourceId : String, error : UnsuccessfulItemError }


type alias UnsuccessfulItemError =
    { message : String, code : String }


type alias UnsuccessfulItemList =
    List UnsuccessfulItem


type alias UnsuccessfulItemSet =
    List UnsuccessfulItem


type alias UpdateSecurityGroupRuleDescriptionsEgressRequest =
    { ipPermissions : IpPermissionList, groupName : String, groupId : String, dryRun : Bool }


type alias UpdateSecurityGroupRuleDescriptionsEgressResult =
    { return : Bool }


type alias UpdateSecurityGroupRuleDescriptionsIngressRequest =
    { ipPermissions : IpPermissionList, groupName : String, groupId : String, dryRun : Bool }


type alias UpdateSecurityGroupRuleDescriptionsIngressResult =
    { return : Bool }


type alias UserBucket =
    { s3Key : String, s3Bucket : String }


type alias UserBucketDetails =
    { s3Key : String, s3Bucket : String }


type alias UserData =
    { data : String }


type alias UserGroupStringList =
    List String


type alias UserIdGroupPair =
    { vpcPeeringConnectionId : String
    , vpcId : String
    , userId : String
    , peeringStatus : String
    , groupName : String
    , groupId : String
    , description : String
    }


type alias UserIdGroupPairList =
    List UserIdGroupPair


type alias UserIdGroupPairSet =
    List UserIdGroupPair


type alias UserIdStringList =
    List String


type alias ValueStringList =
    List String


type VersionDescription
    = VersionDescription String


versionDescription : Refined String VersionDescription StringError
versionDescription =
    let
        guardFn val =
            Refined.maxLength 255 val |> Result.map VersionDescription

        unboxFn (VersionDescription val) =
            val
    in
    Refined.define guardFn Json.Decode.string Json.Encode.string Refined.stringErrorToString unboxFn


type alias VersionStringList =
    List String


type alias VgwTelemetry =
    { statusMessage : String
    , status : TelemetryStatus
    , outsideIpAddress : String
    , lastStatusChange : DateTime
    , acceptedRouteCount : Int
    }


type alias VgwTelemetryList =
    List VgwTelemetry


type VirtualizationType
    = VirtualizationTypeHvm
    | VirtualizationTypeParavirtual


virtualizationType : Enum VirtualizationType
virtualizationType =
    Enum.define
        [ VirtualizationTypeHvm, VirtualizationTypeParavirtual ]
        (\val ->
            case val of
                VirtualizationTypeHvm ->
                    "hvm"

                VirtualizationTypeParavirtual ->
                    "paravirtual"
        )


type alias Volume =
    { volumeType : VolumeType
    , volumeId : String
    , tags : TagList
    , state : VolumeState
    , snapshotId : String
    , size : Int
    , kmsKeyId : String
    , iops : Int
    , encrypted : Bool
    , createTime : DateTime
    , availabilityZone : String
    , attachments : VolumeAttachmentList
    }


type alias VolumeAttachment =
    { volumeId : String
    , state : VolumeAttachmentState
    , instanceId : String
    , device : String
    , deleteOnTermination : Bool
    , attachTime : DateTime
    }


type alias VolumeAttachmentList =
    List VolumeAttachment


type VolumeAttachmentState
    = VolumeAttachmentStateAttaching
    | VolumeAttachmentStateAttached
    | VolumeAttachmentStateDetaching
    | VolumeAttachmentStateDetached
    | VolumeAttachmentStateBusy


volumeAttachmentState : Enum VolumeAttachmentState
volumeAttachmentState =
    Enum.define
        [ VolumeAttachmentStateAttaching
        , VolumeAttachmentStateAttached
        , VolumeAttachmentStateDetaching
        , VolumeAttachmentStateDetached
        , VolumeAttachmentStateBusy
        ]
        (\val ->
            case val of
                VolumeAttachmentStateAttaching ->
                    "attaching"

                VolumeAttachmentStateAttached ->
                    "attached"

                VolumeAttachmentStateDetaching ->
                    "detaching"

                VolumeAttachmentStateDetached ->
                    "detached"

                VolumeAttachmentStateBusy ->
                    "busy"
        )


type VolumeAttributeName
    = VolumeAttributeNameAutoEnableIo
    | VolumeAttributeNameProductCodes


volumeAttributeName : Enum VolumeAttributeName
volumeAttributeName =
    Enum.define
        [ VolumeAttributeNameAutoEnableIo, VolumeAttributeNameProductCodes ]
        (\val ->
            case val of
                VolumeAttributeNameAutoEnableIo ->
                    "autoEnableIO"

                VolumeAttributeNameProductCodes ->
                    "productCodes"
        )


type alias VolumeDetail =
    { size : Int }


type alias VolumeIdStringList =
    List String


type alias VolumeList =
    List Volume


type alias VolumeModification =
    { volumeId : String
    , targetVolumeType : VolumeType
    , targetSize : Int
    , targetIops : Int
    , statusMessage : String
    , startTime : DateTime
    , progress : Int
    , originalVolumeType : VolumeType
    , originalSize : Int
    , originalIops : Int
    , modificationState : VolumeModificationState
    , endTime : DateTime
    }


type alias VolumeModificationList =
    List VolumeModification


type VolumeModificationState
    = VolumeModificationStateModifying
    | VolumeModificationStateOptimizing
    | VolumeModificationStateCompleted
    | VolumeModificationStateFailed


volumeModificationState : Enum VolumeModificationState
volumeModificationState =
    Enum.define
        [ VolumeModificationStateModifying
        , VolumeModificationStateOptimizing
        , VolumeModificationStateCompleted
        , VolumeModificationStateFailed
        ]
        (\val ->
            case val of
                VolumeModificationStateModifying ->
                    "modifying"

                VolumeModificationStateOptimizing ->
                    "optimizing"

                VolumeModificationStateCompleted ->
                    "completed"

                VolumeModificationStateFailed ->
                    "failed"
        )


type VolumeState
    = VolumeStateCreating
    | VolumeStateAvailable
    | VolumeStateInUse
    | VolumeStateDeleting
    | VolumeStateDeleted
    | VolumeStateError


volumeState : Enum VolumeState
volumeState =
    Enum.define
        [ VolumeStateCreating
        , VolumeStateAvailable
        , VolumeStateInUse
        , VolumeStateDeleting
        , VolumeStateDeleted
        , VolumeStateError
        ]
        (\val ->
            case val of
                VolumeStateCreating ->
                    "creating"

                VolumeStateAvailable ->
                    "available"

                VolumeStateInUse ->
                    "in-use"

                VolumeStateDeleting ->
                    "deleting"

                VolumeStateDeleted ->
                    "deleted"

                VolumeStateError ->
                    "error"
        )


type alias VolumeStatusAction =
    { eventType : String, eventId : String, description : String, code : String }


type alias VolumeStatusActionsList =
    List VolumeStatusAction


type alias VolumeStatusDetails =
    { status : String, name : VolumeStatusName }


type alias VolumeStatusDetailsList =
    List VolumeStatusDetails


type alias VolumeStatusEvent =
    { notBefore : DateTime, notAfter : DateTime, eventType : String, eventId : String, description : String }


type alias VolumeStatusEventsList =
    List VolumeStatusEvent


type alias VolumeStatusInfo =
    { status : VolumeStatusInfoStatus, details : VolumeStatusDetailsList }


type VolumeStatusInfoStatus
    = VolumeStatusInfoStatusOk
    | VolumeStatusInfoStatusImpaired
    | VolumeStatusInfoStatusInsufficientData


volumeStatusInfoStatus : Enum VolumeStatusInfoStatus
volumeStatusInfoStatus =
    Enum.define
        [ VolumeStatusInfoStatusOk, VolumeStatusInfoStatusImpaired, VolumeStatusInfoStatusInsufficientData ]
        (\val ->
            case val of
                VolumeStatusInfoStatusOk ->
                    "ok"

                VolumeStatusInfoStatusImpaired ->
                    "impaired"

                VolumeStatusInfoStatusInsufficientData ->
                    "insufficient-data"
        )


type alias VolumeStatusItem =
    { volumeStatus : VolumeStatusInfo
    , volumeId : String
    , events : VolumeStatusEventsList
    , availabilityZone : String
    , actions : VolumeStatusActionsList
    }


type alias VolumeStatusList =
    List VolumeStatusItem


type VolumeStatusName
    = VolumeStatusNameIoEnabled
    | VolumeStatusNameIoPerformance


volumeStatusName : Enum VolumeStatusName
volumeStatusName =
    Enum.define
        [ VolumeStatusNameIoEnabled, VolumeStatusNameIoPerformance ]
        (\val ->
            case val of
                VolumeStatusNameIoEnabled ->
                    "io-enabled"

                VolumeStatusNameIoPerformance ->
                    "io-performance"
        )


type VolumeType
    = VolumeTypeStandard
    | VolumeTypeIo1
    | VolumeTypeGp2
    | VolumeTypeSc1
    | VolumeTypeSt1


volumeType : Enum VolumeType
volumeType =
    Enum.define
        [ VolumeTypeStandard, VolumeTypeIo1, VolumeTypeGp2, VolumeTypeSc1, VolumeTypeSt1 ]
        (\val ->
            case val of
                VolumeTypeStandard ->
                    "standard"

                VolumeTypeIo1 ->
                    "io1"

                VolumeTypeGp2 ->
                    "gp2"

                VolumeTypeSc1 ->
                    "sc1"

                VolumeTypeSt1 ->
                    "st1"
        )


type alias Vpc =
    { vpcId : String
    , tags : TagList
    , state : VpcState
    , ownerId : String
    , isDefault : Bool
    , ipv6CidrBlockAssociationSet : VpcIpv6CidrBlockAssociationSet
    , instanceTenancy : Tenancy
    , dhcpOptionsId : String
    , cidrBlockAssociationSet : VpcCidrBlockAssociationSet
    , cidrBlock : String
    }


type alias VpcAttachment =
    { vpcId : String, state : AttachmentStatus }


type alias VpcAttachmentList =
    List VpcAttachment


type VpcAttributeName
    = VpcAttributeNameEnableDnsSupport
    | VpcAttributeNameEnableDnsHostnames


vpcAttributeName : Enum VpcAttributeName
vpcAttributeName =
    Enum.define
        [ VpcAttributeNameEnableDnsSupport, VpcAttributeNameEnableDnsHostnames ]
        (\val ->
            case val of
                VpcAttributeNameEnableDnsSupport ->
                    "enableDnsSupport"

                VpcAttributeNameEnableDnsHostnames ->
                    "enableDnsHostnames"
        )


type alias VpcCidrBlockAssociation =
    { cidrBlockState : VpcCidrBlockState, cidrBlock : String, associationId : String }


type alias VpcCidrBlockAssociationSet =
    List VpcCidrBlockAssociation


type alias VpcCidrBlockState =
    { statusMessage : String, state : VpcCidrBlockStateCode }


type VpcCidrBlockStateCode
    = VpcCidrBlockStateCodeAssociating
    | VpcCidrBlockStateCodeAssociated
    | VpcCidrBlockStateCodeDisassociating
    | VpcCidrBlockStateCodeDisassociated
    | VpcCidrBlockStateCodeFailing
    | VpcCidrBlockStateCodeFailed


vpcCidrBlockStateCode : Enum VpcCidrBlockStateCode
vpcCidrBlockStateCode =
    Enum.define
        [ VpcCidrBlockStateCodeAssociating
        , VpcCidrBlockStateCodeAssociated
        , VpcCidrBlockStateCodeDisassociating
        , VpcCidrBlockStateCodeDisassociated
        , VpcCidrBlockStateCodeFailing
        , VpcCidrBlockStateCodeFailed
        ]
        (\val ->
            case val of
                VpcCidrBlockStateCodeAssociating ->
                    "associating"

                VpcCidrBlockStateCodeAssociated ->
                    "associated"

                VpcCidrBlockStateCodeDisassociating ->
                    "disassociating"

                VpcCidrBlockStateCodeDisassociated ->
                    "disassociated"

                VpcCidrBlockStateCodeFailing ->
                    "failing"

                VpcCidrBlockStateCodeFailed ->
                    "failed"
        )


type alias VpcClassicLink =
    { vpcId : String, tags : TagList, classicLinkEnabled : Bool }


type alias VpcClassicLinkIdList =
    List String


type alias VpcClassicLinkList =
    List VpcClassicLink


type alias VpcEndpoint =
    { vpcId : String
    , vpcEndpointType : VpcEndpointType
    , vpcEndpointId : String
    , tags : TagList
    , subnetIds : ValueStringList
    , state : State
    , serviceName : String
    , routeTableIds : ValueStringList
    , requesterManaged : Bool
    , privateDnsEnabled : Bool
    , policyDocument : String
    , ownerId : String
    , networkInterfaceIds : ValueStringList
    , groups : GroupIdentifierSet
    , dnsEntries : DnsEntrySet
    , creationTimestamp : MillisecondDateTime
    }


type alias VpcEndpointConnection =
    { vpcEndpointState : State
    , vpcEndpointOwner : String
    , vpcEndpointId : String
    , serviceId : String
    , networkLoadBalancerArns : ValueStringList
    , dnsEntries : DnsEntrySet
    , creationTimestamp : MillisecondDateTime
    }


type alias VpcEndpointConnectionSet =
    List VpcEndpointConnection


type alias VpcEndpointSet =
    List VpcEndpoint


type VpcEndpointType
    = VpcEndpointTypeInterface
    | VpcEndpointTypeGateway


vpcEndpointType : Enum VpcEndpointType
vpcEndpointType =
    Enum.define
        [ VpcEndpointTypeInterface, VpcEndpointTypeGateway ]
        (\val ->
            case val of
                VpcEndpointTypeInterface ->
                    "Interface"

                VpcEndpointTypeGateway ->
                    "Gateway"
        )


type alias VpcIdStringList =
    List String


type alias VpcIpv6CidrBlockAssociation =
    { ipv6CidrBlockState : VpcCidrBlockState, ipv6CidrBlock : String, associationId : String }


type alias VpcIpv6CidrBlockAssociationSet =
    List VpcIpv6CidrBlockAssociation


type alias VpcList =
    List Vpc


type alias VpcPeeringConnection =
    { vpcPeeringConnectionId : String
    , tags : TagList
    , status : VpcPeeringConnectionStateReason
    , requesterVpcInfo : VpcPeeringConnectionVpcInfo
    , expirationTime : DateTime
    , accepterVpcInfo : VpcPeeringConnectionVpcInfo
    }


type alias VpcPeeringConnectionList =
    List VpcPeeringConnection


type alias VpcPeeringConnectionOptionsDescription =
    { allowEgressFromLocalVpcToRemoteClassicLink : Bool
    , allowEgressFromLocalClassicLinkToRemoteVpc : Bool
    , allowDnsResolutionFromRemoteVpc : Bool
    }


type alias VpcPeeringConnectionStateReason =
    { message : String, code : VpcPeeringConnectionStateReasonCode }


type VpcPeeringConnectionStateReasonCode
    = VpcPeeringConnectionStateReasonCodeInitiatingRequest
    | VpcPeeringConnectionStateReasonCodePendingAcceptance
    | VpcPeeringConnectionStateReasonCodeActive
    | VpcPeeringConnectionStateReasonCodeDeleted
    | VpcPeeringConnectionStateReasonCodeRejected
    | VpcPeeringConnectionStateReasonCodeFailed
    | VpcPeeringConnectionStateReasonCodeExpired
    | VpcPeeringConnectionStateReasonCodeProvisioning
    | VpcPeeringConnectionStateReasonCodeDeleting


vpcPeeringConnectionStateReasonCode : Enum VpcPeeringConnectionStateReasonCode
vpcPeeringConnectionStateReasonCode =
    Enum.define
        [ VpcPeeringConnectionStateReasonCodeInitiatingRequest
        , VpcPeeringConnectionStateReasonCodePendingAcceptance
        , VpcPeeringConnectionStateReasonCodeActive
        , VpcPeeringConnectionStateReasonCodeDeleted
        , VpcPeeringConnectionStateReasonCodeRejected
        , VpcPeeringConnectionStateReasonCodeFailed
        , VpcPeeringConnectionStateReasonCodeExpired
        , VpcPeeringConnectionStateReasonCodeProvisioning
        , VpcPeeringConnectionStateReasonCodeDeleting
        ]
        (\val ->
            case val of
                VpcPeeringConnectionStateReasonCodeInitiatingRequest ->
                    "initiating-request"

                VpcPeeringConnectionStateReasonCodePendingAcceptance ->
                    "pending-acceptance"

                VpcPeeringConnectionStateReasonCodeActive ->
                    "active"

                VpcPeeringConnectionStateReasonCodeDeleted ->
                    "deleted"

                VpcPeeringConnectionStateReasonCodeRejected ->
                    "rejected"

                VpcPeeringConnectionStateReasonCodeFailed ->
                    "failed"

                VpcPeeringConnectionStateReasonCodeExpired ->
                    "expired"

                VpcPeeringConnectionStateReasonCodeProvisioning ->
                    "provisioning"

                VpcPeeringConnectionStateReasonCodeDeleting ->
                    "deleting"
        )


type alias VpcPeeringConnectionVpcInfo =
    { vpcId : String
    , region : String
    , peeringOptions : VpcPeeringConnectionOptionsDescription
    , ownerId : String
    , ipv6CidrBlockSet : Ipv6CidrBlockSet
    , cidrBlockSet : CidrBlockSet
    , cidrBlock : String
    }


type VpcState
    = VpcStatePending
    | VpcStateAvailable


vpcState : Enum VpcState
vpcState =
    Enum.define
        [ VpcStatePending, VpcStateAvailable ]
        (\val ->
            case val of
                VpcStatePending ->
                    "pending"

                VpcStateAvailable ->
                    "available"
        )


type VpcTenancy
    = VpcTenancyDefault


vpcTenancy : Enum VpcTenancy
vpcTenancy =
    Enum.define
        [ VpcTenancyDefault ]
        (\val ->
            case val of
                VpcTenancyDefault ->
                    "default"
        )


type alias VpnConnection =
    { vpnGatewayId : String
    , vpnConnectionId : String
    , vgwTelemetry : VgwTelemetryList
    , type_ : GatewayType
    , transitGatewayId : String
    , tags : TagList
    , state : VpnState
    , routes : VpnStaticRouteList
    , options : VpnConnectionOptions
    , customerGatewayId : String
    , customerGatewayConfiguration : String
    , category : String
    }


type alias VpnConnectionIdStringList =
    List String


type alias VpnConnectionList =
    List VpnConnection


type alias VpnConnectionOptions =
    { staticRoutesOnly : Bool }


type alias VpnConnectionOptionsSpecification =
    { tunnelOptions : TunnelOptionsList, staticRoutesOnly : Bool }


type VpnEcmpSupportValue
    = VpnEcmpSupportValueEnable
    | VpnEcmpSupportValueDisable


vpnEcmpSupportValue : Enum VpnEcmpSupportValue
vpnEcmpSupportValue =
    Enum.define
        [ VpnEcmpSupportValueEnable, VpnEcmpSupportValueDisable ]
        (\val ->
            case val of
                VpnEcmpSupportValueEnable ->
                    "enable"

                VpnEcmpSupportValueDisable ->
                    "disable"
        )


type alias VpnGateway =
    { vpnGatewayId : String
    , vpcAttachments : VpcAttachmentList
    , type_ : GatewayType
    , tags : TagList
    , state : VpnState
    , availabilityZone : String
    , amazonSideAsn : Int
    }


type alias VpnGatewayIdStringList =
    List String


type alias VpnGatewayList =
    List VpnGateway


type VpnProtocol
    = VpnProtocolOpenvpn


vpnProtocol : Enum VpnProtocol
vpnProtocol =
    Enum.define
        [ VpnProtocolOpenvpn ]
        (\val ->
            case val of
                VpnProtocolOpenvpn ->
                    "openvpn"
        )


type VpnState
    = VpnStatePending
    | VpnStateAvailable
    | VpnStateDeleting
    | VpnStateDeleted


vpnState : Enum VpnState
vpnState =
    Enum.define
        [ VpnStatePending, VpnStateAvailable, VpnStateDeleting, VpnStateDeleted ]
        (\val ->
            case val of
                VpnStatePending ->
                    "pending"

                VpnStateAvailable ->
                    "available"

                VpnStateDeleting ->
                    "deleting"

                VpnStateDeleted ->
                    "deleted"
        )


type alias VpnStaticRoute =
    { state : VpnState, source : VpnStaticRouteSource, destinationCidrBlock : String }


type alias VpnStaticRouteList =
    List VpnStaticRoute


type VpnStaticRouteSource
    = VpnStaticRouteSourceStatic


vpnStaticRouteSource : Enum VpnStaticRouteSource
vpnStaticRouteSource =
    Enum.define
        [ VpnStaticRouteSourceStatic ]
        (\val ->
            case val of
                VpnStaticRouteSourceStatic ->
                    "Static"
        )


type alias VpnTunnelOptionsSpecification =
    { tunnelInsideCidr : String, preSharedKey : String }


type alias WithdrawByoipCidrRequest =
    { dryRun : Bool, cidr : String }


type alias WithdrawByoipCidrResult =
    { byoipCidr : ByoipCidr }


type alias ZoneIdStringList =
    List String


type alias ZoneNameStringList =
    List String


type Scope
    = ScopeAvailabilityZone
    | ScopeRegion


scope : Enum Scope
scope =
    Enum.define
        [ ScopeAvailabilityZone, ScopeRegion ]
        (\val ->
            case val of
                ScopeAvailabilityZone ->
                    "Availability Zone"

                ScopeRegion ->
                    "Region"
        )


{-| Codec for Scope. -}
scopeCodec : Codec Scope
scopeCodec =
    Codec.build (Enum.encoder scope) (Enum.decoder scope)


{-| Codec for ZoneNameStringList. -}
zoneNameStringListCodec : Codec ZoneNameStringList
zoneNameStringListCodec =
    Codec.list Codec.string


{-| Codec for ZoneIdStringList. -}
zoneIdStringListCodec : Codec ZoneIdStringList
zoneIdStringListCodec =
    Codec.list Codec.string


{-| Codec for WithdrawByoipCidrResult. -}
withdrawByoipCidrResultCodec : Codec WithdrawByoipCidrResult
withdrawByoipCidrResultCodec =
    Codec.object WithdrawByoipCidrResult |> Codec.field "ByoipCidr" .byoipCidr byoipCidrCodec |> Codec.buildObject


{-| Codec for WithdrawByoipCidrRequest. -}
withdrawByoipCidrRequestCodec : Codec WithdrawByoipCidrRequest
withdrawByoipCidrRequestCodec =
    Codec.object WithdrawByoipCidrRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Cidr" .cidr Codec.string
        |> Codec.buildObject


{-| Codec for VpnTunnelOptionsSpecification. -}
vpnTunnelOptionsSpecificationCodec : Codec VpnTunnelOptionsSpecification
vpnTunnelOptionsSpecificationCodec =
    Codec.object VpnTunnelOptionsSpecification
        |> Codec.field "TunnelInsideCidr" .tunnelInsideCidr Codec.string
        |> Codec.field "PreSharedKey" .preSharedKey Codec.string
        |> Codec.buildObject


{-| Codec for VpnStaticRouteSource. -}
vpnStaticRouteSourceCodec : Codec VpnStaticRouteSource
vpnStaticRouteSourceCodec =
    Codec.build (Enum.encoder vpnStaticRouteSource) (Enum.decoder vpnStaticRouteSource)


{-| Codec for VpnStaticRouteList. -}
vpnStaticRouteListCodec : Codec VpnStaticRouteList
vpnStaticRouteListCodec =
    Codec.list vpnStaticRouteCodec


{-| Codec for VpnStaticRoute. -}
vpnStaticRouteCodec : Codec VpnStaticRoute
vpnStaticRouteCodec =
    Codec.object VpnStaticRoute
        |> Codec.field "State" .state vpnStateCodec
        |> Codec.field "Source" .source vpnStaticRouteSourceCodec
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for VpnState. -}
vpnStateCodec : Codec VpnState
vpnStateCodec =
    Codec.build (Enum.encoder vpnState) (Enum.decoder vpnState)


{-| Codec for VpnProtocol. -}
vpnProtocolCodec : Codec VpnProtocol
vpnProtocolCodec =
    Codec.build (Enum.encoder vpnProtocol) (Enum.decoder vpnProtocol)


{-| Codec for VpnGatewayList. -}
vpnGatewayListCodec : Codec VpnGatewayList
vpnGatewayListCodec =
    Codec.list vpnGatewayCodec


{-| Codec for VpnGatewayIdStringList. -}
vpnGatewayIdStringListCodec : Codec VpnGatewayIdStringList
vpnGatewayIdStringListCodec =
    Codec.list Codec.string


{-| Codec for VpnGateway. -}
vpnGatewayCodec : Codec VpnGateway
vpnGatewayCodec =
    Codec.object VpnGateway
        |> Codec.field "VpnGatewayId" .vpnGatewayId Codec.string
        |> Codec.field "VpcAttachments" .vpcAttachments vpcAttachmentListCodec
        |> Codec.field "Type" .type_ gatewayTypeCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state vpnStateCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "AmazonSideAsn" .amazonSideAsn Codec.int
        |> Codec.buildObject


{-| Codec for VpnEcmpSupportValue. -}
vpnEcmpSupportValueCodec : Codec VpnEcmpSupportValue
vpnEcmpSupportValueCodec =
    Codec.build (Enum.encoder vpnEcmpSupportValue) (Enum.decoder vpnEcmpSupportValue)


{-| Codec for VpnConnectionOptionsSpecification. -}
vpnConnectionOptionsSpecificationCodec : Codec VpnConnectionOptionsSpecification
vpnConnectionOptionsSpecificationCodec =
    Codec.object VpnConnectionOptionsSpecification
        |> Codec.field "TunnelOptions" .tunnelOptions tunnelOptionsListCodec
        |> Codec.field "StaticRoutesOnly" .staticRoutesOnly Codec.bool
        |> Codec.buildObject


{-| Codec for VpnConnectionOptions. -}
vpnConnectionOptionsCodec : Codec VpnConnectionOptions
vpnConnectionOptionsCodec =
    Codec.object VpnConnectionOptions
        |> Codec.field "StaticRoutesOnly" .staticRoutesOnly Codec.bool
        |> Codec.buildObject


{-| Codec for VpnConnectionList. -}
vpnConnectionListCodec : Codec VpnConnectionList
vpnConnectionListCodec =
    Codec.list vpnConnectionCodec


{-| Codec for VpnConnectionIdStringList. -}
vpnConnectionIdStringListCodec : Codec VpnConnectionIdStringList
vpnConnectionIdStringListCodec =
    Codec.list Codec.string


{-| Codec for VpnConnection. -}
vpnConnectionCodec : Codec VpnConnection
vpnConnectionCodec =
    Codec.object VpnConnection
        |> Codec.field "VpnGatewayId" .vpnGatewayId Codec.string
        |> Codec.field "VpnConnectionId" .vpnConnectionId Codec.string
        |> Codec.field "VgwTelemetry" .vgwTelemetry vgwTelemetryListCodec
        |> Codec.field "Type" .type_ gatewayTypeCodec
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state vpnStateCodec
        |> Codec.field "Routes" .routes vpnStaticRouteListCodec
        |> Codec.field "Options" .options vpnConnectionOptionsCodec
        |> Codec.field "CustomerGatewayId" .customerGatewayId Codec.string
        |> Codec.field "CustomerGatewayConfiguration" .customerGatewayConfiguration Codec.string
        |> Codec.field "Category" .category Codec.string
        |> Codec.buildObject


{-| Codec for VpcTenancy. -}
vpcTenancyCodec : Codec VpcTenancy
vpcTenancyCodec =
    Codec.build (Enum.encoder vpcTenancy) (Enum.decoder vpcTenancy)


{-| Codec for VpcState. -}
vpcStateCodec : Codec VpcState
vpcStateCodec =
    Codec.build (Enum.encoder vpcState) (Enum.decoder vpcState)


{-| Codec for VpcPeeringConnectionVpcInfo. -}
vpcPeeringConnectionVpcInfoCodec : Codec VpcPeeringConnectionVpcInfo
vpcPeeringConnectionVpcInfoCodec =
    Codec.object VpcPeeringConnectionVpcInfo
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Region" .region Codec.string
        |> Codec.field "PeeringOptions" .peeringOptions vpcPeeringConnectionOptionsDescriptionCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "Ipv6CidrBlockSet" .ipv6CidrBlockSet ipv6CidrBlockSetCodec
        |> Codec.field "CidrBlockSet" .cidrBlockSet cidrBlockSetCodec
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for VpcPeeringConnectionStateReasonCode. -}
vpcPeeringConnectionStateReasonCodeCodec : Codec VpcPeeringConnectionStateReasonCode
vpcPeeringConnectionStateReasonCodeCodec =
    Codec.build (Enum.encoder vpcPeeringConnectionStateReasonCode) (Enum.decoder vpcPeeringConnectionStateReasonCode)


{-| Codec for VpcPeeringConnectionStateReason. -}
vpcPeeringConnectionStateReasonCodec : Codec VpcPeeringConnectionStateReason
vpcPeeringConnectionStateReasonCodec =
    Codec.object VpcPeeringConnectionStateReason
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code vpcPeeringConnectionStateReasonCodeCodec
        |> Codec.buildObject


{-| Codec for VpcPeeringConnectionOptionsDescription. -}
vpcPeeringConnectionOptionsDescriptionCodec : Codec VpcPeeringConnectionOptionsDescription
vpcPeeringConnectionOptionsDescriptionCodec =
    Codec.object VpcPeeringConnectionOptionsDescription
        |> Codec.field
            "AllowEgressFromLocalVpcToRemoteClassicLink"
            .allowEgressFromLocalVpcToRemoteClassicLink
            Codec.bool
        |> Codec.field
            "AllowEgressFromLocalClassicLinkToRemoteVpc"
            .allowEgressFromLocalClassicLinkToRemoteVpc
            Codec.bool
        |> Codec.field "AllowDnsResolutionFromRemoteVpc" .allowDnsResolutionFromRemoteVpc Codec.bool
        |> Codec.buildObject


{-| Codec for VpcPeeringConnectionList. -}
vpcPeeringConnectionListCodec : Codec VpcPeeringConnectionList
vpcPeeringConnectionListCodec =
    Codec.list vpcPeeringConnectionCodec


{-| Codec for VpcPeeringConnection. -}
vpcPeeringConnectionCodec : Codec VpcPeeringConnection
vpcPeeringConnectionCodec =
    Codec.object VpcPeeringConnection
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "Status" .status vpcPeeringConnectionStateReasonCodec
        |> Codec.field "RequesterVpcInfo" .requesterVpcInfo vpcPeeringConnectionVpcInfoCodec
        |> Codec.field "ExpirationTime" .expirationTime dateTimeCodec
        |> Codec.field "AccepterVpcInfo" .accepterVpcInfo vpcPeeringConnectionVpcInfoCodec
        |> Codec.buildObject


{-| Codec for VpcList. -}
vpcListCodec : Codec VpcList
vpcListCodec =
    Codec.list vpcCodec


{-| Codec for VpcIpv6CidrBlockAssociationSet. -}
vpcIpv6CidrBlockAssociationSetCodec : Codec VpcIpv6CidrBlockAssociationSet
vpcIpv6CidrBlockAssociationSetCodec =
    Codec.list vpcIpv6CidrBlockAssociationCodec


{-| Codec for VpcIpv6CidrBlockAssociation. -}
vpcIpv6CidrBlockAssociationCodec : Codec VpcIpv6CidrBlockAssociation
vpcIpv6CidrBlockAssociationCodec =
    Codec.object VpcIpv6CidrBlockAssociation
        |> Codec.field "Ipv6CidrBlockState" .ipv6CidrBlockState vpcCidrBlockStateCodec
        |> Codec.field "Ipv6CidrBlock" .ipv6CidrBlock Codec.string
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for VpcIdStringList. -}
vpcIdStringListCodec : Codec VpcIdStringList
vpcIdStringListCodec =
    Codec.list Codec.string


{-| Codec for VpcEndpointType. -}
vpcEndpointTypeCodec : Codec VpcEndpointType
vpcEndpointTypeCodec =
    Codec.build (Enum.encoder vpcEndpointType) (Enum.decoder vpcEndpointType)


{-| Codec for VpcEndpointSet. -}
vpcEndpointSetCodec : Codec VpcEndpointSet
vpcEndpointSetCodec =
    Codec.list vpcEndpointCodec


{-| Codec for VpcEndpointConnectionSet. -}
vpcEndpointConnectionSetCodec : Codec VpcEndpointConnectionSet
vpcEndpointConnectionSetCodec =
    Codec.list vpcEndpointConnectionCodec


{-| Codec for VpcEndpointConnection. -}
vpcEndpointConnectionCodec : Codec VpcEndpointConnection
vpcEndpointConnectionCodec =
    Codec.object VpcEndpointConnection
        |> Codec.field "VpcEndpointState" .vpcEndpointState stateCodec
        |> Codec.field "VpcEndpointOwner" .vpcEndpointOwner Codec.string
        |> Codec.field "VpcEndpointId" .vpcEndpointId Codec.string
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "NetworkLoadBalancerArns" .networkLoadBalancerArns valueStringListCodec
        |> Codec.field "DnsEntries" .dnsEntries dnsEntrySetCodec
        |> Codec.field "CreationTimestamp" .creationTimestamp millisecondDateTimeCodec
        |> Codec.buildObject


{-| Codec for VpcEndpoint. -}
vpcEndpointCodec : Codec VpcEndpoint
vpcEndpointCodec =
    Codec.object VpcEndpoint
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "VpcEndpointType" .vpcEndpointType vpcEndpointTypeCodec
        |> Codec.field "VpcEndpointId" .vpcEndpointId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "SubnetIds" .subnetIds valueStringListCodec
        |> Codec.field "State" .state stateCodec
        |> Codec.field "ServiceName" .serviceName Codec.string
        |> Codec.field "RouteTableIds" .routeTableIds valueStringListCodec
        |> Codec.field "RequesterManaged" .requesterManaged Codec.bool
        |> Codec.field "PrivateDnsEnabled" .privateDnsEnabled Codec.bool
        |> Codec.field "PolicyDocument" .policyDocument Codec.string
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "NetworkInterfaceIds" .networkInterfaceIds valueStringListCodec
        |> Codec.field "Groups" .groups groupIdentifierSetCodec
        |> Codec.field "DnsEntries" .dnsEntries dnsEntrySetCodec
        |> Codec.field "CreationTimestamp" .creationTimestamp millisecondDateTimeCodec
        |> Codec.buildObject


{-| Codec for VpcClassicLinkList. -}
vpcClassicLinkListCodec : Codec VpcClassicLinkList
vpcClassicLinkListCodec =
    Codec.list vpcClassicLinkCodec


{-| Codec for VpcClassicLinkIdList. -}
vpcClassicLinkIdListCodec : Codec VpcClassicLinkIdList
vpcClassicLinkIdListCodec =
    Codec.list Codec.string


{-| Codec for VpcClassicLink. -}
vpcClassicLinkCodec : Codec VpcClassicLink
vpcClassicLinkCodec =
    Codec.object VpcClassicLink
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "ClassicLinkEnabled" .classicLinkEnabled Codec.bool
        |> Codec.buildObject


{-| Codec for VpcCidrBlockStateCode. -}
vpcCidrBlockStateCodeCodec : Codec VpcCidrBlockStateCode
vpcCidrBlockStateCodeCodec =
    Codec.build (Enum.encoder vpcCidrBlockStateCode) (Enum.decoder vpcCidrBlockStateCode)


{-| Codec for VpcCidrBlockState. -}
vpcCidrBlockStateCodec : Codec VpcCidrBlockState
vpcCidrBlockStateCodec =
    Codec.object VpcCidrBlockState
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "State" .state vpcCidrBlockStateCodeCodec
        |> Codec.buildObject


{-| Codec for VpcCidrBlockAssociationSet. -}
vpcCidrBlockAssociationSetCodec : Codec VpcCidrBlockAssociationSet
vpcCidrBlockAssociationSetCodec =
    Codec.list vpcCidrBlockAssociationCodec


{-| Codec for VpcCidrBlockAssociation. -}
vpcCidrBlockAssociationCodec : Codec VpcCidrBlockAssociation
vpcCidrBlockAssociationCodec =
    Codec.object VpcCidrBlockAssociation
        |> Codec.field "CidrBlockState" .cidrBlockState vpcCidrBlockStateCodec
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for VpcAttributeName. -}
vpcAttributeNameCodec : Codec VpcAttributeName
vpcAttributeNameCodec =
    Codec.build (Enum.encoder vpcAttributeName) (Enum.decoder vpcAttributeName)


{-| Codec for VpcAttachmentList. -}
vpcAttachmentListCodec : Codec VpcAttachmentList
vpcAttachmentListCodec =
    Codec.list vpcAttachmentCodec


{-| Codec for VpcAttachment. -}
vpcAttachmentCodec : Codec VpcAttachment
vpcAttachmentCodec =
    Codec.object VpcAttachment
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "State" .state attachmentStatusCodec
        |> Codec.buildObject


{-| Codec for Vpc. -}
vpcCodec : Codec Vpc
vpcCodec =
    Codec.object Vpc
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state vpcStateCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "IsDefault" .isDefault Codec.bool
        |> Codec.field "Ipv6CidrBlockAssociationSet" .ipv6CidrBlockAssociationSet vpcIpv6CidrBlockAssociationSetCodec
        |> Codec.field "InstanceTenancy" .instanceTenancy tenancyCodec
        |> Codec.field "DhcpOptionsId" .dhcpOptionsId Codec.string
        |> Codec.field "CidrBlockAssociationSet" .cidrBlockAssociationSet vpcCidrBlockAssociationSetCodec
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for VolumeType. -}
volumeTypeCodec : Codec VolumeType
volumeTypeCodec =
    Codec.build (Enum.encoder volumeType) (Enum.decoder volumeType)


{-| Codec for VolumeStatusName. -}
volumeStatusNameCodec : Codec VolumeStatusName
volumeStatusNameCodec =
    Codec.build (Enum.encoder volumeStatusName) (Enum.decoder volumeStatusName)


{-| Codec for VolumeStatusList. -}
volumeStatusListCodec : Codec VolumeStatusList
volumeStatusListCodec =
    Codec.list volumeStatusItemCodec


{-| Codec for VolumeStatusItem. -}
volumeStatusItemCodec : Codec VolumeStatusItem
volumeStatusItemCodec =
    Codec.object VolumeStatusItem
        |> Codec.field "VolumeStatus" .volumeStatus volumeStatusInfoCodec
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "Events" .events volumeStatusEventsListCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "Actions" .actions volumeStatusActionsListCodec
        |> Codec.buildObject


{-| Codec for VolumeStatusInfoStatus. -}
volumeStatusInfoStatusCodec : Codec VolumeStatusInfoStatus
volumeStatusInfoStatusCodec =
    Codec.build (Enum.encoder volumeStatusInfoStatus) (Enum.decoder volumeStatusInfoStatus)


{-| Codec for VolumeStatusInfo. -}
volumeStatusInfoCodec : Codec VolumeStatusInfo
volumeStatusInfoCodec =
    Codec.object VolumeStatusInfo
        |> Codec.field "Status" .status volumeStatusInfoStatusCodec
        |> Codec.field "Details" .details volumeStatusDetailsListCodec
        |> Codec.buildObject


{-| Codec for VolumeStatusEventsList. -}
volumeStatusEventsListCodec : Codec VolumeStatusEventsList
volumeStatusEventsListCodec =
    Codec.list volumeStatusEventCodec


{-| Codec for VolumeStatusEvent. -}
volumeStatusEventCodec : Codec VolumeStatusEvent
volumeStatusEventCodec =
    Codec.object VolumeStatusEvent
        |> Codec.field "NotBefore" .notBefore dateTimeCodec
        |> Codec.field "NotAfter" .notAfter dateTimeCodec
        |> Codec.field "EventType" .eventType Codec.string
        |> Codec.field "EventId" .eventId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for VolumeStatusDetailsList. -}
volumeStatusDetailsListCodec : Codec VolumeStatusDetailsList
volumeStatusDetailsListCodec =
    Codec.list volumeStatusDetailsCodec


{-| Codec for VolumeStatusDetails. -}
volumeStatusDetailsCodec : Codec VolumeStatusDetails
volumeStatusDetailsCodec =
    Codec.object VolumeStatusDetails
        |> Codec.field "Status" .status Codec.string
        |> Codec.field "Name" .name volumeStatusNameCodec
        |> Codec.buildObject


{-| Codec for VolumeStatusActionsList. -}
volumeStatusActionsListCodec : Codec VolumeStatusActionsList
volumeStatusActionsListCodec =
    Codec.list volumeStatusActionCodec


{-| Codec for VolumeStatusAction. -}
volumeStatusActionCodec : Codec VolumeStatusAction
volumeStatusActionCodec =
    Codec.object VolumeStatusAction
        |> Codec.field "EventType" .eventType Codec.string
        |> Codec.field "EventId" .eventId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "Code" .code Codec.string
        |> Codec.buildObject


{-| Codec for VolumeState. -}
volumeStateCodec : Codec VolumeState
volumeStateCodec =
    Codec.build (Enum.encoder volumeState) (Enum.decoder volumeState)


{-| Codec for VolumeModificationState. -}
volumeModificationStateCodec : Codec VolumeModificationState
volumeModificationStateCodec =
    Codec.build (Enum.encoder volumeModificationState) (Enum.decoder volumeModificationState)


{-| Codec for VolumeModificationList. -}
volumeModificationListCodec : Codec VolumeModificationList
volumeModificationListCodec =
    Codec.list volumeModificationCodec


{-| Codec for VolumeModification. -}
volumeModificationCodec : Codec VolumeModification
volumeModificationCodec =
    Codec.object VolumeModification
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "TargetVolumeType" .targetVolumeType volumeTypeCodec
        |> Codec.field "TargetSize" .targetSize Codec.int
        |> Codec.field "TargetIops" .targetIops Codec.int
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "Progress" .progress Codec.int
        |> Codec.field "OriginalVolumeType" .originalVolumeType volumeTypeCodec
        |> Codec.field "OriginalSize" .originalSize Codec.int
        |> Codec.field "OriginalIops" .originalIops Codec.int
        |> Codec.field "ModificationState" .modificationState volumeModificationStateCodec
        |> Codec.field "EndTime" .endTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for VolumeList. -}
volumeListCodec : Codec VolumeList
volumeListCodec =
    Codec.list volumeCodec


{-| Codec for VolumeIdStringList. -}
volumeIdStringListCodec : Codec VolumeIdStringList
volumeIdStringListCodec =
    Codec.list Codec.string


{-| Codec for VolumeDetail. -}
volumeDetailCodec : Codec VolumeDetail
volumeDetailCodec =
    Codec.object VolumeDetail |> Codec.field "Size" .size Codec.int |> Codec.buildObject


{-| Codec for VolumeAttributeName. -}
volumeAttributeNameCodec : Codec VolumeAttributeName
volumeAttributeNameCodec =
    Codec.build (Enum.encoder volumeAttributeName) (Enum.decoder volumeAttributeName)


{-| Codec for VolumeAttachmentState. -}
volumeAttachmentStateCodec : Codec VolumeAttachmentState
volumeAttachmentStateCodec =
    Codec.build (Enum.encoder volumeAttachmentState) (Enum.decoder volumeAttachmentState)


{-| Codec for VolumeAttachmentList. -}
volumeAttachmentListCodec : Codec VolumeAttachmentList
volumeAttachmentListCodec =
    Codec.list volumeAttachmentCodec


{-| Codec for VolumeAttachment. -}
volumeAttachmentCodec : Codec VolumeAttachment
volumeAttachmentCodec =
    Codec.object VolumeAttachment
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "State" .state volumeAttachmentStateCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Device" .device Codec.string
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AttachTime" .attachTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for Volume. -}
volumeCodec : Codec Volume
volumeCodec =
    Codec.object Volume
        |> Codec.field "VolumeType" .volumeType volumeTypeCodec
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state volumeStateCodec
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "Size" .size Codec.int
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Iops" .iops Codec.int
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "CreateTime" .createTime dateTimeCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "Attachments" .attachments volumeAttachmentListCodec
        |> Codec.buildObject


{-| Codec for VirtualizationType. -}
virtualizationTypeCodec : Codec VirtualizationType
virtualizationTypeCodec =
    Codec.build (Enum.encoder virtualizationType) (Enum.decoder virtualizationType)


{-| Codec for VgwTelemetryList. -}
vgwTelemetryListCodec : Codec VgwTelemetryList
vgwTelemetryListCodec =
    Codec.list vgwTelemetryCodec


{-| Codec for VgwTelemetry. -}
vgwTelemetryCodec : Codec VgwTelemetry
vgwTelemetryCodec =
    Codec.object VgwTelemetry
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "Status" .status telemetryStatusCodec
        |> Codec.field "OutsideIpAddress" .outsideIpAddress Codec.string
        |> Codec.field "LastStatusChange" .lastStatusChange dateTimeCodec
        |> Codec.field "AcceptedRouteCount" .acceptedRouteCount Codec.int
        |> Codec.buildObject


{-| Codec for VersionStringList. -}
versionStringListCodec : Codec VersionStringList
versionStringListCodec =
    Codec.list Codec.string


{-| Codec for VersionDescription. -}
versionDescriptionCodec : Codec VersionDescription
versionDescriptionCodec =
    Codec.build (Refined.encoder versionDescription) (Refined.decoder versionDescription)


{-| Codec for ValueStringList. -}
valueStringListCodec : Codec ValueStringList
valueStringListCodec =
    Codec.list Codec.string


{-| Codec for UserIdStringList. -}
userIdStringListCodec : Codec UserIdStringList
userIdStringListCodec =
    Codec.list Codec.string


{-| Codec for UserIdGroupPairSet. -}
userIdGroupPairSetCodec : Codec UserIdGroupPairSet
userIdGroupPairSetCodec =
    Codec.list userIdGroupPairCodec


{-| Codec for UserIdGroupPairList. -}
userIdGroupPairListCodec : Codec UserIdGroupPairList
userIdGroupPairListCodec =
    Codec.list userIdGroupPairCodec


{-| Codec for UserIdGroupPair. -}
userIdGroupPairCodec : Codec UserIdGroupPair
userIdGroupPairCodec =
    Codec.object UserIdGroupPair
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "UserId" .userId Codec.string
        |> Codec.field "PeeringStatus" .peeringStatus Codec.string
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for UserGroupStringList. -}
userGroupStringListCodec : Codec UserGroupStringList
userGroupStringListCodec =
    Codec.list Codec.string


{-| Codec for UserData. -}
userDataCodec : Codec UserData
userDataCodec =
    Codec.object UserData |> Codec.field "Data" .data Codec.string |> Codec.buildObject


{-| Codec for UserBucketDetails. -}
userBucketDetailsCodec : Codec UserBucketDetails
userBucketDetailsCodec =
    Codec.object UserBucketDetails
        |> Codec.field "S3Key" .s3Key Codec.string
        |> Codec.field "S3Bucket" .s3Bucket Codec.string
        |> Codec.buildObject


{-| Codec for UserBucket. -}
userBucketCodec : Codec UserBucket
userBucketCodec =
    Codec.object UserBucket
        |> Codec.field "S3Key" .s3Key Codec.string
        |> Codec.field "S3Bucket" .s3Bucket Codec.string
        |> Codec.buildObject


{-| Codec for UpdateSecurityGroupRuleDescriptionsIngressResult. -}
updateSecurityGroupRuleDescriptionsIngressResultCodec : Codec UpdateSecurityGroupRuleDescriptionsIngressResult
updateSecurityGroupRuleDescriptionsIngressResultCodec =
    Codec.object UpdateSecurityGroupRuleDescriptionsIngressResult
        |> Codec.field "Return" .return Codec.bool
        |> Codec.buildObject


{-| Codec for UpdateSecurityGroupRuleDescriptionsIngressRequest. -}
updateSecurityGroupRuleDescriptionsIngressRequestCodec : Codec UpdateSecurityGroupRuleDescriptionsIngressRequest
updateSecurityGroupRuleDescriptionsIngressRequestCodec =
    Codec.object UpdateSecurityGroupRuleDescriptionsIngressRequest
        |> Codec.field "IpPermissions" .ipPermissions ipPermissionListCodec
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for UpdateSecurityGroupRuleDescriptionsEgressResult. -}
updateSecurityGroupRuleDescriptionsEgressResultCodec : Codec UpdateSecurityGroupRuleDescriptionsEgressResult
updateSecurityGroupRuleDescriptionsEgressResultCodec =
    Codec.object UpdateSecurityGroupRuleDescriptionsEgressResult
        |> Codec.field "Return" .return Codec.bool
        |> Codec.buildObject


{-| Codec for UpdateSecurityGroupRuleDescriptionsEgressRequest. -}
updateSecurityGroupRuleDescriptionsEgressRequestCodec : Codec UpdateSecurityGroupRuleDescriptionsEgressRequest
updateSecurityGroupRuleDescriptionsEgressRequestCodec =
    Codec.object UpdateSecurityGroupRuleDescriptionsEgressRequest
        |> Codec.field "IpPermissions" .ipPermissions ipPermissionListCodec
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for UnsuccessfulItemSet. -}
unsuccessfulItemSetCodec : Codec UnsuccessfulItemSet
unsuccessfulItemSetCodec =
    Codec.list unsuccessfulItemCodec


{-| Codec for UnsuccessfulItemList. -}
unsuccessfulItemListCodec : Codec UnsuccessfulItemList
unsuccessfulItemListCodec =
    Codec.list unsuccessfulItemCodec


{-| Codec for UnsuccessfulItemError. -}
unsuccessfulItemErrorCodec : Codec UnsuccessfulItemError
unsuccessfulItemErrorCodec =
    Codec.object UnsuccessfulItemError
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code Codec.string
        |> Codec.buildObject


{-| Codec for UnsuccessfulItem. -}
unsuccessfulItemCodec : Codec UnsuccessfulItem
unsuccessfulItemCodec =
    Codec.object UnsuccessfulItem
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.field "Error" .error unsuccessfulItemErrorCodec
        |> Codec.buildObject


{-| Codec for UnsuccessfulInstanceCreditSpecificationSet. -}
unsuccessfulInstanceCreditSpecificationSetCodec : Codec UnsuccessfulInstanceCreditSpecificationSet
unsuccessfulInstanceCreditSpecificationSetCodec =
    Codec.list unsuccessfulInstanceCreditSpecificationItemCodec


{-| Codec for UnsuccessfulInstanceCreditSpecificationItemError. -}
unsuccessfulInstanceCreditSpecificationItemErrorCodec : Codec UnsuccessfulInstanceCreditSpecificationItemError
unsuccessfulInstanceCreditSpecificationItemErrorCodec =
    Codec.object UnsuccessfulInstanceCreditSpecificationItemError
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code unsuccessfulInstanceCreditSpecificationErrorCodeCodec
        |> Codec.buildObject


{-| Codec for UnsuccessfulInstanceCreditSpecificationItem. -}
unsuccessfulInstanceCreditSpecificationItemCodec : Codec UnsuccessfulInstanceCreditSpecificationItem
unsuccessfulInstanceCreditSpecificationItemCodec =
    Codec.object UnsuccessfulInstanceCreditSpecificationItem
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Error" .error unsuccessfulInstanceCreditSpecificationItemErrorCodec
        |> Codec.buildObject


{-| Codec for UnsuccessfulInstanceCreditSpecificationErrorCode. -}
unsuccessfulInstanceCreditSpecificationErrorCodeCodec : Codec UnsuccessfulInstanceCreditSpecificationErrorCode
unsuccessfulInstanceCreditSpecificationErrorCodeCodec =
    Codec.build
        (Enum.encoder unsuccessfulInstanceCreditSpecificationErrorCode)
        (Enum.decoder unsuccessfulInstanceCreditSpecificationErrorCode)


{-| Codec for UnmonitorInstancesResult. -}
unmonitorInstancesResultCodec : Codec UnmonitorInstancesResult
unmonitorInstancesResultCodec =
    Codec.object UnmonitorInstancesResult
        |> Codec.field "InstanceMonitorings" .instanceMonitorings instanceMonitoringListCodec
        |> Codec.buildObject


{-| Codec for UnmonitorInstancesRequest. -}
unmonitorInstancesRequestCodec : Codec UnmonitorInstancesRequest
unmonitorInstancesRequestCodec =
    Codec.object UnmonitorInstancesRequest
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for UnassignPrivateIpAddressesRequest. -}
unassignPrivateIpAddressesRequestCodec : Codec UnassignPrivateIpAddressesRequest
unassignPrivateIpAddressesRequestCodec =
    Codec.object UnassignPrivateIpAddressesRequest
        |> Codec.field "PrivateIpAddresses" .privateIpAddresses privateIpAddressStringListCodec
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.buildObject


{-| Codec for UnassignIpv6AddressesResult. -}
unassignIpv6AddressesResultCodec : Codec UnassignIpv6AddressesResult
unassignIpv6AddressesResultCodec =
    Codec.object UnassignIpv6AddressesResult
        |> Codec.field "UnassignedIpv6Addresses" .unassignedIpv6Addresses ipv6AddressListCodec
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.buildObject


{-| Codec for UnassignIpv6AddressesRequest. -}
unassignIpv6AddressesRequestCodec : Codec UnassignIpv6AddressesRequest
unassignIpv6AddressesRequestCodec =
    Codec.object UnassignIpv6AddressesRequest
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses ipv6AddressListCodec
        |> Codec.buildObject


{-| Codec for TunnelOptionsList. -}
tunnelOptionsListCodec : Codec TunnelOptionsList
tunnelOptionsListCodec =
    Codec.list vpnTunnelOptionsSpecificationCodec


{-| Codec for TransportProtocol. -}
transportProtocolCodec : Codec TransportProtocol
transportProtocolCodec =
    Codec.build (Enum.encoder transportProtocol) (Enum.decoder transportProtocol)


{-| Codec for TransitGatewayVpcAttachmentOptions. -}
transitGatewayVpcAttachmentOptionsCodec : Codec TransitGatewayVpcAttachmentOptions
transitGatewayVpcAttachmentOptionsCodec =
    Codec.object TransitGatewayVpcAttachmentOptions
        |> Codec.field "Ipv6Support" .ipv6Support ipv6SupportValueCodec
        |> Codec.field "DnsSupport" .dnsSupport dnsSupportValueCodec
        |> Codec.buildObject


{-| Codec for TransitGatewayVpcAttachmentList. -}
transitGatewayVpcAttachmentListCodec : Codec TransitGatewayVpcAttachmentList
transitGatewayVpcAttachmentListCodec =
    Codec.list transitGatewayVpcAttachmentCodec


{-| Codec for TransitGatewayVpcAttachment. -}
transitGatewayVpcAttachmentCodec : Codec TransitGatewayVpcAttachment
transitGatewayVpcAttachmentCodec =
    Codec.object TransitGatewayVpcAttachment
        |> Codec.field "VpcOwnerId" .vpcOwnerId Codec.string
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "SubnetIds" .subnetIds valueStringListCodec
        |> Codec.field "State" .state transitGatewayAttachmentStateCodec
        |> Codec.field "Options" .options transitGatewayVpcAttachmentOptionsCodec
        |> Codec.field "CreationTime" .creationTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for TransitGatewayState. -}
transitGatewayStateCodec : Codec TransitGatewayState
transitGatewayStateCodec =
    Codec.build (Enum.encoder transitGatewayState) (Enum.decoder transitGatewayState)


{-| Codec for TransitGatewayRouteType. -}
transitGatewayRouteTypeCodec : Codec TransitGatewayRouteType
transitGatewayRouteTypeCodec =
    Codec.build (Enum.encoder transitGatewayRouteType) (Enum.decoder transitGatewayRouteType)


{-| Codec for TransitGatewayRouteTableState. -}
transitGatewayRouteTableStateCodec : Codec TransitGatewayRouteTableState
transitGatewayRouteTableStateCodec =
    Codec.build (Enum.encoder transitGatewayRouteTableState) (Enum.decoder transitGatewayRouteTableState)


{-| Codec for TransitGatewayRouteTablePropagationList. -}
transitGatewayRouteTablePropagationListCodec : Codec TransitGatewayRouteTablePropagationList
transitGatewayRouteTablePropagationListCodec =
    Codec.list transitGatewayRouteTablePropagationCodec


{-| Codec for TransitGatewayRouteTablePropagation. -}
transitGatewayRouteTablePropagationCodec : Codec TransitGatewayRouteTablePropagation
transitGatewayRouteTablePropagationCodec =
    Codec.object TransitGatewayRouteTablePropagation
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "State" .state transitGatewayPropagationStateCodec
        |> Codec.field "ResourceType" .resourceType transitGatewayAttachmentResourceTypeCodec
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.buildObject


{-| Codec for TransitGatewayRouteTableList. -}
transitGatewayRouteTableListCodec : Codec TransitGatewayRouteTableList
transitGatewayRouteTableListCodec =
    Codec.list transitGatewayRouteTableCodec


{-| Codec for TransitGatewayRouteTableIdStringList. -}
transitGatewayRouteTableIdStringListCodec : Codec TransitGatewayRouteTableIdStringList
transitGatewayRouteTableIdStringListCodec =
    Codec.list Codec.string


{-| Codec for TransitGatewayRouteTableAssociationList. -}
transitGatewayRouteTableAssociationListCodec : Codec TransitGatewayRouteTableAssociationList
transitGatewayRouteTableAssociationListCodec =
    Codec.list transitGatewayRouteTableAssociationCodec


{-| Codec for TransitGatewayRouteTableAssociation. -}
transitGatewayRouteTableAssociationCodec : Codec TransitGatewayRouteTableAssociation
transitGatewayRouteTableAssociationCodec =
    Codec.object TransitGatewayRouteTableAssociation
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "State" .state transitGatewayAssociationStateCodec
        |> Codec.field "ResourceType" .resourceType transitGatewayAttachmentResourceTypeCodec
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.buildObject


{-| Codec for TransitGatewayRouteTable. -}
transitGatewayRouteTableCodec : Codec TransitGatewayRouteTable
transitGatewayRouteTableCodec =
    Codec.object TransitGatewayRouteTable
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state transitGatewayRouteTableStateCodec
        |> Codec.field "DefaultPropagationRouteTable" .defaultPropagationRouteTable Codec.bool
        |> Codec.field "DefaultAssociationRouteTable" .defaultAssociationRouteTable Codec.bool
        |> Codec.field "CreationTime" .creationTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for TransitGatewayRouteState. -}
transitGatewayRouteStateCodec : Codec TransitGatewayRouteState
transitGatewayRouteStateCodec =
    Codec.build (Enum.encoder transitGatewayRouteState) (Enum.decoder transitGatewayRouteState)


{-| Codec for TransitGatewayRouteList. -}
transitGatewayRouteListCodec : Codec TransitGatewayRouteList
transitGatewayRouteListCodec =
    Codec.list transitGatewayRouteCodec


{-| Codec for TransitGatewayRouteAttachmentList. -}
transitGatewayRouteAttachmentListCodec : Codec TransitGatewayRouteAttachmentList
transitGatewayRouteAttachmentListCodec =
    Codec.list transitGatewayRouteAttachmentCodec


{-| Codec for TransitGatewayRouteAttachment. -}
transitGatewayRouteAttachmentCodec : Codec TransitGatewayRouteAttachment
transitGatewayRouteAttachmentCodec =
    Codec.object TransitGatewayRouteAttachment
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "ResourceType" .resourceType transitGatewayAttachmentResourceTypeCodec
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.buildObject


{-| Codec for TransitGatewayRoute. -}
transitGatewayRouteCodec : Codec TransitGatewayRoute
transitGatewayRouteCodec =
    Codec.object TransitGatewayRoute
        |> Codec.field "Type" .type_ transitGatewayRouteTypeCodec
        |> Codec.field "TransitGatewayAttachments" .transitGatewayAttachments transitGatewayRouteAttachmentListCodec
        |> Codec.field "State" .state transitGatewayRouteStateCodec
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for TransitGatewayRequestOptions. -}
transitGatewayRequestOptionsCodec : Codec TransitGatewayRequestOptions
transitGatewayRequestOptionsCodec =
    Codec.object TransitGatewayRequestOptions
        |> Codec.field "VpnEcmpSupport" .vpnEcmpSupport vpnEcmpSupportValueCodec
        |> Codec.field "DnsSupport" .dnsSupport dnsSupportValueCodec
        |> Codec.field
            "DefaultRouteTablePropagation"
            .defaultRouteTablePropagation
            defaultRouteTablePropagationValueCodec
        |> Codec.field
            "DefaultRouteTableAssociation"
            .defaultRouteTableAssociation
            defaultRouteTableAssociationValueCodec
        |> Codec.field "AutoAcceptSharedAttachments" .autoAcceptSharedAttachments autoAcceptSharedAttachmentsValueCodec
        |> Codec.field "AmazonSideAsn" .amazonSideAsn Codec.int
        |> Codec.buildObject


{-| Codec for TransitGatewayPropagationState. -}
transitGatewayPropagationStateCodec : Codec TransitGatewayPropagationState
transitGatewayPropagationStateCodec =
    Codec.build (Enum.encoder transitGatewayPropagationState) (Enum.decoder transitGatewayPropagationState)


{-| Codec for TransitGatewayPropagation. -}
transitGatewayPropagationCodec : Codec TransitGatewayPropagation
transitGatewayPropagationCodec =
    Codec.object TransitGatewayPropagation
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "State" .state transitGatewayPropagationStateCodec
        |> Codec.field "ResourceType" .resourceType transitGatewayAttachmentResourceTypeCodec
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.buildObject


{-| Codec for TransitGatewayOptions. -}
transitGatewayOptionsCodec : Codec TransitGatewayOptions
transitGatewayOptionsCodec =
    Codec.object TransitGatewayOptions
        |> Codec.field "VpnEcmpSupport" .vpnEcmpSupport vpnEcmpSupportValueCodec
        |> Codec.field "PropagationDefaultRouteTableId" .propagationDefaultRouteTableId Codec.string
        |> Codec.field "DnsSupport" .dnsSupport dnsSupportValueCodec
        |> Codec.field
            "DefaultRouteTablePropagation"
            .defaultRouteTablePropagation
            defaultRouteTablePropagationValueCodec
        |> Codec.field
            "DefaultRouteTableAssociation"
            .defaultRouteTableAssociation
            defaultRouteTableAssociationValueCodec
        |> Codec.field "AutoAcceptSharedAttachments" .autoAcceptSharedAttachments autoAcceptSharedAttachmentsValueCodec
        |> Codec.field "AssociationDefaultRouteTableId" .associationDefaultRouteTableId Codec.string
        |> Codec.field "AmazonSideAsn" .amazonSideAsn Codec.int
        |> Codec.buildObject


{-| Codec for TransitGatewayMaxResults. -}
transitGatewayMaxResultsCodec : Codec TransitGatewayMaxResults
transitGatewayMaxResultsCodec =
    Codec.build (Refined.encoder transitGatewayMaxResults) (Refined.decoder transitGatewayMaxResults)


{-| Codec for TransitGatewayList. -}
transitGatewayListCodec : Codec TransitGatewayList
transitGatewayListCodec =
    Codec.list transitGatewayCodec


{-| Codec for TransitGatewayIdStringList. -}
transitGatewayIdStringListCodec : Codec TransitGatewayIdStringList
transitGatewayIdStringListCodec =
    Codec.list Codec.string


{-| Codec for TransitGatewayAttachmentState. -}
transitGatewayAttachmentStateCodec : Codec TransitGatewayAttachmentState
transitGatewayAttachmentStateCodec =
    Codec.build (Enum.encoder transitGatewayAttachmentState) (Enum.decoder transitGatewayAttachmentState)


{-| Codec for TransitGatewayAttachmentResourceType. -}
transitGatewayAttachmentResourceTypeCodec : Codec TransitGatewayAttachmentResourceType
transitGatewayAttachmentResourceTypeCodec =
    Codec.build (Enum.encoder transitGatewayAttachmentResourceType) (Enum.decoder transitGatewayAttachmentResourceType)


{-| Codec for TransitGatewayAttachmentPropagationList. -}
transitGatewayAttachmentPropagationListCodec : Codec TransitGatewayAttachmentPropagationList
transitGatewayAttachmentPropagationListCodec =
    Codec.list transitGatewayAttachmentPropagationCodec


{-| Codec for TransitGatewayAttachmentPropagation. -}
transitGatewayAttachmentPropagationCodec : Codec TransitGatewayAttachmentPropagation
transitGatewayAttachmentPropagationCodec =
    Codec.object TransitGatewayAttachmentPropagation
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "State" .state transitGatewayPropagationStateCodec
        |> Codec.buildObject


{-| Codec for TransitGatewayAttachmentList. -}
transitGatewayAttachmentListCodec : Codec TransitGatewayAttachmentList
transitGatewayAttachmentListCodec =
    Codec.list transitGatewayAttachmentCodec


{-| Codec for TransitGatewayAttachmentIdStringList. -}
transitGatewayAttachmentIdStringListCodec : Codec TransitGatewayAttachmentIdStringList
transitGatewayAttachmentIdStringListCodec =
    Codec.list Codec.string


{-| Codec for TransitGatewayAttachmentAssociation. -}
transitGatewayAttachmentAssociationCodec : Codec TransitGatewayAttachmentAssociation
transitGatewayAttachmentAssociationCodec =
    Codec.object TransitGatewayAttachmentAssociation
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "State" .state transitGatewayAssociationStateCodec
        |> Codec.buildObject


{-| Codec for TransitGatewayAttachment. -}
transitGatewayAttachmentCodec : Codec TransitGatewayAttachment
transitGatewayAttachmentCodec =
    Codec.object TransitGatewayAttachment
        |> Codec.field "TransitGatewayOwnerId" .transitGatewayOwnerId Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state transitGatewayAttachmentStateCodec
        |> Codec.field "ResourceType" .resourceType transitGatewayAttachmentResourceTypeCodec
        |> Codec.field "ResourceOwnerId" .resourceOwnerId Codec.string
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.field "CreationTime" .creationTime dateTimeCodec
        |> Codec.field "Association" .association transitGatewayAttachmentAssociationCodec
        |> Codec.buildObject


{-| Codec for TransitGatewayAssociationState. -}
transitGatewayAssociationStateCodec : Codec TransitGatewayAssociationState
transitGatewayAssociationStateCodec =
    Codec.build (Enum.encoder transitGatewayAssociationState) (Enum.decoder transitGatewayAssociationState)


{-| Codec for TransitGatewayAssociation. -}
transitGatewayAssociationCodec : Codec TransitGatewayAssociation
transitGatewayAssociationCodec =
    Codec.object TransitGatewayAssociation
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "State" .state transitGatewayAssociationStateCodec
        |> Codec.field "ResourceType" .resourceType transitGatewayAttachmentResourceTypeCodec
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.buildObject


{-| Codec for TransitGateway. -}
transitGatewayCodec : Codec TransitGateway
transitGatewayCodec =
    Codec.object TransitGateway
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "TransitGatewayArn" .transitGatewayArn Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state transitGatewayStateCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "Options" .options transitGatewayOptionsCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "CreationTime" .creationTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for TrafficType. -}
trafficTypeCodec : Codec TrafficType
trafficTypeCodec =
    Codec.build (Enum.encoder trafficType) (Enum.decoder trafficType)


{-| Codec for TrafficMirroringMaxResults. -}
trafficMirroringMaxResultsCodec : Codec TrafficMirroringMaxResults
trafficMirroringMaxResultsCodec =
    Codec.build (Refined.encoder trafficMirroringMaxResults) (Refined.decoder trafficMirroringMaxResults)


{-| Codec for TrafficMirrorTargetType. -}
trafficMirrorTargetTypeCodec : Codec TrafficMirrorTargetType
trafficMirrorTargetTypeCodec =
    Codec.build (Enum.encoder trafficMirrorTargetType) (Enum.decoder trafficMirrorTargetType)


{-| Codec for TrafficMirrorTargetSet. -}
trafficMirrorTargetSetCodec : Codec TrafficMirrorTargetSet
trafficMirrorTargetSetCodec =
    Codec.list trafficMirrorTargetCodec


{-| Codec for TrafficMirrorTarget. -}
trafficMirrorTargetCodec : Codec TrafficMirrorTarget
trafficMirrorTargetCodec =
    Codec.object TrafficMirrorTarget
        |> Codec.field "Type" .type_ trafficMirrorTargetTypeCodec
        |> Codec.field "TrafficMirrorTargetId" .trafficMirrorTargetId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "NetworkLoadBalancerArn" .networkLoadBalancerArn Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for TrafficMirrorSessionSet. -}
trafficMirrorSessionSetCodec : Codec TrafficMirrorSessionSet
trafficMirrorSessionSetCodec =
    Codec.list trafficMirrorSessionCodec


{-| Codec for TrafficMirrorSessionFieldList. -}
trafficMirrorSessionFieldListCodec : Codec TrafficMirrorSessionFieldList
trafficMirrorSessionFieldListCodec =
    Codec.list trafficMirrorSessionFieldCodec


{-| Codec for TrafficMirrorSessionField. -}
trafficMirrorSessionFieldCodec : Codec TrafficMirrorSessionField
trafficMirrorSessionFieldCodec =
    Codec.build (Enum.encoder trafficMirrorSessionField) (Enum.decoder trafficMirrorSessionField)


{-| Codec for TrafficMirrorSession. -}
trafficMirrorSessionCodec : Codec TrafficMirrorSession
trafficMirrorSessionCodec =
    Codec.object TrafficMirrorSession
        |> Codec.field "VirtualNetworkId" .virtualNetworkId Codec.int
        |> Codec.field "TrafficMirrorTargetId" .trafficMirrorTargetId Codec.string
        |> Codec.field "TrafficMirrorSessionId" .trafficMirrorSessionId Codec.string
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "SessionNumber" .sessionNumber Codec.int
        |> Codec.field "PacketLength" .packetLength Codec.int
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for TrafficMirrorRuleAction. -}
trafficMirrorRuleActionCodec : Codec TrafficMirrorRuleAction
trafficMirrorRuleActionCodec =
    Codec.build (Enum.encoder trafficMirrorRuleAction) (Enum.decoder trafficMirrorRuleAction)


{-| Codec for TrafficMirrorPortRangeRequest. -}
trafficMirrorPortRangeRequestCodec : Codec TrafficMirrorPortRangeRequest
trafficMirrorPortRangeRequestCodec =
    Codec.object TrafficMirrorPortRangeRequest
        |> Codec.field "ToPort" .toPort Codec.int
        |> Codec.field "FromPort" .fromPort Codec.int
        |> Codec.buildObject


{-| Codec for TrafficMirrorPortRange. -}
trafficMirrorPortRangeCodec : Codec TrafficMirrorPortRange
trafficMirrorPortRangeCodec =
    Codec.object TrafficMirrorPortRange
        |> Codec.field "ToPort" .toPort Codec.int
        |> Codec.field "FromPort" .fromPort Codec.int
        |> Codec.buildObject


{-| Codec for TrafficMirrorNetworkServiceList. -}
trafficMirrorNetworkServiceListCodec : Codec TrafficMirrorNetworkServiceList
trafficMirrorNetworkServiceListCodec =
    Codec.list trafficMirrorNetworkServiceCodec


{-| Codec for TrafficMirrorNetworkService. -}
trafficMirrorNetworkServiceCodec : Codec TrafficMirrorNetworkService
trafficMirrorNetworkServiceCodec =
    Codec.build (Enum.encoder trafficMirrorNetworkService) (Enum.decoder trafficMirrorNetworkService)


{-| Codec for TrafficMirrorFilterSet. -}
trafficMirrorFilterSetCodec : Codec TrafficMirrorFilterSet
trafficMirrorFilterSetCodec =
    Codec.list trafficMirrorFilterCodec


{-| Codec for TrafficMirrorFilterRuleList. -}
trafficMirrorFilterRuleListCodec : Codec TrafficMirrorFilterRuleList
trafficMirrorFilterRuleListCodec =
    Codec.list trafficMirrorFilterRuleCodec


{-| Codec for TrafficMirrorFilterRuleFieldList. -}
trafficMirrorFilterRuleFieldListCodec : Codec TrafficMirrorFilterRuleFieldList
trafficMirrorFilterRuleFieldListCodec =
    Codec.list trafficMirrorFilterRuleFieldCodec


{-| Codec for TrafficMirrorFilterRuleField. -}
trafficMirrorFilterRuleFieldCodec : Codec TrafficMirrorFilterRuleField
trafficMirrorFilterRuleFieldCodec =
    Codec.build (Enum.encoder trafficMirrorFilterRuleField) (Enum.decoder trafficMirrorFilterRuleField)


{-| Codec for TrafficMirrorFilterRule. -}
trafficMirrorFilterRuleCodec : Codec TrafficMirrorFilterRule
trafficMirrorFilterRuleCodec =
    Codec.object TrafficMirrorFilterRule
        |> Codec.field "TrafficMirrorFilterRuleId" .trafficMirrorFilterRuleId Codec.string
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.field "TrafficDirection" .trafficDirection trafficDirectionCodec
        |> Codec.field "SourcePortRange" .sourcePortRange trafficMirrorPortRangeCodec
        |> Codec.field "SourceCidrBlock" .sourceCidrBlock Codec.string
        |> Codec.field "RuleNumber" .ruleNumber Codec.int
        |> Codec.field "RuleAction" .ruleAction trafficMirrorRuleActionCodec
        |> Codec.field "Protocol" .protocol Codec.int
        |> Codec.field "DestinationPortRange" .destinationPortRange trafficMirrorPortRangeCodec
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for TrafficMirrorFilter. -}
trafficMirrorFilterCodec : Codec TrafficMirrorFilter
trafficMirrorFilterCodec =
    Codec.object TrafficMirrorFilter
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "NetworkServices" .networkServices trafficMirrorNetworkServiceListCodec
        |> Codec.field "IngressFilterRules" .ingressFilterRules trafficMirrorFilterRuleListCodec
        |> Codec.field "EgressFilterRules" .egressFilterRules trafficMirrorFilterRuleListCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for TrafficDirection. -}
trafficDirectionCodec : Codec TrafficDirection
trafficDirectionCodec =
    Codec.build (Enum.encoder trafficDirection) (Enum.decoder trafficDirection)


{-| Codec for TerminateInstancesResult. -}
terminateInstancesResultCodec : Codec TerminateInstancesResult
terminateInstancesResultCodec =
    Codec.object TerminateInstancesResult
        |> Codec.field "TerminatingInstances" .terminatingInstances instanceStateChangeListCodec
        |> Codec.buildObject


{-| Codec for TerminateInstancesRequest. -}
terminateInstancesRequestCodec : Codec TerminateInstancesRequest
terminateInstancesRequestCodec =
    Codec.object TerminateInstancesRequest
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for TerminateConnectionStatusSet. -}
terminateConnectionStatusSetCodec : Codec TerminateConnectionStatusSet
terminateConnectionStatusSetCodec =
    Codec.list terminateConnectionStatusCodec


{-| Codec for TerminateConnectionStatus. -}
terminateConnectionStatusCodec : Codec TerminateConnectionStatus
terminateConnectionStatusCodec =
    Codec.object TerminateConnectionStatus
        |> Codec.field "PreviousStatus" .previousStatus clientVpnConnectionStatusCodec
        |> Codec.field "CurrentStatus" .currentStatus clientVpnConnectionStatusCodec
        |> Codec.field "ConnectionId" .connectionId Codec.string
        |> Codec.buildObject


{-| Codec for TerminateClientVpnConnectionsResult. -}
terminateClientVpnConnectionsResultCodec : Codec TerminateClientVpnConnectionsResult
terminateClientVpnConnectionsResultCodec =
    Codec.object TerminateClientVpnConnectionsResult
        |> Codec.field "Username" .username Codec.string
        |> Codec.field "ConnectionStatuses" .connectionStatuses terminateConnectionStatusSetCodec
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for TerminateClientVpnConnectionsRequest. -}
terminateClientVpnConnectionsRequestCodec : Codec TerminateClientVpnConnectionsRequest
terminateClientVpnConnectionsRequestCodec =
    Codec.object TerminateClientVpnConnectionsRequest
        |> Codec.field "Username" .username Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ConnectionId" .connectionId Codec.string
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for Tenancy. -}
tenancyCodec : Codec Tenancy
tenancyCodec =
    Codec.build (Enum.encoder tenancy) (Enum.decoder tenancy)


{-| Codec for TelemetryStatus. -}
telemetryStatusCodec : Codec TelemetryStatus
telemetryStatusCodec =
    Codec.build (Enum.encoder telemetryStatus) (Enum.decoder telemetryStatus)


{-| Codec for TargetReservationValueSet. -}
targetReservationValueSetCodec : Codec TargetReservationValueSet
targetReservationValueSetCodec =
    Codec.list targetReservationValueCodec


{-| Codec for TargetReservationValue. -}
targetReservationValueCodec : Codec TargetReservationValue
targetReservationValueCodec =
    Codec.object TargetReservationValue
        |> Codec.field "TargetConfiguration" .targetConfiguration targetConfigurationCodec
        |> Codec.field "ReservationValue" .reservationValue reservationValueCodec
        |> Codec.buildObject


{-| Codec for TargetNetworkSet. -}
targetNetworkSetCodec : Codec TargetNetworkSet
targetNetworkSetCodec =
    Codec.list targetNetworkCodec


{-| Codec for TargetNetwork. -}
targetNetworkCodec : Codec TargetNetwork
targetNetworkCodec =
    Codec.object TargetNetwork
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "TargetNetworkId" .targetNetworkId Codec.string
        |> Codec.field "Status" .status associationStatusCodec
        |> Codec.field "SecurityGroups" .securityGroups valueStringListCodec
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for TargetGroupsConfig. -}
targetGroupsConfigCodec : Codec TargetGroupsConfig
targetGroupsConfigCodec =
    Codec.object TargetGroupsConfig |> Codec.field "TargetGroups" .targetGroups targetGroupsCodec |> Codec.buildObject


{-| Codec for TargetGroups. -}
targetGroupsCodec : Codec TargetGroups
targetGroupsCodec =
    Codec.list targetGroupCodec


{-| Codec for TargetGroup. -}
targetGroupCodec : Codec TargetGroup
targetGroupCodec =
    Codec.object TargetGroup |> Codec.field "Arn" .arn Codec.string |> Codec.buildObject


{-| Codec for TargetConfigurationRequestSet. -}
targetConfigurationRequestSetCodec : Codec TargetConfigurationRequestSet
targetConfigurationRequestSetCodec =
    Codec.list targetConfigurationRequestCodec


{-| Codec for TargetConfigurationRequest. -}
targetConfigurationRequestCodec : Codec TargetConfigurationRequest
targetConfigurationRequestCodec =
    Codec.object TargetConfigurationRequest
        |> Codec.field "OfferingId" .offeringId Codec.string
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.buildObject


{-| Codec for TargetConfiguration. -}
targetConfigurationCodec : Codec TargetConfiguration
targetConfigurationCodec =
    Codec.object TargetConfiguration
        |> Codec.field "OfferingId" .offeringId Codec.string
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.buildObject


{-| Codec for TargetCapacitySpecificationRequest. -}
targetCapacitySpecificationRequestCodec : Codec TargetCapacitySpecificationRequest
targetCapacitySpecificationRequestCodec =
    Codec.object TargetCapacitySpecificationRequest
        |> Codec.field "TotalTargetCapacity" .totalTargetCapacity Codec.int
        |> Codec.field "SpotTargetCapacity" .spotTargetCapacity Codec.int
        |> Codec.field "OnDemandTargetCapacity" .onDemandTargetCapacity Codec.int
        |> Codec.field "DefaultTargetCapacityType" .defaultTargetCapacityType defaultTargetCapacityTypeCodec
        |> Codec.buildObject


{-| Codec for TargetCapacitySpecification. -}
targetCapacitySpecificationCodec : Codec TargetCapacitySpecification
targetCapacitySpecificationCodec =
    Codec.object TargetCapacitySpecification
        |> Codec.field "TotalTargetCapacity" .totalTargetCapacity Codec.int
        |> Codec.field "SpotTargetCapacity" .spotTargetCapacity Codec.int
        |> Codec.field "OnDemandTargetCapacity" .onDemandTargetCapacity Codec.int
        |> Codec.field "DefaultTargetCapacityType" .defaultTargetCapacityType defaultTargetCapacityTypeCodec
        |> Codec.buildObject


{-| Codec for TagSpecificationList. -}
tagSpecificationListCodec : Codec TagSpecificationList
tagSpecificationListCodec =
    Codec.list tagSpecificationCodec


{-| Codec for TagSpecification. -}
tagSpecificationCodec : Codec TagSpecification
tagSpecificationCodec =
    Codec.object TagSpecification
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "ResourceType" .resourceType resourceTypeCodec
        |> Codec.buildObject


{-| Codec for TagList. -}
tagListCodec : Codec TagList
tagListCodec =
    Codec.list tagCodec


{-| Codec for TagDescriptionList. -}
tagDescriptionListCodec : Codec TagDescriptionList
tagDescriptionListCodec =
    Codec.list tagDescriptionCodec


{-| Codec for TagDescription. -}
tagDescriptionCodec : Codec TagDescription
tagDescriptionCodec =
    Codec.object TagDescription
        |> Codec.field "Value" .value Codec.string
        |> Codec.field "ResourceType" .resourceType resourceTypeCodec
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.field "Key" .key Codec.string
        |> Codec.buildObject


{-| Codec for Tag. -}
tagCodec : Codec Tag
tagCodec =
    Codec.object Tag
        |> Codec.field "Value" .value Codec.string
        |> Codec.field "Key" .key Codec.string
        |> Codec.buildObject


{-| Codec for SummaryStatus. -}
summaryStatusCodec : Codec SummaryStatus
summaryStatusCodec =
    Codec.build (Enum.encoder summaryStatus) (Enum.decoder summaryStatus)


{-| Codec for SuccessfulInstanceCreditSpecificationSet. -}
successfulInstanceCreditSpecificationSetCodec : Codec SuccessfulInstanceCreditSpecificationSet
successfulInstanceCreditSpecificationSetCodec =
    Codec.list successfulInstanceCreditSpecificationItemCodec


{-| Codec for SuccessfulInstanceCreditSpecificationItem. -}
successfulInstanceCreditSpecificationItemCodec : Codec SuccessfulInstanceCreditSpecificationItem
successfulInstanceCreditSpecificationItemCodec =
    Codec.object SuccessfulInstanceCreditSpecificationItem
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.buildObject


{-| Codec for SubnetState. -}
subnetStateCodec : Codec SubnetState
subnetStateCodec =
    Codec.build (Enum.encoder subnetState) (Enum.decoder subnetState)


{-| Codec for SubnetList. -}
subnetListCodec : Codec SubnetList
subnetListCodec =
    Codec.list subnetCodec


{-| Codec for SubnetIpv6CidrBlockAssociationSet. -}
subnetIpv6CidrBlockAssociationSetCodec : Codec SubnetIpv6CidrBlockAssociationSet
subnetIpv6CidrBlockAssociationSetCodec =
    Codec.list subnetIpv6CidrBlockAssociationCodec


{-| Codec for SubnetIpv6CidrBlockAssociation. -}
subnetIpv6CidrBlockAssociationCodec : Codec SubnetIpv6CidrBlockAssociation
subnetIpv6CidrBlockAssociationCodec =
    Codec.object SubnetIpv6CidrBlockAssociation
        |> Codec.field "Ipv6CidrBlockState" .ipv6CidrBlockState subnetCidrBlockStateCodec
        |> Codec.field "Ipv6CidrBlock" .ipv6CidrBlock Codec.string
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for SubnetIdStringList. -}
subnetIdStringListCodec : Codec SubnetIdStringList
subnetIdStringListCodec =
    Codec.list Codec.string


{-| Codec for SubnetCidrBlockStateCode. -}
subnetCidrBlockStateCodeCodec : Codec SubnetCidrBlockStateCode
subnetCidrBlockStateCodeCodec =
    Codec.build (Enum.encoder subnetCidrBlockStateCode) (Enum.decoder subnetCidrBlockStateCode)


{-| Codec for SubnetCidrBlockState. -}
subnetCidrBlockStateCodec : Codec SubnetCidrBlockState
subnetCidrBlockStateCodec =
    Codec.object SubnetCidrBlockState
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "State" .state subnetCidrBlockStateCodeCodec
        |> Codec.buildObject


{-| Codec for Subnet. -}
subnetCodec : Codec Subnet
subnetCodec =
    Codec.object Subnet
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SubnetArn" .subnetArn Codec.string
        |> Codec.field "State" .state subnetStateCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "MapPublicIpOnLaunch" .mapPublicIpOnLaunch Codec.bool
        |> Codec.field "Ipv6CidrBlockAssociationSet" .ipv6CidrBlockAssociationSet subnetIpv6CidrBlockAssociationSetCodec
        |> Codec.field "DefaultForAz" .defaultForAz Codec.bool
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.field "AvailableIpAddressCount" .availableIpAddressCount Codec.int
        |> Codec.field "AvailabilityZoneId" .availabilityZoneId Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "AssignIpv6AddressOnCreation" .assignIpv6AddressOnCreation Codec.bool
        |> Codec.buildObject


{-| Codec for String_. -}
stringCodec : Codec String_
stringCodec =
    Codec.string


{-| Codec for StorageLocation. -}
storageLocationCodec : Codec StorageLocation
storageLocationCodec =
    Codec.object StorageLocation
        |> Codec.field "Key" .key Codec.string
        |> Codec.field "Bucket" .bucket Codec.string
        |> Codec.buildObject


{-| Codec for Storage. -}
storageCodec : Codec Storage
storageCodec =
    Codec.object Storage |> Codec.field "S3" .s3 s3StorageCodec |> Codec.buildObject


{-| Codec for StopInstancesResult. -}
stopInstancesResultCodec : Codec StopInstancesResult
stopInstancesResultCodec =
    Codec.object StopInstancesResult
        |> Codec.field "StoppingInstances" .stoppingInstances instanceStateChangeListCodec
        |> Codec.buildObject


{-| Codec for StopInstancesRequest. -}
stopInstancesRequestCodec : Codec StopInstancesRequest
stopInstancesRequestCodec =
    Codec.object StopInstancesRequest
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "Hibernate" .hibernate Codec.bool
        |> Codec.field "Force" .force Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for StatusType. -}
statusTypeCodec : Codec StatusType
statusTypeCodec =
    Codec.build (Enum.encoder statusType) (Enum.decoder statusType)


{-| Codec for StatusName. -}
statusNameCodec : Codec StatusName
statusNameCodec =
    Codec.build (Enum.encoder statusName) (Enum.decoder statusName)


{-| Codec for Status. -}
statusCodec : Codec Status
statusCodec =
    Codec.build (Enum.encoder status) (Enum.decoder status)


{-| Codec for StateReason. -}
stateReasonCodec : Codec StateReason
stateReasonCodec =
    Codec.object StateReason
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code Codec.string
        |> Codec.buildObject


{-| Codec for State. -}
stateCodec : Codec State
stateCodec =
    Codec.build (Enum.encoder state) (Enum.decoder state)


{-| Codec for StartInstancesResult. -}
startInstancesResultCodec : Codec StartInstancesResult
startInstancesResultCodec =
    Codec.object StartInstancesResult
        |> Codec.field "StartingInstances" .startingInstances instanceStateChangeListCodec
        |> Codec.buildObject


{-| Codec for StartInstancesRequest. -}
startInstancesRequestCodec : Codec StartInstancesRequest
startInstancesRequestCodec =
    Codec.object StartInstancesRequest
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AdditionalInfo" .additionalInfo Codec.string
        |> Codec.buildObject


{-| Codec for StaleSecurityGroupSet. -}
staleSecurityGroupSetCodec : Codec StaleSecurityGroupSet
staleSecurityGroupSetCodec =
    Codec.list staleSecurityGroupCodec


{-| Codec for StaleSecurityGroup. -}
staleSecurityGroupCodec : Codec StaleSecurityGroup
staleSecurityGroupCodec =
    Codec.object StaleSecurityGroup
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "StaleIpPermissionsEgress" .staleIpPermissionsEgress staleIpPermissionSetCodec
        |> Codec.field "StaleIpPermissions" .staleIpPermissions staleIpPermissionSetCodec
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for StaleIpPermissionSet. -}
staleIpPermissionSetCodec : Codec StaleIpPermissionSet
staleIpPermissionSetCodec =
    Codec.list staleIpPermissionCodec


{-| Codec for StaleIpPermission. -}
staleIpPermissionCodec : Codec StaleIpPermission
staleIpPermissionCodec =
    Codec.object StaleIpPermission
        |> Codec.field "UserIdGroupPairs" .userIdGroupPairs userIdGroupPairSetCodec
        |> Codec.field "ToPort" .toPort Codec.int
        |> Codec.field "PrefixListIds" .prefixListIds prefixListIdSetCodec
        |> Codec.field "IpRanges" .ipRanges ipRangesCodec
        |> Codec.field "IpProtocol" .ipProtocol Codec.string
        |> Codec.field "FromPort" .fromPort Codec.int
        |> Codec.buildObject


{-| Codec for SpotPriceHistoryList. -}
spotPriceHistoryListCodec : Codec SpotPriceHistoryList
spotPriceHistoryListCodec =
    Codec.list spotPriceCodec


{-| Codec for SpotPrice. -}
spotPriceCodec : Codec SpotPrice
spotPriceCodec =
    Codec.object SpotPrice
        |> Codec.field "Timestamp" .timestamp dateTimeCodec
        |> Codec.field "SpotPrice" .spotPrice Codec.string
        |> Codec.field "ProductDescription" .productDescription riproductDescriptionCodec
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for SpotPlacement. -}
spotPlacementCodec : Codec SpotPlacement
spotPlacementCodec =
    Codec.object SpotPlacement
        |> Codec.field "Tenancy" .tenancy tenancyCodec
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for SpotOptionsRequest. -}
spotOptionsRequestCodec : Codec SpotOptionsRequest
spotOptionsRequestCodec =
    Codec.object SpotOptionsRequest
        |> Codec.field "SingleInstanceType" .singleInstanceType Codec.bool
        |> Codec.field "SingleAvailabilityZone" .singleAvailabilityZone Codec.bool
        |> Codec.field "MinTargetCapacity" .minTargetCapacity Codec.int
        |> Codec.field "MaxTotalPrice" .maxTotalPrice Codec.string
        |> Codec.field "InstancePoolsToUseCount" .instancePoolsToUseCount Codec.int
        |> Codec.field
            "InstanceInterruptionBehavior"
            .instanceInterruptionBehavior
            spotInstanceInterruptionBehaviorCodec
        |> Codec.field "AllocationStrategy" .allocationStrategy spotAllocationStrategyCodec
        |> Codec.buildObject


{-| Codec for SpotOptions. -}
spotOptionsCodec : Codec SpotOptions
spotOptionsCodec =
    Codec.object SpotOptions
        |> Codec.field "SingleInstanceType" .singleInstanceType Codec.bool
        |> Codec.field "SingleAvailabilityZone" .singleAvailabilityZone Codec.bool
        |> Codec.field "MinTargetCapacity" .minTargetCapacity Codec.int
        |> Codec.field "MaxTotalPrice" .maxTotalPrice Codec.string
        |> Codec.field "InstancePoolsToUseCount" .instancePoolsToUseCount Codec.int
        |> Codec.field
            "InstanceInterruptionBehavior"
            .instanceInterruptionBehavior
            spotInstanceInterruptionBehaviorCodec
        |> Codec.field "AllocationStrategy" .allocationStrategy spotAllocationStrategyCodec
        |> Codec.buildObject


{-| Codec for SpotMarketOptions. -}
spotMarketOptionsCodec : Codec SpotMarketOptions
spotMarketOptionsCodec =
    Codec.object SpotMarketOptions
        |> Codec.field "ValidUntil" .validUntil dateTimeCodec
        |> Codec.field "SpotInstanceType" .spotInstanceType spotInstanceTypeCodec
        |> Codec.field "MaxPrice" .maxPrice Codec.string
        |> Codec.field "InstanceInterruptionBehavior" .instanceInterruptionBehavior instanceInterruptionBehaviorCodec
        |> Codec.field "BlockDurationMinutes" .blockDurationMinutes Codec.int
        |> Codec.buildObject


{-| Codec for SpotInstanceType. -}
spotInstanceTypeCodec : Codec SpotInstanceType
spotInstanceTypeCodec =
    Codec.build (Enum.encoder spotInstanceType) (Enum.decoder spotInstanceType)


{-| Codec for SpotInstanceStatus. -}
spotInstanceStatusCodec : Codec SpotInstanceStatus
spotInstanceStatusCodec =
    Codec.object SpotInstanceStatus
        |> Codec.field "UpdateTime" .updateTime dateTimeCodec
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code Codec.string
        |> Codec.buildObject


{-| Codec for SpotInstanceStateFault. -}
spotInstanceStateFaultCodec : Codec SpotInstanceStateFault
spotInstanceStateFaultCodec =
    Codec.object SpotInstanceStateFault
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code Codec.string
        |> Codec.buildObject


{-| Codec for SpotInstanceState. -}
spotInstanceStateCodec : Codec SpotInstanceState
spotInstanceStateCodec =
    Codec.build (Enum.encoder spotInstanceState) (Enum.decoder spotInstanceState)


{-| Codec for SpotInstanceRequestList. -}
spotInstanceRequestListCodec : Codec SpotInstanceRequestList
spotInstanceRequestListCodec =
    Codec.list spotInstanceRequestCodec


{-| Codec for SpotInstanceRequestIdList. -}
spotInstanceRequestIdListCodec : Codec SpotInstanceRequestIdList
spotInstanceRequestIdListCodec =
    Codec.list Codec.string


{-| Codec for SpotInstanceRequest. -}
spotInstanceRequestCodec : Codec SpotInstanceRequest
spotInstanceRequestCodec =
    Codec.object SpotInstanceRequest
        |> Codec.field "ValidUntil" .validUntil dateTimeCodec
        |> Codec.field "ValidFrom" .validFrom dateTimeCodec
        |> Codec.field "Type" .type_ spotInstanceTypeCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "Status" .status spotInstanceStatusCodec
        |> Codec.field "State" .state spotInstanceStateCodec
        |> Codec.field "SpotPrice" .spotPrice Codec.string
        |> Codec.field "SpotInstanceRequestId" .spotInstanceRequestId Codec.string
        |> Codec.field "ProductDescription" .productDescription riproductDescriptionCodec
        |> Codec.field "LaunchedAvailabilityZone" .launchedAvailabilityZone Codec.string
        |> Codec.field "LaunchSpecification" .launchSpecification launchSpecificationCodec
        |> Codec.field "LaunchGroup" .launchGroup Codec.string
        |> Codec.field "InstanceInterruptionBehavior" .instanceInterruptionBehavior instanceInterruptionBehaviorCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Fault" .fault spotInstanceStateFaultCodec
        |> Codec.field "CreateTime" .createTime dateTimeCodec
        |> Codec.field "BlockDurationMinutes" .blockDurationMinutes Codec.int
        |> Codec.field "AvailabilityZoneGroup" .availabilityZoneGroup Codec.string
        |> Codec.field "ActualBlockHourlyPrice" .actualBlockHourlyPrice Codec.string
        |> Codec.buildObject


{-| Codec for SpotInstanceInterruptionBehavior. -}
spotInstanceInterruptionBehaviorCodec : Codec SpotInstanceInterruptionBehavior
spotInstanceInterruptionBehaviorCodec =
    Codec.build (Enum.encoder spotInstanceInterruptionBehavior) (Enum.decoder spotInstanceInterruptionBehavior)


{-| Codec for SpotFleetTagSpecificationList. -}
spotFleetTagSpecificationListCodec : Codec SpotFleetTagSpecificationList
spotFleetTagSpecificationListCodec =
    Codec.list spotFleetTagSpecificationCodec


{-| Codec for SpotFleetTagSpecification. -}
spotFleetTagSpecificationCodec : Codec SpotFleetTagSpecification
spotFleetTagSpecificationCodec =
    Codec.object SpotFleetTagSpecification
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "ResourceType" .resourceType resourceTypeCodec
        |> Codec.buildObject


{-| Codec for SpotFleetRequestConfigSet. -}
spotFleetRequestConfigSetCodec : Codec SpotFleetRequestConfigSet
spotFleetRequestConfigSetCodec =
    Codec.list spotFleetRequestConfigCodec


{-| Codec for SpotFleetRequestConfigData. -}
spotFleetRequestConfigDataCodec : Codec SpotFleetRequestConfigData
spotFleetRequestConfigDataCodec =
    Codec.object SpotFleetRequestConfigData
        |> Codec.field "ValidUntil" .validUntil dateTimeCodec
        |> Codec.field "ValidFrom" .validFrom dateTimeCodec
        |> Codec.field "Type" .type_ fleetTypeCodec
        |> Codec.field "TerminateInstancesWithExpiration" .terminateInstancesWithExpiration Codec.bool
        |> Codec.field "TargetCapacity" .targetCapacity Codec.int
        |> Codec.field "SpotPrice" .spotPrice Codec.string
        |> Codec.field "SpotMaxTotalPrice" .spotMaxTotalPrice Codec.string
        |> Codec.field "ReplaceUnhealthyInstances" .replaceUnhealthyInstances Codec.bool
        |> Codec.field "OnDemandTargetCapacity" .onDemandTargetCapacity Codec.int
        |> Codec.field "OnDemandMaxTotalPrice" .onDemandMaxTotalPrice Codec.string
        |> Codec.field "OnDemandFulfilledCapacity" .onDemandFulfilledCapacity Codec.float
        |> Codec.field "OnDemandAllocationStrategy" .onDemandAllocationStrategy onDemandAllocationStrategyCodec
        |> Codec.field "LoadBalancersConfig" .loadBalancersConfig loadBalancersConfigCodec
        |> Codec.field "LaunchTemplateConfigs" .launchTemplateConfigs launchTemplateConfigListCodec
        |> Codec.field "LaunchSpecifications" .launchSpecifications launchSpecsListCodec
        |> Codec.field "InstancePoolsToUseCount" .instancePoolsToUseCount Codec.int
        |> Codec.field "InstanceInterruptionBehavior" .instanceInterruptionBehavior instanceInterruptionBehaviorCodec
        |> Codec.field "IamFleetRole" .iamFleetRole Codec.string
        |> Codec.field "FulfilledCapacity" .fulfilledCapacity Codec.float
        |> Codec.field
            "ExcessCapacityTerminationPolicy"
            .excessCapacityTerminationPolicy
            excessCapacityTerminationPolicyCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "AllocationStrategy" .allocationStrategy allocationStrategyCodec
        |> Codec.buildObject


{-| Codec for SpotFleetRequestConfig. -}
spotFleetRequestConfigCodec : Codec SpotFleetRequestConfig
spotFleetRequestConfigCodec =
    Codec.object SpotFleetRequestConfig
        |> Codec.field "SpotFleetRequestState" .spotFleetRequestState batchStateCodec
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.field "SpotFleetRequestConfig" .spotFleetRequestConfig spotFleetRequestConfigDataCodec
        |> Codec.field "CreateTime" .createTime dateTimeCodec
        |> Codec.field "ActivityStatus" .activityStatus activityStatusCodec
        |> Codec.buildObject


{-| Codec for SpotFleetMonitoring. -}
spotFleetMonitoringCodec : Codec SpotFleetMonitoring
spotFleetMonitoringCodec =
    Codec.object SpotFleetMonitoring |> Codec.field "Enabled" .enabled Codec.bool |> Codec.buildObject


{-| Codec for SpotFleetLaunchSpecification. -}
spotFleetLaunchSpecificationCodec : Codec SpotFleetLaunchSpecification
spotFleetLaunchSpecificationCodec =
    Codec.object SpotFleetLaunchSpecification
        |> Codec.field "WeightedCapacity" .weightedCapacity Codec.float
        |> Codec.field "UserData" .userData Codec.string
        |> Codec.field "TagSpecifications" .tagSpecifications spotFleetTagSpecificationListCodec
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SpotPrice" .spotPrice Codec.string
        |> Codec.field "SecurityGroups" .securityGroups groupIdentifierListCodec
        |> Codec.field "RamdiskId" .ramdiskId Codec.string
        |> Codec.field "Placement" .placement spotPlacementCodec
        |> Codec.field "NetworkInterfaces" .networkInterfaces instanceNetworkInterfaceSpecificationListCodec
        |> Codec.field "Monitoring" .monitoring spotFleetMonitoringCodec
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile iamInstanceProfileSpecificationCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings blockDeviceMappingListCodec
        |> Codec.field "AddressingType" .addressingType Codec.string
        |> Codec.buildObject


{-| Codec for SpotDatafeedSubscription. -}
spotDatafeedSubscriptionCodec : Codec SpotDatafeedSubscription
spotDatafeedSubscriptionCodec =
    Codec.object SpotDatafeedSubscription
        |> Codec.field "State" .state datafeedSubscriptionStateCodec
        |> Codec.field "Prefix" .prefix Codec.string
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "Fault" .fault spotInstanceStateFaultCodec
        |> Codec.field "Bucket" .bucket Codec.string
        |> Codec.buildObject


{-| Codec for SpotAllocationStrategy. -}
spotAllocationStrategyCodec : Codec SpotAllocationStrategy
spotAllocationStrategyCodec =
    Codec.build (Enum.encoder spotAllocationStrategy) (Enum.decoder spotAllocationStrategy)


{-| Codec for SnapshotTaskDetail. -}
snapshotTaskDetailCodec : Codec SnapshotTaskDetail
snapshotTaskDetailCodec =
    Codec.object SnapshotTaskDetail
        |> Codec.field "UserBucket" .userBucket userBucketDetailsCodec
        |> Codec.field "Url" .url Codec.string
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "Status" .status Codec.string
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "Progress" .progress Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Format" .format Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DiskImageSize" .diskImageSize Codec.float
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for SnapshotState. -}
snapshotStateCodec : Codec SnapshotState
snapshotStateCodec =
    Codec.build (Enum.encoder snapshotState) (Enum.decoder snapshotState)


{-| Codec for SnapshotSet. -}
snapshotSetCodec : Codec SnapshotSet
snapshotSetCodec =
    Codec.list snapshotInfoCodec


{-| Codec for SnapshotList. -}
snapshotListCodec : Codec SnapshotList
snapshotListCodec =
    Codec.list snapshotCodec


{-| Codec for SnapshotInfo. -}
snapshotInfoCodec : Codec SnapshotInfo
snapshotInfoCodec =
    Codec.object SnapshotInfo
        |> Codec.field "VolumeSize" .volumeSize Codec.int
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state snapshotStateCodec
        |> Codec.field "StartTime" .startTime millisecondDateTimeCodec
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "Progress" .progress Codec.string
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for SnapshotIdStringList. -}
snapshotIdStringListCodec : Codec SnapshotIdStringList
snapshotIdStringListCodec =
    Codec.list Codec.string


{-| Codec for SnapshotDiskContainer. -}
snapshotDiskContainerCodec : Codec SnapshotDiskContainer
snapshotDiskContainerCodec =
    Codec.object SnapshotDiskContainer
        |> Codec.field "UserBucket" .userBucket userBucketCodec
        |> Codec.field "Url" .url Codec.string
        |> Codec.field "Format" .format Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for SnapshotDetailList. -}
snapshotDetailListCodec : Codec SnapshotDetailList
snapshotDetailListCodec =
    Codec.list snapshotDetailCodec


{-| Codec for SnapshotDetail. -}
snapshotDetailCodec : Codec SnapshotDetail
snapshotDetailCodec =
    Codec.object SnapshotDetail
        |> Codec.field "UserBucket" .userBucket userBucketDetailsCodec
        |> Codec.field "Url" .url Codec.string
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "Status" .status Codec.string
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "Progress" .progress Codec.string
        |> Codec.field "Format" .format Codec.string
        |> Codec.field "DiskImageSize" .diskImageSize Codec.float
        |> Codec.field "DeviceName" .deviceName Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for SnapshotAttributeName. -}
snapshotAttributeNameCodec : Codec SnapshotAttributeName
snapshotAttributeNameCodec =
    Codec.build (Enum.encoder snapshotAttributeName) (Enum.decoder snapshotAttributeName)


{-| Codec for Snapshot. -}
snapshotCodec : Codec Snapshot
snapshotCodec =
    Codec.object Snapshot
        |> Codec.field "VolumeSize" .volumeSize Codec.int
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "StateMessage" .stateMessage Codec.string
        |> Codec.field "State" .state snapshotStateCodec
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "Progress" .progress Codec.string
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "OwnerAlias" .ownerAlias Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "DataEncryptionKeyId" .dataEncryptionKeyId Codec.string
        |> Codec.buildObject


{-| Codec for SlotStartTimeRangeRequest. -}
slotStartTimeRangeRequestCodec : Codec SlotStartTimeRangeRequest
slotStartTimeRangeRequestCodec =
    Codec.object SlotStartTimeRangeRequest
        |> Codec.field "LatestTime" .latestTime dateTimeCodec
        |> Codec.field "EarliestTime" .earliestTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for SlotDateTimeRangeRequest. -}
slotDateTimeRangeRequestCodec : Codec SlotDateTimeRangeRequest
slotDateTimeRangeRequestCodec =
    Codec.object SlotDateTimeRangeRequest
        |> Codec.field "LatestTime" .latestTime dateTimeCodec
        |> Codec.field "EarliestTime" .earliestTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for ShutdownBehavior. -}
shutdownBehaviorCodec : Codec ShutdownBehavior
shutdownBehaviorCodec =
    Codec.build (Enum.encoder shutdownBehavior) (Enum.decoder shutdownBehavior)


{-| Codec for ServiceTypeDetailSet. -}
serviceTypeDetailSetCodec : Codec ServiceTypeDetailSet
serviceTypeDetailSetCodec =
    Codec.list serviceTypeDetailCodec


{-| Codec for ServiceTypeDetail. -}
serviceTypeDetailCodec : Codec ServiceTypeDetail
serviceTypeDetailCodec =
    Codec.object ServiceTypeDetail |> Codec.field "ServiceType" .serviceType serviceTypeCodec |> Codec.buildObject


{-| Codec for ServiceType. -}
serviceTypeCodec : Codec ServiceType
serviceTypeCodec =
    Codec.build (Enum.encoder serviceType) (Enum.decoder serviceType)


{-| Codec for ServiceState. -}
serviceStateCodec : Codec ServiceState
serviceStateCodec =
    Codec.build (Enum.encoder serviceState) (Enum.decoder serviceState)


{-| Codec for ServiceDetailSet. -}
serviceDetailSetCodec : Codec ServiceDetailSet
serviceDetailSetCodec =
    Codec.list serviceDetailCodec


{-| Codec for ServiceDetail. -}
serviceDetailCodec : Codec ServiceDetail
serviceDetailCodec =
    Codec.object ServiceDetail
        |> Codec.field "VpcEndpointPolicySupported" .vpcEndpointPolicySupported Codec.bool
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "ServiceType" .serviceType serviceTypeDetailSetCodec
        |> Codec.field "ServiceName" .serviceName Codec.string
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "PrivateDnsName" .privateDnsName Codec.string
        |> Codec.field "Owner" .owner Codec.string
        |> Codec.field "ManagesVpcEndpoints" .managesVpcEndpoints Codec.bool
        |> Codec.field "BaseEndpointDnsNames" .baseEndpointDnsNames valueStringListCodec
        |> Codec.field "AvailabilityZones" .availabilityZones valueStringListCodec
        |> Codec.field "AcceptanceRequired" .acceptanceRequired Codec.bool
        |> Codec.buildObject


{-| Codec for ServiceConfigurationSet. -}
serviceConfigurationSetCodec : Codec ServiceConfigurationSet
serviceConfigurationSetCodec =
    Codec.list serviceConfigurationCodec


{-| Codec for ServiceConfiguration. -}
serviceConfigurationCodec : Codec ServiceConfiguration
serviceConfigurationCodec =
    Codec.object ServiceConfiguration
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "ServiceType" .serviceType serviceTypeDetailSetCodec
        |> Codec.field "ServiceState" .serviceState serviceStateCodec
        |> Codec.field "ServiceName" .serviceName Codec.string
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "PrivateDnsName" .privateDnsName Codec.string
        |> Codec.field "NetworkLoadBalancerArns" .networkLoadBalancerArns valueStringListCodec
        |> Codec.field "ManagesVpcEndpoints" .managesVpcEndpoints Codec.bool
        |> Codec.field "BaseEndpointDnsNames" .baseEndpointDnsNames valueStringListCodec
        |> Codec.field "AvailabilityZones" .availabilityZones valueStringListCodec
        |> Codec.field "AcceptanceRequired" .acceptanceRequired Codec.bool
        |> Codec.buildObject


{-| Codec for SecurityGroupStringList. -}
securityGroupStringListCodec : Codec SecurityGroupStringList
securityGroupStringListCodec =
    Codec.list Codec.string


{-| Codec for SecurityGroupReferences. -}
securityGroupReferencesCodec : Codec SecurityGroupReferences
securityGroupReferencesCodec =
    Codec.list securityGroupReferenceCodec


{-| Codec for SecurityGroupReference. -}
securityGroupReferenceCodec : Codec SecurityGroupReference
securityGroupReferenceCodec =
    Codec.object SecurityGroupReference
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "ReferencingVpcId" .referencingVpcId Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.buildObject


{-| Codec for SecurityGroupList. -}
securityGroupListCodec : Codec SecurityGroupList
securityGroupListCodec =
    Codec.list securityGroupCodec


{-| Codec for SecurityGroupIdentifier. -}
securityGroupIdentifierCodec : Codec SecurityGroupIdentifier
securityGroupIdentifierCodec =
    Codec.object SecurityGroupIdentifier
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.buildObject


{-| Codec for SecurityGroupIdStringList. -}
securityGroupIdStringListCodec : Codec SecurityGroupIdStringList
securityGroupIdStringListCodec =
    Codec.list Codec.string


{-| Codec for SecurityGroup. -}
securityGroupCodec : Codec SecurityGroup
securityGroupCodec =
    Codec.object SecurityGroup
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "IpPermissionsEgress" .ipPermissionsEgress ipPermissionListCodec
        |> Codec.field "IpPermissions" .ipPermissions ipPermissionListCodec
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for SearchTransitGatewayRoutesResult. -}
searchTransitGatewayRoutesResultCodec : Codec SearchTransitGatewayRoutesResult
searchTransitGatewayRoutesResultCodec =
    Codec.object SearchTransitGatewayRoutesResult
        |> Codec.field "Routes" .routes transitGatewayRouteListCodec
        |> Codec.field "AdditionalRoutesAvailable" .additionalRoutesAvailable Codec.bool
        |> Codec.buildObject


{-| Codec for SearchTransitGatewayRoutesRequest. -}
searchTransitGatewayRoutesRequestCodec : Codec SearchTransitGatewayRoutesRequest
searchTransitGatewayRoutesRequestCodec =
    Codec.object SearchTransitGatewayRoutesRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "MaxResults" .maxResults transitGatewayMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ScheduledInstancesSecurityGroupIdSet. -}
scheduledInstancesSecurityGroupIdSetCodec : Codec ScheduledInstancesSecurityGroupIdSet
scheduledInstancesSecurityGroupIdSetCodec =
    Codec.list Codec.string


{-| Codec for ScheduledInstancesPrivateIpAddressConfig. -}
scheduledInstancesPrivateIpAddressConfigCodec : Codec ScheduledInstancesPrivateIpAddressConfig
scheduledInstancesPrivateIpAddressConfigCodec =
    Codec.object ScheduledInstancesPrivateIpAddressConfig
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "Primary" .primary Codec.bool
        |> Codec.buildObject


{-| Codec for ScheduledInstancesPlacement. -}
scheduledInstancesPlacementCodec : Codec ScheduledInstancesPlacement
scheduledInstancesPlacementCodec =
    Codec.object ScheduledInstancesPlacement
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ScheduledInstancesNetworkInterfaceSet. -}
scheduledInstancesNetworkInterfaceSetCodec : Codec ScheduledInstancesNetworkInterfaceSet
scheduledInstancesNetworkInterfaceSetCodec =
    Codec.list scheduledInstancesNetworkInterfaceCodec


{-| Codec for ScheduledInstancesNetworkInterface. -}
scheduledInstancesNetworkInterfaceCodec : Codec ScheduledInstancesNetworkInterface
scheduledInstancesNetworkInterfaceCodec =
    Codec.object ScheduledInstancesNetworkInterface
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecondaryPrivateIpAddressCount" .secondaryPrivateIpAddressCount Codec.int
        |> Codec.field "PrivateIpAddressConfigs" .privateIpAddressConfigs privateIpAddressConfigSetCodec
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses scheduledInstancesIpv6AddressListCodec
        |> Codec.field "Ipv6AddressCount" .ipv6AddressCount Codec.int
        |> Codec.field "Groups" .groups scheduledInstancesSecurityGroupIdSetCodec
        |> Codec.field "DeviceIndex" .deviceIndex Codec.int
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AssociatePublicIpAddress" .associatePublicIpAddress Codec.bool
        |> Codec.buildObject


{-| Codec for ScheduledInstancesMonitoring. -}
scheduledInstancesMonitoringCodec : Codec ScheduledInstancesMonitoring
scheduledInstancesMonitoringCodec =
    Codec.object ScheduledInstancesMonitoring |> Codec.field "Enabled" .enabled Codec.bool |> Codec.buildObject


{-| Codec for ScheduledInstancesLaunchSpecification. -}
scheduledInstancesLaunchSpecificationCodec : Codec ScheduledInstancesLaunchSpecification
scheduledInstancesLaunchSpecificationCodec =
    Codec.object ScheduledInstancesLaunchSpecification
        |> Codec.field "UserData" .userData Codec.string
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecurityGroupIds" .securityGroupIds scheduledInstancesSecurityGroupIdSetCodec
        |> Codec.field "RamdiskId" .ramdiskId Codec.string
        |> Codec.field "Placement" .placement scheduledInstancesPlacementCodec
        |> Codec.field "NetworkInterfaces" .networkInterfaces scheduledInstancesNetworkInterfaceSetCodec
        |> Codec.field "Monitoring" .monitoring scheduledInstancesMonitoringCodec
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile scheduledInstancesIamInstanceProfileCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings scheduledInstancesBlockDeviceMappingSetCodec
        |> Codec.buildObject


{-| Codec for ScheduledInstancesIpv6AddressList. -}
scheduledInstancesIpv6AddressListCodec : Codec ScheduledInstancesIpv6AddressList
scheduledInstancesIpv6AddressListCodec =
    Codec.list scheduledInstancesIpv6AddressCodec


{-| Codec for ScheduledInstancesIpv6Address. -}
scheduledInstancesIpv6AddressCodec : Codec ScheduledInstancesIpv6Address
scheduledInstancesIpv6AddressCodec =
    Codec.object ScheduledInstancesIpv6Address
        |> Codec.field "Ipv6Address" .ipv6Address Codec.string
        |> Codec.buildObject


{-| Codec for ScheduledInstancesIamInstanceProfile. -}
scheduledInstancesIamInstanceProfileCodec : Codec ScheduledInstancesIamInstanceProfile
scheduledInstancesIamInstanceProfileCodec =
    Codec.object ScheduledInstancesIamInstanceProfile
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "Arn" .arn Codec.string
        |> Codec.buildObject


{-| Codec for ScheduledInstancesEbs. -}
scheduledInstancesEbsCodec : Codec ScheduledInstancesEbs
scheduledInstancesEbsCodec =
    Codec.object ScheduledInstancesEbs
        |> Codec.field "VolumeType" .volumeType Codec.string
        |> Codec.field "VolumeSize" .volumeSize Codec.int
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "Iops" .iops Codec.int
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.buildObject


{-| Codec for ScheduledInstancesBlockDeviceMappingSet. -}
scheduledInstancesBlockDeviceMappingSetCodec : Codec ScheduledInstancesBlockDeviceMappingSet
scheduledInstancesBlockDeviceMappingSetCodec =
    Codec.list scheduledInstancesBlockDeviceMappingCodec


{-| Codec for ScheduledInstancesBlockDeviceMapping. -}
scheduledInstancesBlockDeviceMappingCodec : Codec ScheduledInstancesBlockDeviceMapping
scheduledInstancesBlockDeviceMappingCodec =
    Codec.object ScheduledInstancesBlockDeviceMapping
        |> Codec.field "VirtualName" .virtualName Codec.string
        |> Codec.field "NoDevice" .noDevice Codec.string
        |> Codec.field "Ebs" .ebs scheduledInstancesEbsCodec
        |> Codec.field "DeviceName" .deviceName Codec.string
        |> Codec.buildObject


{-| Codec for ScheduledInstanceSet. -}
scheduledInstanceSetCodec : Codec ScheduledInstanceSet
scheduledInstanceSetCodec =
    Codec.list scheduledInstanceCodec


{-| Codec for ScheduledInstanceRecurrenceRequest. -}
scheduledInstanceRecurrenceRequestCodec : Codec ScheduledInstanceRecurrenceRequest
scheduledInstanceRecurrenceRequestCodec =
    Codec.object ScheduledInstanceRecurrenceRequest
        |> Codec.field "OccurrenceUnit" .occurrenceUnit Codec.string
        |> Codec.field "OccurrenceRelativeToEnd" .occurrenceRelativeToEnd Codec.bool
        |> Codec.field "OccurrenceDays" .occurrenceDays occurrenceDayRequestSetCodec
        |> Codec.field "Interval" .interval Codec.int
        |> Codec.field "Frequency" .frequency Codec.string
        |> Codec.buildObject


{-| Codec for ScheduledInstanceRecurrence. -}
scheduledInstanceRecurrenceCodec : Codec ScheduledInstanceRecurrence
scheduledInstanceRecurrenceCodec =
    Codec.object ScheduledInstanceRecurrence
        |> Codec.field "OccurrenceUnit" .occurrenceUnit Codec.string
        |> Codec.field "OccurrenceRelativeToEnd" .occurrenceRelativeToEnd Codec.bool
        |> Codec.field "OccurrenceDaySet" .occurrenceDaySet occurrenceDaySetCodec
        |> Codec.field "Interval" .interval Codec.int
        |> Codec.field "Frequency" .frequency Codec.string
        |> Codec.buildObject


{-| Codec for ScheduledInstanceIdRequestSet. -}
scheduledInstanceIdRequestSetCodec : Codec ScheduledInstanceIdRequestSet
scheduledInstanceIdRequestSetCodec =
    Codec.list Codec.string


{-| Codec for ScheduledInstanceAvailabilitySet. -}
scheduledInstanceAvailabilitySetCodec : Codec ScheduledInstanceAvailabilitySet
scheduledInstanceAvailabilitySetCodec =
    Codec.list scheduledInstanceAvailabilityCodec


{-| Codec for ScheduledInstanceAvailability. -}
scheduledInstanceAvailabilityCodec : Codec ScheduledInstanceAvailability
scheduledInstanceAvailabilityCodec =
    Codec.object ScheduledInstanceAvailability
        |> Codec.field "TotalScheduledInstanceHours" .totalScheduledInstanceHours Codec.int
        |> Codec.field "SlotDurationInHours" .slotDurationInHours Codec.int
        |> Codec.field "Recurrence" .recurrence scheduledInstanceRecurrenceCodec
        |> Codec.field "PurchaseToken" .purchaseToken Codec.string
        |> Codec.field "Platform" .platform Codec.string
        |> Codec.field "NetworkPlatform" .networkPlatform Codec.string
        |> Codec.field "MinTermDurationInDays" .minTermDurationInDays Codec.int
        |> Codec.field "MaxTermDurationInDays" .maxTermDurationInDays Codec.int
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "HourlyPrice" .hourlyPrice Codec.string
        |> Codec.field "FirstSlotStartTime" .firstSlotStartTime dateTimeCodec
        |> Codec.field "AvailableInstanceCount" .availableInstanceCount Codec.int
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ScheduledInstance. -}
scheduledInstanceCodec : Codec ScheduledInstance
scheduledInstanceCodec =
    Codec.object ScheduledInstance
        |> Codec.field "TotalScheduledInstanceHours" .totalScheduledInstanceHours Codec.int
        |> Codec.field "TermStartDate" .termStartDate dateTimeCodec
        |> Codec.field "TermEndDate" .termEndDate dateTimeCodec
        |> Codec.field "SlotDurationInHours" .slotDurationInHours Codec.int
        |> Codec.field "ScheduledInstanceId" .scheduledInstanceId Codec.string
        |> Codec.field "Recurrence" .recurrence scheduledInstanceRecurrenceCodec
        |> Codec.field "PreviousSlotEndTime" .previousSlotEndTime dateTimeCodec
        |> Codec.field "Platform" .platform Codec.string
        |> Codec.field "NextSlotStartTime" .nextSlotStartTime dateTimeCodec
        |> Codec.field "NetworkPlatform" .networkPlatform Codec.string
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "HourlyPrice" .hourlyPrice Codec.string
        |> Codec.field "CreateDate" .createDate dateTimeCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for S3Storage. -}
s3StorageCodec : Codec S3Storage
s3StorageCodec =
    Codec.object S3Storage
        |> Codec.field "UploadPolicySignature" .uploadPolicySignature Codec.string
        |> Codec.field "UploadPolicy" .uploadPolicy Codec.string
        |> Codec.field "Prefix" .prefix Codec.string
        |> Codec.field "Bucket" .bucket Codec.string
        |> Codec.field "AWSAccessKeyId" .awsaccessKeyId Codec.string
        |> Codec.buildObject


{-| Codec for RunScheduledInstancesResult. -}
runScheduledInstancesResultCodec : Codec RunScheduledInstancesResult
runScheduledInstancesResultCodec =
    Codec.object RunScheduledInstancesResult
        |> Codec.field "InstanceIdSet" .instanceIdSet instanceIdSetCodec
        |> Codec.buildObject


{-| Codec for RunScheduledInstancesRequest. -}
runScheduledInstancesRequestCodec : Codec RunScheduledInstancesRequest
runScheduledInstancesRequestCodec =
    Codec.object RunScheduledInstancesRequest
        |> Codec.field "ScheduledInstanceId" .scheduledInstanceId Codec.string
        |> Codec.field "LaunchSpecification" .launchSpecification scheduledInstancesLaunchSpecificationCodec
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for RunInstancesRequest. -}
runInstancesRequestCodec : Codec RunInstancesRequest
runInstancesRequestCodec =
    Codec.object RunInstancesRequest
        |> Codec.field "UserData" .userData Codec.string
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecurityGroups" .securityGroups securityGroupStringListCodec
        |> Codec.field "SecurityGroupIds" .securityGroupIds securityGroupIdStringListCodec
        |> Codec.field "RamdiskId" .ramdiskId Codec.string
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "Placement" .placement placementCodec
        |> Codec.field "NetworkInterfaces" .networkInterfaces instanceNetworkInterfaceSpecificationListCodec
        |> Codec.field "Monitoring" .monitoring runInstancesMonitoringEnabledCodec
        |> Codec.field "MinCount" .minCount Codec.int
        |> Codec.field "MaxCount" .maxCount Codec.int
        |> Codec.field "LicenseSpecifications" .licenseSpecifications licenseSpecificationListRequestCodec
        |> Codec.field "LaunchTemplate" .launchTemplate launchTemplateSpecificationCodec
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses instanceIpv6AddressListCodec
        |> Codec.field "Ipv6AddressCount" .ipv6AddressCount Codec.int
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceMarketOptions" .instanceMarketOptions instanceMarketOptionsRequestCodec
        |> Codec.field "InstanceInitiatedShutdownBehavior" .instanceInitiatedShutdownBehavior shutdownBehaviorCodec
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile iamInstanceProfileSpecificationCodec
        |> Codec.field "HibernationOptions" .hibernationOptions hibernationOptionsRequestCodec
        |> Codec.field "ElasticInferenceAccelerators" .elasticInferenceAccelerators elasticInferenceAcceleratorsCodec
        |> Codec.field "ElasticGpuSpecification" .elasticGpuSpecification elasticGpuSpecificationsCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DisableApiTermination" .disableApiTermination Codec.bool
        |> Codec.field "CreditSpecification" .creditSpecification creditSpecificationRequestCodec
        |> Codec.field "CpuOptions" .cpuOptions cpuOptionsRequestCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field
            "CapacityReservationSpecification"
            .capacityReservationSpecification
            capacityReservationSpecificationCodec
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings blockDeviceMappingRequestListCodec
        |> Codec.field "AdditionalInfo" .additionalInfo Codec.string
        |> Codec.buildObject


{-| Codec for RunInstancesMonitoringEnabled. -}
runInstancesMonitoringEnabledCodec : Codec RunInstancesMonitoringEnabled
runInstancesMonitoringEnabledCodec =
    Codec.object RunInstancesMonitoringEnabled |> Codec.field "Enabled" .enabled Codec.bool |> Codec.buildObject


{-| Codec for RuleAction. -}
ruleActionCodec : Codec RuleAction
ruleActionCodec =
    Codec.build (Enum.encoder ruleAction) (Enum.decoder ruleAction)


{-| Codec for RouteTableList. -}
routeTableListCodec : Codec RouteTableList
routeTableListCodec =
    Codec.list routeTableCodec


{-| Codec for RouteTableAssociationList. -}
routeTableAssociationListCodec : Codec RouteTableAssociationList
routeTableAssociationListCodec =
    Codec.list routeTableAssociationCodec


{-| Codec for RouteTableAssociation. -}
routeTableAssociationCodec : Codec RouteTableAssociation
routeTableAssociationCodec =
    Codec.object RouteTableAssociation
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "RouteTableAssociationId" .routeTableAssociationId Codec.string
        |> Codec.field "Main" .main Codec.bool
        |> Codec.buildObject


{-| Codec for RouteTable. -}
routeTableCodec : Codec RouteTable
routeTableCodec =
    Codec.object RouteTable
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "Routes" .routes routeListCodec
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "PropagatingVgws" .propagatingVgws propagatingVgwListCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "Associations" .associations routeTableAssociationListCodec
        |> Codec.buildObject


{-| Codec for RouteState. -}
routeStateCodec : Codec RouteState
routeStateCodec =
    Codec.build (Enum.encoder routeState) (Enum.decoder routeState)


{-| Codec for RouteOrigin. -}
routeOriginCodec : Codec RouteOrigin
routeOriginCodec =
    Codec.build (Enum.encoder routeOrigin) (Enum.decoder routeOrigin)


{-| Codec for RouteList. -}
routeListCodec : Codec RouteList
routeListCodec =
    Codec.list routeCodec


{-| Codec for Route. -}
routeCodec : Codec Route
routeCodec =
    Codec.object Route
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "State" .state routeStateCodec
        |> Codec.field "Origin" .origin routeOriginCodec
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "NatGatewayId" .natGatewayId Codec.string
        |> Codec.field "InstanceOwnerId" .instanceOwnerId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "GatewayId" .gatewayId Codec.string
        |> Codec.field "EgressOnlyInternetGatewayId" .egressOnlyInternetGatewayId Codec.string
        |> Codec.field "DestinationPrefixListId" .destinationPrefixListId Codec.string
        |> Codec.field "DestinationIpv6CidrBlock" .destinationIpv6CidrBlock Codec.string
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for RevokeSecurityGroupIngressRequest. -}
revokeSecurityGroupIngressRequestCodec : Codec RevokeSecurityGroupIngressRequest
revokeSecurityGroupIngressRequestCodec =
    Codec.object RevokeSecurityGroupIngressRequest
        |> Codec.field "ToPort" .toPort Codec.int
        |> Codec.field "SourceSecurityGroupOwnerId" .sourceSecurityGroupOwnerId Codec.string
        |> Codec.field "SourceSecurityGroupName" .sourceSecurityGroupName Codec.string
        |> Codec.field "IpProtocol" .ipProtocol Codec.string
        |> Codec.field "IpPermissions" .ipPermissions ipPermissionListCodec
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "FromPort" .fromPort Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CidrIp" .cidrIp Codec.string
        |> Codec.buildObject


{-| Codec for RevokeSecurityGroupEgressRequest. -}
revokeSecurityGroupEgressRequestCodec : Codec RevokeSecurityGroupEgressRequest
revokeSecurityGroupEgressRequestCodec =
    Codec.object RevokeSecurityGroupEgressRequest
        |> Codec.field "ToPort" .toPort Codec.int
        |> Codec.field "SourceSecurityGroupOwnerId" .sourceSecurityGroupOwnerId Codec.string
        |> Codec.field "SourceSecurityGroupName" .sourceSecurityGroupName Codec.string
        |> Codec.field "IpProtocol" .ipProtocol Codec.string
        |> Codec.field "IpPermissions" .ipPermissions ipPermissionListCodec
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "FromPort" .fromPort Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CidrIp" .cidrIp Codec.string
        |> Codec.buildObject


{-| Codec for RevokeClientVpnIngressResult. -}
revokeClientVpnIngressResultCodec : Codec RevokeClientVpnIngressResult
revokeClientVpnIngressResultCodec =
    Codec.object RevokeClientVpnIngressResult
        |> Codec.field "Status" .status clientVpnAuthorizationRuleStatusCodec
        |> Codec.buildObject


{-| Codec for RevokeClientVpnIngressRequest. -}
revokeClientVpnIngressRequestCodec : Codec RevokeClientVpnIngressRequest
revokeClientVpnIngressRequestCodec =
    Codec.object RevokeClientVpnIngressRequest
        |> Codec.field "TargetNetworkCidr" .targetNetworkCidr Codec.string
        |> Codec.field "RevokeAllGroups" .revokeAllGroups Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "AccessGroupId" .accessGroupId Codec.string
        |> Codec.buildObject


{-| Codec for RestoreAddressToClassicResult. -}
restoreAddressToClassicResultCodec : Codec RestoreAddressToClassicResult
restoreAddressToClassicResultCodec =
    Codec.object RestoreAddressToClassicResult
        |> Codec.field "Status" .status statusCodec
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.buildObject


{-| Codec for RestoreAddressToClassicRequest. -}
restoreAddressToClassicRequestCodec : Codec RestoreAddressToClassicRequest
restoreAddressToClassicRequestCodec =
    Codec.object RestoreAddressToClassicRequest
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for RestorableByStringList. -}
restorableByStringListCodec : Codec RestorableByStringList
restorableByStringListCodec =
    Codec.list Codec.string


{-| Codec for ResponseLaunchTemplateData. -}
responseLaunchTemplateDataCodec : Codec ResponseLaunchTemplateData
responseLaunchTemplateDataCodec =
    Codec.object ResponseLaunchTemplateData
        |> Codec.field "UserData" .userData Codec.string
        |> Codec.field "TagSpecifications" .tagSpecifications launchTemplateTagSpecificationListCodec
        |> Codec.field "SecurityGroups" .securityGroups valueStringListCodec
        |> Codec.field "SecurityGroupIds" .securityGroupIds valueStringListCodec
        |> Codec.field "RamDiskId" .ramDiskId Codec.string
        |> Codec.field "Placement" .placement launchTemplatePlacementCodec
        |> Codec.field
            "NetworkInterfaces"
            .networkInterfaces
            launchTemplateInstanceNetworkInterfaceSpecificationListCodec
        |> Codec.field "Monitoring" .monitoring launchTemplatesMonitoringCodec
        |> Codec.field "LicenseSpecifications" .licenseSpecifications launchTemplateLicenseListCodec
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceMarketOptions" .instanceMarketOptions launchTemplateInstanceMarketOptionsCodec
        |> Codec.field "InstanceInitiatedShutdownBehavior" .instanceInitiatedShutdownBehavior shutdownBehaviorCodec
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile launchTemplateIamInstanceProfileSpecificationCodec
        |> Codec.field "HibernationOptions" .hibernationOptions launchTemplateHibernationOptionsCodec
        |> Codec.field
            "ElasticInferenceAccelerators"
            .elasticInferenceAccelerators
            launchTemplateElasticInferenceAcceleratorResponseListCodec
        |> Codec.field "ElasticGpuSpecifications" .elasticGpuSpecifications elasticGpuSpecificationResponseListCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "DisableApiTermination" .disableApiTermination Codec.bool
        |> Codec.field "CreditSpecification" .creditSpecification creditSpecificationCodec
        |> Codec.field "CpuOptions" .cpuOptions launchTemplateCpuOptionsCodec
        |> Codec.field
            "CapacityReservationSpecification"
            .capacityReservationSpecification
            launchTemplateCapacityReservationSpecificationResponseCodec
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings launchTemplateBlockDeviceMappingListCodec
        |> Codec.buildObject


{-| Codec for ResponseHostIdSet. -}
responseHostIdSetCodec : Codec ResponseHostIdSet
responseHostIdSetCodec =
    Codec.list Codec.string


{-| Codec for ResponseHostIdList. -}
responseHostIdListCodec : Codec ResponseHostIdList
responseHostIdListCodec =
    Codec.list Codec.string


{-| Codec for ResponseError. -}
responseErrorCodec : Codec ResponseError
responseErrorCodec =
    Codec.object ResponseError
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code launchTemplateErrorCodeCodec
        |> Codec.buildObject


{-| Codec for ResourceType. -}
resourceTypeCodec : Codec ResourceType
resourceTypeCodec =
    Codec.build (Enum.encoder resourceType) (Enum.decoder resourceType)


{-| Codec for ResourceList. -}
resourceListCodec : Codec ResourceList
resourceListCodec =
    Codec.list Codec.string


{-| Codec for ResourceIdList. -}
resourceIdListCodec : Codec ResourceIdList
resourceIdListCodec =
    Codec.list Codec.string


{-| Codec for ResetSnapshotAttributeRequest. -}
resetSnapshotAttributeRequestCodec : Codec ResetSnapshotAttributeRequest
resetSnapshotAttributeRequestCodec =
    Codec.object ResetSnapshotAttributeRequest
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute snapshotAttributeNameCodec
        |> Codec.buildObject


{-| Codec for ResetNetworkInterfaceAttributeRequest. -}
resetNetworkInterfaceAttributeRequestCodec : Codec ResetNetworkInterfaceAttributeRequest
resetNetworkInterfaceAttributeRequestCodec =
    Codec.object ResetNetworkInterfaceAttributeRequest
        |> Codec.field "SourceDestCheck" .sourceDestCheck Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ResetInstanceAttributeRequest. -}
resetInstanceAttributeRequestCodec : Codec ResetInstanceAttributeRequest
resetInstanceAttributeRequestCodec =
    Codec.object ResetInstanceAttributeRequest
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute instanceAttributeNameCodec
        |> Codec.buildObject


{-| Codec for ResetImageAttributeRequest. -}
resetImageAttributeRequestCodec : Codec ResetImageAttributeRequest
resetImageAttributeRequestCodec =
    Codec.object ResetImageAttributeRequest
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute resetImageAttributeNameCodec
        |> Codec.buildObject


{-| Codec for ResetImageAttributeName. -}
resetImageAttributeNameCodec : Codec ResetImageAttributeName
resetImageAttributeNameCodec =
    Codec.build (Enum.encoder resetImageAttributeName) (Enum.decoder resetImageAttributeName)


{-| Codec for ResetFpgaImageAttributeResult. -}
resetFpgaImageAttributeResultCodec : Codec ResetFpgaImageAttributeResult
resetFpgaImageAttributeResultCodec =
    Codec.object ResetFpgaImageAttributeResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for ResetFpgaImageAttributeRequest. -}
resetFpgaImageAttributeRequestCodec : Codec ResetFpgaImageAttributeRequest
resetFpgaImageAttributeRequestCodec =
    Codec.object ResetFpgaImageAttributeRequest
        |> Codec.field "FpgaImageId" .fpgaImageId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute resetFpgaImageAttributeNameCodec
        |> Codec.buildObject


{-| Codec for ResetFpgaImageAttributeName. -}
resetFpgaImageAttributeNameCodec : Codec ResetFpgaImageAttributeName
resetFpgaImageAttributeNameCodec =
    Codec.build (Enum.encoder resetFpgaImageAttributeName) (Enum.decoder resetFpgaImageAttributeName)


{-| Codec for ResetEbsDefaultKmsKeyIdResult. -}
resetEbsDefaultKmsKeyIdResultCodec : Codec ResetEbsDefaultKmsKeyIdResult
resetEbsDefaultKmsKeyIdResultCodec =
    Codec.object ResetEbsDefaultKmsKeyIdResult |> Codec.field "KmsKeyId" .kmsKeyId Codec.string |> Codec.buildObject


{-| Codec for ResetEbsDefaultKmsKeyIdRequest. -}
resetEbsDefaultKmsKeyIdRequestCodec : Codec ResetEbsDefaultKmsKeyIdRequest
resetEbsDefaultKmsKeyIdRequestCodec =
    Codec.object ResetEbsDefaultKmsKeyIdRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for ReservedIntancesIds. -}
reservedIntancesIdsCodec : Codec ReservedIntancesIds
reservedIntancesIdsCodec =
    Codec.list reservedInstancesIdCodec


{-| Codec for ReservedInstancesOfferingList. -}
reservedInstancesOfferingListCodec : Codec ReservedInstancesOfferingList
reservedInstancesOfferingListCodec =
    Codec.list reservedInstancesOfferingCodec


{-| Codec for ReservedInstancesOfferingIdStringList. -}
reservedInstancesOfferingIdStringListCodec : Codec ReservedInstancesOfferingIdStringList
reservedInstancesOfferingIdStringListCodec =
    Codec.list Codec.string


{-| Codec for ReservedInstancesOffering. -}
reservedInstancesOfferingCodec : Codec ReservedInstancesOffering
reservedInstancesOfferingCodec =
    Codec.object ReservedInstancesOffering
        |> Codec.field "UsagePrice" .usagePrice Codec.float
        |> Codec.field "Scope" .scope scopeCodec
        |> Codec.field "ReservedInstancesOfferingId" .reservedInstancesOfferingId Codec.string
        |> Codec.field "RecurringCharges" .recurringCharges recurringChargesListCodec
        |> Codec.field "ProductDescription" .productDescription riproductDescriptionCodec
        |> Codec.field "PricingDetails" .pricingDetails pricingDetailsListCodec
        |> Codec.field "OfferingType" .offeringType offeringTypeValuesCodec
        |> Codec.field "OfferingClass" .offeringClass offeringClassTypeCodec
        |> Codec.field "Marketplace" .marketplace Codec.bool
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceTenancy" .instanceTenancy tenancyCodec
        |> Codec.field "FixedPrice" .fixedPrice Codec.float
        |> Codec.field "Duration" .duration Codec.int
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ReservedInstancesModificationResultList. -}
reservedInstancesModificationResultListCodec : Codec ReservedInstancesModificationResultList
reservedInstancesModificationResultListCodec =
    Codec.list reservedInstancesModificationResultCodec


{-| Codec for ReservedInstancesModificationResult. -}
reservedInstancesModificationResultCodec : Codec ReservedInstancesModificationResult
reservedInstancesModificationResultCodec =
    Codec.object ReservedInstancesModificationResult
        |> Codec.field "TargetConfiguration" .targetConfiguration reservedInstancesConfigurationCodec
        |> Codec.field "ReservedInstancesId" .reservedInstancesId Codec.string
        |> Codec.buildObject


{-| Codec for ReservedInstancesModificationList. -}
reservedInstancesModificationListCodec : Codec ReservedInstancesModificationList
reservedInstancesModificationListCodec =
    Codec.list reservedInstancesModificationCodec


{-| Codec for ReservedInstancesModificationIdStringList. -}
reservedInstancesModificationIdStringListCodec : Codec ReservedInstancesModificationIdStringList
reservedInstancesModificationIdStringListCodec =
    Codec.list Codec.string


{-| Codec for ReservedInstancesModification. -}
reservedInstancesModificationCodec : Codec ReservedInstancesModification
reservedInstancesModificationCodec =
    Codec.object ReservedInstancesModification
        |> Codec.field "UpdateDate" .updateDate dateTimeCodec
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "Status" .status Codec.string
        |> Codec.field "ReservedInstancesModificationId" .reservedInstancesModificationId Codec.string
        |> Codec.field "ReservedInstancesIds" .reservedInstancesIds reservedIntancesIdsCodec
        |> Codec.field "ModificationResults" .modificationResults reservedInstancesModificationResultListCodec
        |> Codec.field "EffectiveDate" .effectiveDate dateTimeCodec
        |> Codec.field "CreateDate" .createDate dateTimeCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for ReservedInstancesListingList. -}
reservedInstancesListingListCodec : Codec ReservedInstancesListingList
reservedInstancesListingListCodec =
    Codec.list reservedInstancesListingCodec


{-| Codec for ReservedInstancesListing. -}
reservedInstancesListingCodec : Codec ReservedInstancesListing
reservedInstancesListingCodec =
    Codec.object ReservedInstancesListing
        |> Codec.field "UpdateDate" .updateDate dateTimeCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "Status" .status listingStatusCodec
        |> Codec.field "ReservedInstancesListingId" .reservedInstancesListingId Codec.string
        |> Codec.field "ReservedInstancesId" .reservedInstancesId Codec.string
        |> Codec.field "PriceSchedules" .priceSchedules priceScheduleListCodec
        |> Codec.field "InstanceCounts" .instanceCounts instanceCountListCodec
        |> Codec.field "CreateDate" .createDate dateTimeCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for ReservedInstancesList. -}
reservedInstancesListCodec : Codec ReservedInstancesList
reservedInstancesListCodec =
    Codec.list reservedInstancesCodec


{-| Codec for ReservedInstancesIdStringList. -}
reservedInstancesIdStringListCodec : Codec ReservedInstancesIdStringList
reservedInstancesIdStringListCodec =
    Codec.list Codec.string


{-| Codec for ReservedInstancesId. -}
reservedInstancesIdCodec : Codec ReservedInstancesId
reservedInstancesIdCodec =
    Codec.object ReservedInstancesId
        |> Codec.field "ReservedInstancesId" .reservedInstancesId Codec.string
        |> Codec.buildObject


{-| Codec for ReservedInstancesConfigurationList. -}
reservedInstancesConfigurationListCodec : Codec ReservedInstancesConfigurationList
reservedInstancesConfigurationListCodec =
    Codec.list reservedInstancesConfigurationCodec


{-| Codec for ReservedInstancesConfiguration. -}
reservedInstancesConfigurationCodec : Codec ReservedInstancesConfiguration
reservedInstancesConfigurationCodec =
    Codec.object ReservedInstancesConfiguration
        |> Codec.field "Scope" .scope scopeCodec
        |> Codec.field "Platform" .platform Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ReservedInstances. -}
reservedInstancesCodec : Codec ReservedInstances
reservedInstancesCodec =
    Codec.object ReservedInstances
        |> Codec.field "UsagePrice" .usagePrice Codec.float
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state reservedInstanceStateCodec
        |> Codec.field "Start" .start dateTimeCodec
        |> Codec.field "Scope" .scope scopeCodec
        |> Codec.field "ReservedInstancesId" .reservedInstancesId Codec.string
        |> Codec.field "RecurringCharges" .recurringCharges recurringChargesListCodec
        |> Codec.field "ProductDescription" .productDescription riproductDescriptionCodec
        |> Codec.field "OfferingType" .offeringType offeringTypeValuesCodec
        |> Codec.field "OfferingClass" .offeringClass offeringClassTypeCodec
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceTenancy" .instanceTenancy tenancyCodec
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "FixedPrice" .fixedPrice Codec.float
        |> Codec.field "End" .end dateTimeCodec
        |> Codec.field "Duration" .duration Codec.int
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ReservedInstanceState. -}
reservedInstanceStateCodec : Codec ReservedInstanceState
reservedInstanceStateCodec =
    Codec.build (Enum.encoder reservedInstanceState) (Enum.decoder reservedInstanceState)


{-| Codec for ReservedInstanceReservationValueSet. -}
reservedInstanceReservationValueSetCodec : Codec ReservedInstanceReservationValueSet
reservedInstanceReservationValueSetCodec =
    Codec.list reservedInstanceReservationValueCodec


{-| Codec for ReservedInstanceReservationValue. -}
reservedInstanceReservationValueCodec : Codec ReservedInstanceReservationValue
reservedInstanceReservationValueCodec =
    Codec.object ReservedInstanceReservationValue
        |> Codec.field "ReservedInstanceId" .reservedInstanceId Codec.string
        |> Codec.field "ReservationValue" .reservationValue reservationValueCodec
        |> Codec.buildObject


{-| Codec for ReservedInstanceLimitPrice. -}
reservedInstanceLimitPriceCodec : Codec ReservedInstanceLimitPrice
reservedInstanceLimitPriceCodec =
    Codec.object ReservedInstanceLimitPrice
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.field "Amount" .amount Codec.float
        |> Codec.buildObject


{-| Codec for ReservedInstanceIdSet. -}
reservedInstanceIdSetCodec : Codec ReservedInstanceIdSet
reservedInstanceIdSetCodec =
    Codec.list Codec.string


{-| Codec for ReservationValue. -}
reservationValueCodec : Codec ReservationValue
reservationValueCodec =
    Codec.object ReservationValue
        |> Codec.field "RemainingUpfrontValue" .remainingUpfrontValue Codec.string
        |> Codec.field "RemainingTotalValue" .remainingTotalValue Codec.string
        |> Codec.field "HourlyPrice" .hourlyPrice Codec.string
        |> Codec.buildObject


{-| Codec for ReservationState. -}
reservationStateCodec : Codec ReservationState
reservationStateCodec =
    Codec.build (Enum.encoder reservationState) (Enum.decoder reservationState)


{-| Codec for ReservationList. -}
reservationListCodec : Codec ReservationList
reservationListCodec =
    Codec.list reservationCodec


{-| Codec for Reservation. -}
reservationCodec : Codec Reservation
reservationCodec =
    Codec.object Reservation
        |> Codec.field "ReservationId" .reservationId Codec.string
        |> Codec.field "RequesterId" .requesterId Codec.string
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "Instances" .instances instanceListCodec
        |> Codec.field "Groups" .groups groupIdentifierListCodec
        |> Codec.buildObject


{-| Codec for RequestSpotLaunchSpecification. -}
requestSpotLaunchSpecificationCodec : Codec RequestSpotLaunchSpecification
requestSpotLaunchSpecificationCodec =
    Codec.object RequestSpotLaunchSpecification
        |> Codec.field "UserData" .userData Codec.string
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecurityGroups" .securityGroups valueStringListCodec
        |> Codec.field "SecurityGroupIds" .securityGroupIds valueStringListCodec
        |> Codec.field "RamdiskId" .ramdiskId Codec.string
        |> Codec.field "Placement" .placement spotPlacementCodec
        |> Codec.field "NetworkInterfaces" .networkInterfaces instanceNetworkInterfaceSpecificationListCodec
        |> Codec.field "Monitoring" .monitoring runInstancesMonitoringEnabledCodec
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile iamInstanceProfileSpecificationCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings blockDeviceMappingListCodec
        |> Codec.field "AddressingType" .addressingType Codec.string
        |> Codec.buildObject


{-| Codec for RequestSpotInstancesResult. -}
requestSpotInstancesResultCodec : Codec RequestSpotInstancesResult
requestSpotInstancesResultCodec =
    Codec.object RequestSpotInstancesResult
        |> Codec.field "SpotInstanceRequests" .spotInstanceRequests spotInstanceRequestListCodec
        |> Codec.buildObject


{-| Codec for RequestSpotInstancesRequest. -}
requestSpotInstancesRequestCodec : Codec RequestSpotInstancesRequest
requestSpotInstancesRequestCodec =
    Codec.object RequestSpotInstancesRequest
        |> Codec.field "ValidUntil" .validUntil dateTimeCodec
        |> Codec.field "ValidFrom" .validFrom dateTimeCodec
        |> Codec.field "Type" .type_ spotInstanceTypeCodec
        |> Codec.field "SpotPrice" .spotPrice Codec.string
        |> Codec.field "LaunchSpecification" .launchSpecification requestSpotLaunchSpecificationCodec
        |> Codec.field "LaunchGroup" .launchGroup Codec.string
        |> Codec.field "InstanceInterruptionBehavior" .instanceInterruptionBehavior instanceInterruptionBehaviorCodec
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "BlockDurationMinutes" .blockDurationMinutes Codec.int
        |> Codec.field "AvailabilityZoneGroup" .availabilityZoneGroup Codec.string
        |> Codec.buildObject


{-| Codec for RequestSpotFleetResponse. -}
requestSpotFleetResponseCodec : Codec RequestSpotFleetResponse
requestSpotFleetResponseCodec =
    Codec.object RequestSpotFleetResponse
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.buildObject


{-| Codec for RequestSpotFleetRequest. -}
requestSpotFleetRequestCodec : Codec RequestSpotFleetRequest
requestSpotFleetRequestCodec =
    Codec.object RequestSpotFleetRequest
        |> Codec.field "SpotFleetRequestConfig" .spotFleetRequestConfig spotFleetRequestConfigDataCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for RequestLaunchTemplateData. -}
requestLaunchTemplateDataCodec : Codec RequestLaunchTemplateData
requestLaunchTemplateDataCodec =
    Codec.object RequestLaunchTemplateData
        |> Codec.field "UserData" .userData Codec.string
        |> Codec.field "TagSpecifications" .tagSpecifications launchTemplateTagSpecificationRequestListCodec
        |> Codec.field "SecurityGroups" .securityGroups securityGroupStringListCodec
        |> Codec.field "SecurityGroupIds" .securityGroupIds securityGroupIdStringListCodec
        |> Codec.field "RamDiskId" .ramDiskId Codec.string
        |> Codec.field "Placement" .placement launchTemplatePlacementRequestCodec
        |> Codec.field
            "NetworkInterfaces"
            .networkInterfaces
            launchTemplateInstanceNetworkInterfaceSpecificationRequestListCodec
        |> Codec.field "Monitoring" .monitoring launchTemplatesMonitoringRequestCodec
        |> Codec.field "LicenseSpecifications" .licenseSpecifications launchTemplateLicenseSpecificationListRequestCodec
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceMarketOptions" .instanceMarketOptions launchTemplateInstanceMarketOptionsRequestCodec
        |> Codec.field "InstanceInitiatedShutdownBehavior" .instanceInitiatedShutdownBehavior shutdownBehaviorCodec
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field
            "IamInstanceProfile"
            .iamInstanceProfile
            launchTemplateIamInstanceProfileSpecificationRequestCodec
        |> Codec.field "HibernationOptions" .hibernationOptions launchTemplateHibernationOptionsRequestCodec
        |> Codec.field
            "ElasticInferenceAccelerators"
            .elasticInferenceAccelerators
            launchTemplateElasticInferenceAcceleratorListCodec
        |> Codec.field "ElasticGpuSpecifications" .elasticGpuSpecifications elasticGpuSpecificationListCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "DisableApiTermination" .disableApiTermination Codec.bool
        |> Codec.field "CreditSpecification" .creditSpecification creditSpecificationRequestCodec
        |> Codec.field "CpuOptions" .cpuOptions launchTemplateCpuOptionsRequestCodec
        |> Codec.field
            "CapacityReservationSpecification"
            .capacityReservationSpecification
            launchTemplateCapacityReservationSpecificationRequestCodec
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings launchTemplateBlockDeviceMappingRequestListCodec
        |> Codec.buildObject


{-| Codec for RequestHostIdSet. -}
requestHostIdSetCodec : Codec RequestHostIdSet
requestHostIdSetCodec =
    Codec.list Codec.string


{-| Codec for RequestHostIdList. -}
requestHostIdListCodec : Codec RequestHostIdList
requestHostIdListCodec =
    Codec.list Codec.string


{-| Codec for ReportStatusType. -}
reportStatusTypeCodec : Codec ReportStatusType
reportStatusTypeCodec =
    Codec.build (Enum.encoder reportStatusType) (Enum.decoder reportStatusType)


{-| Codec for ReportInstanceStatusRequest. -}
reportInstanceStatusRequestCodec : Codec ReportInstanceStatusRequest
reportInstanceStatusRequestCodec =
    Codec.object ReportInstanceStatusRequest
        |> Codec.field "Status" .status reportStatusTypeCodec
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "ReasonCodes" .reasonCodes reasonCodesListCodec
        |> Codec.field "Instances" .instances instanceIdStringListCodec
        |> Codec.field "EndTime" .endTime dateTimeCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ReportInstanceReasonCodes. -}
reportInstanceReasonCodesCodec : Codec ReportInstanceReasonCodes
reportInstanceReasonCodesCodec =
    Codec.build (Enum.encoder reportInstanceReasonCodes) (Enum.decoder reportInstanceReasonCodes)


{-| Codec for ReplaceTransitGatewayRouteResult. -}
replaceTransitGatewayRouteResultCodec : Codec ReplaceTransitGatewayRouteResult
replaceTransitGatewayRouteResultCodec =
    Codec.object ReplaceTransitGatewayRouteResult
        |> Codec.field "Route" .route transitGatewayRouteCodec
        |> Codec.buildObject


{-| Codec for ReplaceTransitGatewayRouteRequest. -}
replaceTransitGatewayRouteRequestCodec : Codec ReplaceTransitGatewayRouteRequest
replaceTransitGatewayRouteRequestCodec =
    Codec.object ReplaceTransitGatewayRouteRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.field "Blackhole" .blackhole Codec.bool
        |> Codec.buildObject


{-| Codec for ReplaceRouteTableAssociationResult. -}
replaceRouteTableAssociationResultCodec : Codec ReplaceRouteTableAssociationResult
replaceRouteTableAssociationResultCodec =
    Codec.object ReplaceRouteTableAssociationResult
        |> Codec.field "NewAssociationId" .newAssociationId Codec.string
        |> Codec.buildObject


{-| Codec for ReplaceRouteTableAssociationRequest. -}
replaceRouteTableAssociationRequestCodec : Codec ReplaceRouteTableAssociationRequest
replaceRouteTableAssociationRequestCodec =
    Codec.object ReplaceRouteTableAssociationRequest
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for ReplaceRouteRequest. -}
replaceRouteRequestCodec : Codec ReplaceRouteRequest
replaceRouteRequestCodec =
    Codec.object ReplaceRouteRequest
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "NatGatewayId" .natGatewayId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "GatewayId" .gatewayId Codec.string
        |> Codec.field "EgressOnlyInternetGatewayId" .egressOnlyInternetGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationIpv6CidrBlock" .destinationIpv6CidrBlock Codec.string
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for ReplaceNetworkAclEntryRequest. -}
replaceNetworkAclEntryRequestCodec : Codec ReplaceNetworkAclEntryRequest
replaceNetworkAclEntryRequestCodec =
    Codec.object ReplaceNetworkAclEntryRequest
        |> Codec.field "RuleNumber" .ruleNumber Codec.int
        |> Codec.field "RuleAction" .ruleAction ruleActionCodec
        |> Codec.field "Protocol" .protocol Codec.string
        |> Codec.field "PortRange" .portRange portRangeCodec
        |> Codec.field "NetworkAclId" .networkAclId Codec.string
        |> Codec.field "Ipv6CidrBlock" .ipv6CidrBlock Codec.string
        |> Codec.field "IcmpTypeCode" .icmpTypeCode icmpTypeCodeCodec
        |> Codec.field "Egress" .egress Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for ReplaceNetworkAclAssociationResult. -}
replaceNetworkAclAssociationResultCodec : Codec ReplaceNetworkAclAssociationResult
replaceNetworkAclAssociationResultCodec =
    Codec.object ReplaceNetworkAclAssociationResult
        |> Codec.field "NewAssociationId" .newAssociationId Codec.string
        |> Codec.buildObject


{-| Codec for ReplaceNetworkAclAssociationRequest. -}
replaceNetworkAclAssociationRequestCodec : Codec ReplaceNetworkAclAssociationRequest
replaceNetworkAclAssociationRequestCodec =
    Codec.object ReplaceNetworkAclAssociationRequest
        |> Codec.field "NetworkAclId" .networkAclId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for ReplaceIamInstanceProfileAssociationResult. -}
replaceIamInstanceProfileAssociationResultCodec : Codec ReplaceIamInstanceProfileAssociationResult
replaceIamInstanceProfileAssociationResultCodec =
    Codec.object ReplaceIamInstanceProfileAssociationResult
        |> Codec.field "IamInstanceProfileAssociation" .iamInstanceProfileAssociation iamInstanceProfileAssociationCodec
        |> Codec.buildObject


{-| Codec for ReplaceIamInstanceProfileAssociationRequest. -}
replaceIamInstanceProfileAssociationRequestCodec : Codec ReplaceIamInstanceProfileAssociationRequest
replaceIamInstanceProfileAssociationRequestCodec =
    Codec.object ReplaceIamInstanceProfileAssociationRequest
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile iamInstanceProfileSpecificationCodec
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for ReleaseHostsResult. -}
releaseHostsResultCodec : Codec ReleaseHostsResult
releaseHostsResultCodec =
    Codec.object ReleaseHostsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemListCodec
        |> Codec.field "Successful" .successful responseHostIdListCodec
        |> Codec.buildObject


{-| Codec for ReleaseHostsRequest. -}
releaseHostsRequestCodec : Codec ReleaseHostsRequest
releaseHostsRequestCodec =
    Codec.object ReleaseHostsRequest |> Codec.field "HostIds" .hostIds requestHostIdListCodec |> Codec.buildObject


{-| Codec for ReleaseAddressRequest. -}
releaseAddressRequestCodec : Codec ReleaseAddressRequest
releaseAddressRequestCodec =
    Codec.object ReleaseAddressRequest
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AllocationId" .allocationId Codec.string
        |> Codec.buildObject


{-| Codec for RejectVpcPeeringConnectionResult. -}
rejectVpcPeeringConnectionResultCodec : Codec RejectVpcPeeringConnectionResult
rejectVpcPeeringConnectionResultCodec =
    Codec.object RejectVpcPeeringConnectionResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for RejectVpcPeeringConnectionRequest. -}
rejectVpcPeeringConnectionRequestCodec : Codec RejectVpcPeeringConnectionRequest
rejectVpcPeeringConnectionRequestCodec =
    Codec.object RejectVpcPeeringConnectionRequest
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for RejectVpcEndpointConnectionsResult. -}
rejectVpcEndpointConnectionsResultCodec : Codec RejectVpcEndpointConnectionsResult
rejectVpcEndpointConnectionsResultCodec =
    Codec.object RejectVpcEndpointConnectionsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemSetCodec
        |> Codec.buildObject


{-| Codec for RejectVpcEndpointConnectionsRequest. -}
rejectVpcEndpointConnectionsRequestCodec : Codec RejectVpcEndpointConnectionsRequest
rejectVpcEndpointConnectionsRequestCodec =
    Codec.object RejectVpcEndpointConnectionsRequest
        |> Codec.field "VpcEndpointIds" .vpcEndpointIds valueStringListCodec
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for RejectTransitGatewayVpcAttachmentResult. -}
rejectTransitGatewayVpcAttachmentResultCodec : Codec RejectTransitGatewayVpcAttachmentResult
rejectTransitGatewayVpcAttachmentResultCodec =
    Codec.object RejectTransitGatewayVpcAttachmentResult
        |> Codec.field "TransitGatewayVpcAttachment" .transitGatewayVpcAttachment transitGatewayVpcAttachmentCodec
        |> Codec.buildObject


{-| Codec for RejectTransitGatewayVpcAttachmentRequest. -}
rejectTransitGatewayVpcAttachmentRequestCodec : Codec RejectTransitGatewayVpcAttachmentRequest
rejectTransitGatewayVpcAttachmentRequestCodec =
    Codec.object RejectTransitGatewayVpcAttachmentRequest
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for RegisterImageResult. -}
registerImageResultCodec : Codec RegisterImageResult
registerImageResultCodec =
    Codec.object RegisterImageResult |> Codec.field "ImageId" .imageId Codec.string |> Codec.buildObject


{-| Codec for RegisterImageRequest. -}
registerImageRequestCodec : Codec RegisterImageRequest
registerImageRequestCodec =
    Codec.object RegisterImageRequest
        |> Codec.field "VirtualizationType" .virtualizationType Codec.string
        |> Codec.field "SriovNetSupport" .sriovNetSupport Codec.string
        |> Codec.field "RootDeviceName" .rootDeviceName Codec.string
        |> Codec.field "RamdiskId" .ramdiskId Codec.string
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "ImageLocation" .imageLocation Codec.string
        |> Codec.field "EnaSupport" .enaSupport Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings blockDeviceMappingRequestListCodec
        |> Codec.field "BillingProducts" .billingProducts billingProductListCodec
        |> Codec.field "Architecture" .architecture architectureValuesCodec
        |> Codec.buildObject


{-| Codec for RegionNameStringList. -}
regionNameStringListCodec : Codec RegionNameStringList
regionNameStringListCodec =
    Codec.list Codec.string


{-| Codec for RegionList. -}
regionListCodec : Codec RegionList
regionListCodec =
    Codec.list regionCodec


{-| Codec for Region. -}
regionCodec : Codec Region
regionCodec =
    Codec.object Region
        |> Codec.field "RegionName" .regionName Codec.string
        |> Codec.field "OptInStatus" .optInStatus Codec.string
        |> Codec.field "Endpoint" .endpoint Codec.string
        |> Codec.buildObject


{-| Codec for RecurringChargesList. -}
recurringChargesListCodec : Codec RecurringChargesList
recurringChargesListCodec =
    Codec.list recurringChargeCodec


{-| Codec for RecurringChargeFrequency. -}
recurringChargeFrequencyCodec : Codec RecurringChargeFrequency
recurringChargeFrequencyCodec =
    Codec.build (Enum.encoder recurringChargeFrequency) (Enum.decoder recurringChargeFrequency)


{-| Codec for RecurringCharge. -}
recurringChargeCodec : Codec RecurringCharge
recurringChargeCodec =
    Codec.object RecurringCharge
        |> Codec.field "Frequency" .frequency recurringChargeFrequencyCodec
        |> Codec.field "Amount" .amount Codec.float
        |> Codec.buildObject


{-| Codec for RebootInstancesRequest. -}
rebootInstancesRequestCodec : Codec RebootInstancesRequest
rebootInstancesRequestCodec =
    Codec.object RebootInstancesRequest
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ReasonCodesList. -}
reasonCodesListCodec : Codec ReasonCodesList
reasonCodesListCodec =
    Codec.list reportInstanceReasonCodesCodec


{-| Codec for RiproductDescription. -}
riproductDescriptionCodec : Codec RiproductDescription
riproductDescriptionCodec =
    Codec.build (Enum.encoder riproductDescription) (Enum.decoder riproductDescription)


{-| Codec for PurchasedScheduledInstanceSet. -}
purchasedScheduledInstanceSetCodec : Codec PurchasedScheduledInstanceSet
purchasedScheduledInstanceSetCodec =
    Codec.list scheduledInstanceCodec


{-| Codec for PurchaseSet. -}
purchaseSetCodec : Codec PurchaseSet
purchaseSetCodec =
    Codec.list purchaseCodec


{-| Codec for PurchaseScheduledInstancesResult. -}
purchaseScheduledInstancesResultCodec : Codec PurchaseScheduledInstancesResult
purchaseScheduledInstancesResultCodec =
    Codec.object PurchaseScheduledInstancesResult
        |> Codec.field "ScheduledInstanceSet" .scheduledInstanceSet purchasedScheduledInstanceSetCodec
        |> Codec.buildObject


{-| Codec for PurchaseScheduledInstancesRequest. -}
purchaseScheduledInstancesRequestCodec : Codec PurchaseScheduledInstancesRequest
purchaseScheduledInstancesRequestCodec =
    Codec.object PurchaseScheduledInstancesRequest
        |> Codec.field "PurchaseRequests" .purchaseRequests purchaseRequestSetCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for PurchaseReservedInstancesOfferingResult. -}
purchaseReservedInstancesOfferingResultCodec : Codec PurchaseReservedInstancesOfferingResult
purchaseReservedInstancesOfferingResultCodec =
    Codec.object PurchaseReservedInstancesOfferingResult
        |> Codec.field "ReservedInstancesId" .reservedInstancesId Codec.string
        |> Codec.buildObject


{-| Codec for PurchaseReservedInstancesOfferingRequest. -}
purchaseReservedInstancesOfferingRequestCodec : Codec PurchaseReservedInstancesOfferingRequest
purchaseReservedInstancesOfferingRequestCodec =
    Codec.object PurchaseReservedInstancesOfferingRequest
        |> Codec.field "ReservedInstancesOfferingId" .reservedInstancesOfferingId Codec.string
        |> Codec.field "LimitPrice" .limitPrice reservedInstanceLimitPriceCodec
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for PurchaseRequestSet. -}
purchaseRequestSetCodec : Codec PurchaseRequestSet
purchaseRequestSetCodec =
    Codec.list purchaseRequestCodec


{-| Codec for PurchaseRequest. -}
purchaseRequestCodec : Codec PurchaseRequest
purchaseRequestCodec =
    Codec.object PurchaseRequest
        |> Codec.field "PurchaseToken" .purchaseToken Codec.string
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.buildObject


{-| Codec for PurchaseHostReservationResult. -}
purchaseHostReservationResultCodec : Codec PurchaseHostReservationResult
purchaseHostReservationResultCodec =
    Codec.object PurchaseHostReservationResult
        |> Codec.field "TotalUpfrontPrice" .totalUpfrontPrice Codec.string
        |> Codec.field "TotalHourlyPrice" .totalHourlyPrice Codec.string
        |> Codec.field "Purchase" .purchase purchaseSetCodec
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for PurchaseHostReservationRequest. -}
purchaseHostReservationRequestCodec : Codec PurchaseHostReservationRequest
purchaseHostReservationRequestCodec =
    Codec.object PurchaseHostReservationRequest
        |> Codec.field "OfferingId" .offeringId Codec.string
        |> Codec.field "LimitPrice" .limitPrice Codec.string
        |> Codec.field "HostIdSet" .hostIdSet requestHostIdSetCodec
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for Purchase. -}
purchaseCodec : Codec Purchase
purchaseCodec =
    Codec.object Purchase
        |> Codec.field "UpfrontPrice" .upfrontPrice Codec.string
        |> Codec.field "PaymentOption" .paymentOption paymentOptionCodec
        |> Codec.field "InstanceFamily" .instanceFamily Codec.string
        |> Codec.field "HourlyPrice" .hourlyPrice Codec.string
        |> Codec.field "HostReservationId" .hostReservationId Codec.string
        |> Codec.field "HostIdSet" .hostIdSet responseHostIdSetCodec
        |> Codec.field "Duration" .duration Codec.int
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.buildObject


{-| Codec for PublicIpv4PoolSet. -}
publicIpv4PoolSetCodec : Codec PublicIpv4PoolSet
publicIpv4PoolSetCodec =
    Codec.list publicIpv4PoolCodec


{-| Codec for PublicIpv4PoolRangeSet. -}
publicIpv4PoolRangeSetCodec : Codec PublicIpv4PoolRangeSet
publicIpv4PoolRangeSetCodec =
    Codec.list publicIpv4PoolRangeCodec


{-| Codec for PublicIpv4PoolRange. -}
publicIpv4PoolRangeCodec : Codec PublicIpv4PoolRange
publicIpv4PoolRangeCodec =
    Codec.object PublicIpv4PoolRange
        |> Codec.field "LastAddress" .lastAddress Codec.string
        |> Codec.field "FirstAddress" .firstAddress Codec.string
        |> Codec.field "AvailableAddressCount" .availableAddressCount Codec.int
        |> Codec.field "AddressCount" .addressCount Codec.int
        |> Codec.buildObject


{-| Codec for PublicIpv4Pool. -}
publicIpv4PoolCodec : Codec PublicIpv4Pool
publicIpv4PoolCodec =
    Codec.object PublicIpv4Pool
        |> Codec.field "TotalAvailableAddressCount" .totalAvailableAddressCount Codec.int
        |> Codec.field "TotalAddressCount" .totalAddressCount Codec.int
        |> Codec.field "PoolId" .poolId Codec.string
        |> Codec.field "PoolAddressRanges" .poolAddressRanges publicIpv4PoolRangeSetCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for PublicIpStringList. -}
publicIpStringListCodec : Codec PublicIpStringList
publicIpStringListCodec =
    Codec.list Codec.string


{-| Codec for ProvisionedBandwidth. -}
provisionedBandwidthCodec : Codec ProvisionedBandwidth
provisionedBandwidthCodec =
    Codec.object ProvisionedBandwidth
        |> Codec.field "Status" .status Codec.string
        |> Codec.field "Requested" .requested Codec.string
        |> Codec.field "RequestTime" .requestTime dateTimeCodec
        |> Codec.field "Provisioned" .provisioned Codec.string
        |> Codec.field "ProvisionTime" .provisionTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for ProvisionByoipCidrResult. -}
provisionByoipCidrResultCodec : Codec ProvisionByoipCidrResult
provisionByoipCidrResultCodec =
    Codec.object ProvisionByoipCidrResult |> Codec.field "ByoipCidr" .byoipCidr byoipCidrCodec |> Codec.buildObject


{-| Codec for ProvisionByoipCidrRequest. -}
provisionByoipCidrRequestCodec : Codec ProvisionByoipCidrRequest
provisionByoipCidrRequestCodec =
    Codec.object ProvisionByoipCidrRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "CidrAuthorizationContext" .cidrAuthorizationContext cidrAuthorizationContextCodec
        |> Codec.field "Cidr" .cidr Codec.string
        |> Codec.buildObject


{-| Codec for PropagatingVgwList. -}
propagatingVgwListCodec : Codec PropagatingVgwList
propagatingVgwListCodec =
    Codec.list propagatingVgwCodec


{-| Codec for PropagatingVgw. -}
propagatingVgwCodec : Codec PropagatingVgw
propagatingVgwCodec =
    Codec.object PropagatingVgw |> Codec.field "GatewayId" .gatewayId Codec.string |> Codec.buildObject


{-| Codec for ProductDescriptionList. -}
productDescriptionListCodec : Codec ProductDescriptionList
productDescriptionListCodec =
    Codec.list Codec.string


{-| Codec for ProductCodeValues. -}
productCodeValuesCodec : Codec ProductCodeValues
productCodeValuesCodec =
    Codec.build (Enum.encoder productCodeValues) (Enum.decoder productCodeValues)


{-| Codec for ProductCodeStringList. -}
productCodeStringListCodec : Codec ProductCodeStringList
productCodeStringListCodec =
    Codec.list Codec.string


{-| Codec for ProductCodeList. -}
productCodeListCodec : Codec ProductCodeList
productCodeListCodec =
    Codec.list productCodeCodec


{-| Codec for ProductCode. -}
productCodeCodec : Codec ProductCode
productCodeCodec =
    Codec.object ProductCode
        |> Codec.field "ProductCodeType" .productCodeType productCodeValuesCodec
        |> Codec.field "ProductCodeId" .productCodeId Codec.string
        |> Codec.buildObject


{-| Codec for PrivateIpAddressStringList. -}
privateIpAddressStringListCodec : Codec PrivateIpAddressStringList
privateIpAddressStringListCodec =
    Codec.list Codec.string


{-| Codec for PrivateIpAddressSpecificationList. -}
privateIpAddressSpecificationListCodec : Codec PrivateIpAddressSpecificationList
privateIpAddressSpecificationListCodec =
    Codec.list privateIpAddressSpecificationCodec


{-| Codec for PrivateIpAddressSpecification. -}
privateIpAddressSpecificationCodec : Codec PrivateIpAddressSpecification
privateIpAddressSpecificationCodec =
    Codec.object PrivateIpAddressSpecification
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "Primary" .primary Codec.bool
        |> Codec.buildObject


{-| Codec for PrivateIpAddressConfigSet. -}
privateIpAddressConfigSetCodec : Codec PrivateIpAddressConfigSet
privateIpAddressConfigSetCodec =
    Codec.list scheduledInstancesPrivateIpAddressConfigCodec


{-| Codec for PrincipalType. -}
principalTypeCodec : Codec PrincipalType
principalTypeCodec =
    Codec.build (Enum.encoder principalType) (Enum.decoder principalType)


{-| Codec for PrincipalIdFormatList. -}
principalIdFormatListCodec : Codec PrincipalIdFormatList
principalIdFormatListCodec =
    Codec.list principalIdFormatCodec


{-| Codec for PrincipalIdFormat. -}
principalIdFormatCodec : Codec PrincipalIdFormat
principalIdFormatCodec =
    Codec.object PrincipalIdFormat
        |> Codec.field "Statuses" .statuses idFormatListCodec
        |> Codec.field "Arn" .arn Codec.string
        |> Codec.buildObject


{-| Codec for PricingDetailsList. -}
pricingDetailsListCodec : Codec PricingDetailsList
pricingDetailsListCodec =
    Codec.list pricingDetailCodec


{-| Codec for PricingDetail. -}
pricingDetailCodec : Codec PricingDetail
pricingDetailCodec =
    Codec.object PricingDetail
        |> Codec.field "Price" .price Codec.float
        |> Codec.field "Count" .count Codec.int
        |> Codec.buildObject


{-| Codec for PriceScheduleSpecificationList. -}
priceScheduleSpecificationListCodec : Codec PriceScheduleSpecificationList
priceScheduleSpecificationListCodec =
    Codec.list priceScheduleSpecificationCodec


{-| Codec for PriceScheduleSpecification. -}
priceScheduleSpecificationCodec : Codec PriceScheduleSpecification
priceScheduleSpecificationCodec =
    Codec.object PriceScheduleSpecification
        |> Codec.field "Term" .term Codec.int
        |> Codec.field "Price" .price Codec.float
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.buildObject


{-| Codec for PriceScheduleList. -}
priceScheduleListCodec : Codec PriceScheduleList
priceScheduleListCodec =
    Codec.list priceScheduleCodec


{-| Codec for PriceSchedule. -}
priceScheduleCodec : Codec PriceSchedule
priceScheduleCodec =
    Codec.object PriceSchedule
        |> Codec.field "Term" .term Codec.int
        |> Codec.field "Price" .price Codec.float
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.field "Active" .active Codec.bool
        |> Codec.buildObject


{-| Codec for PrefixListSet. -}
prefixListSetCodec : Codec PrefixListSet
prefixListSetCodec =
    Codec.list prefixListCodec


{-| Codec for PrefixListIdSet. -}
prefixListIdSetCodec : Codec PrefixListIdSet
prefixListIdSetCodec =
    Codec.list Codec.string


{-| Codec for PrefixListIdList. -}
prefixListIdListCodec : Codec PrefixListIdList
prefixListIdListCodec =
    Codec.list prefixListIdCodec


{-| Codec for PrefixListId. -}
prefixListIdCodec : Codec PrefixListId
prefixListIdCodec =
    Codec.object PrefixListId
        |> Codec.field "PrefixListId" .prefixListId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for PrefixList. -}
prefixListCodec : Codec PrefixList
prefixListCodec =
    Codec.object PrefixList
        |> Codec.field "PrefixListName" .prefixListName Codec.string
        |> Codec.field "PrefixListId" .prefixListId Codec.string
        |> Codec.field "Cidrs" .cidrs valueStringListCodec
        |> Codec.buildObject


{-| Codec for PortRange. -}
portRangeCodec : Codec PortRange
portRangeCodec =
    Codec.object PortRange |> Codec.field "To" .to Codec.int |> Codec.field "From" .from Codec.int |> Codec.buildObject


{-| Codec for PoolMaxResults. -}
poolMaxResultsCodec : Codec PoolMaxResults
poolMaxResultsCodec =
    Codec.build (Refined.encoder poolMaxResults) (Refined.decoder poolMaxResults)


{-| Codec for PlatformValues. -}
platformValuesCodec : Codec PlatformValues
platformValuesCodec =
    Codec.build (Enum.encoder platformValues) (Enum.decoder platformValues)


{-| Codec for PlacementStrategy. -}
placementStrategyCodec : Codec PlacementStrategy
placementStrategyCodec =
    Codec.build (Enum.encoder placementStrategy) (Enum.decoder placementStrategy)


{-| Codec for PlacementResponse. -}
placementResponseCodec : Codec PlacementResponse
placementResponseCodec =
    Codec.object PlacementResponse |> Codec.field "GroupName" .groupName Codec.string |> Codec.buildObject


{-| Codec for PlacementGroupStringList. -}
placementGroupStringListCodec : Codec PlacementGroupStringList
placementGroupStringListCodec =
    Codec.list Codec.string


{-| Codec for PlacementGroupState. -}
placementGroupStateCodec : Codec PlacementGroupState
placementGroupStateCodec =
    Codec.build (Enum.encoder placementGroupState) (Enum.decoder placementGroupState)


{-| Codec for PlacementGroupList. -}
placementGroupListCodec : Codec PlacementGroupList
placementGroupListCodec =
    Codec.list placementGroupCodec


{-| Codec for PlacementGroup. -}
placementGroupCodec : Codec PlacementGroup
placementGroupCodec =
    Codec.object PlacementGroup
        |> Codec.field "Strategy" .strategy placementStrategyCodec
        |> Codec.field "State" .state placementGroupStateCodec
        |> Codec.field "PartitionCount" .partitionCount Codec.int
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.buildObject


{-| Codec for Placement. -}
placementCodec : Codec Placement
placementCodec =
    Codec.object Placement
        |> Codec.field "Tenancy" .tenancy tenancyCodec
        |> Codec.field "SpreadDomain" .spreadDomain Codec.string
        |> Codec.field "PartitionNumber" .partitionNumber Codec.int
        |> Codec.field "HostId" .hostId Codec.string
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "Affinity" .affinity Codec.string
        |> Codec.buildObject


{-| Codec for PermissionGroup. -}
permissionGroupCodec : Codec PermissionGroup
permissionGroupCodec =
    Codec.build (Enum.encoder permissionGroup) (Enum.decoder permissionGroup)


{-| Codec for PeeringConnectionOptionsRequest. -}
peeringConnectionOptionsRequestCodec : Codec PeeringConnectionOptionsRequest
peeringConnectionOptionsRequestCodec =
    Codec.object PeeringConnectionOptionsRequest
        |> Codec.field
            "AllowEgressFromLocalVpcToRemoteClassicLink"
            .allowEgressFromLocalVpcToRemoteClassicLink
            Codec.bool
        |> Codec.field
            "AllowEgressFromLocalClassicLinkToRemoteVpc"
            .allowEgressFromLocalClassicLinkToRemoteVpc
            Codec.bool
        |> Codec.field "AllowDnsResolutionFromRemoteVpc" .allowDnsResolutionFromRemoteVpc Codec.bool
        |> Codec.buildObject


{-| Codec for PeeringConnectionOptions. -}
peeringConnectionOptionsCodec : Codec PeeringConnectionOptions
peeringConnectionOptionsCodec =
    Codec.object PeeringConnectionOptions
        |> Codec.field
            "AllowEgressFromLocalVpcToRemoteClassicLink"
            .allowEgressFromLocalVpcToRemoteClassicLink
            Codec.bool
        |> Codec.field
            "AllowEgressFromLocalClassicLinkToRemoteVpc"
            .allowEgressFromLocalClassicLinkToRemoteVpc
            Codec.bool
        |> Codec.field "AllowDnsResolutionFromRemoteVpc" .allowDnsResolutionFromRemoteVpc Codec.bool
        |> Codec.buildObject


{-| Codec for PciId. -}
pciIdCodec : Codec PciId
pciIdCodec =
    Codec.object PciId
        |> Codec.field "VendorId" .vendorId Codec.string
        |> Codec.field "SubsystemVendorId" .subsystemVendorId Codec.string
        |> Codec.field "SubsystemId" .subsystemId Codec.string
        |> Codec.field "DeviceId" .deviceId Codec.string
        |> Codec.buildObject


{-| Codec for PaymentOption. -}
paymentOptionCodec : Codec PaymentOption
paymentOptionCodec =
    Codec.build (Enum.encoder paymentOption) (Enum.decoder paymentOption)


{-| Codec for OwnerStringList. -}
ownerStringListCodec : Codec OwnerStringList
ownerStringListCodec =
    Codec.list Codec.string


{-| Codec for OperationType. -}
operationTypeCodec : Codec OperationType
operationTypeCodec =
    Codec.build (Enum.encoder operationType) (Enum.decoder operationType)


{-| Codec for OnDemandOptionsRequest. -}
onDemandOptionsRequestCodec : Codec OnDemandOptionsRequest
onDemandOptionsRequestCodec =
    Codec.object OnDemandOptionsRequest
        |> Codec.field "SingleInstanceType" .singleInstanceType Codec.bool
        |> Codec.field "SingleAvailabilityZone" .singleAvailabilityZone Codec.bool
        |> Codec.field "MinTargetCapacity" .minTargetCapacity Codec.int
        |> Codec.field "MaxTotalPrice" .maxTotalPrice Codec.string
        |> Codec.field "AllocationStrategy" .allocationStrategy fleetOnDemandAllocationStrategyCodec
        |> Codec.buildObject


{-| Codec for OnDemandOptions. -}
onDemandOptionsCodec : Codec OnDemandOptions
onDemandOptionsCodec =
    Codec.object OnDemandOptions
        |> Codec.field "SingleInstanceType" .singleInstanceType Codec.bool
        |> Codec.field "SingleAvailabilityZone" .singleAvailabilityZone Codec.bool
        |> Codec.field "MinTargetCapacity" .minTargetCapacity Codec.int
        |> Codec.field "MaxTotalPrice" .maxTotalPrice Codec.string
        |> Codec.field "AllocationStrategy" .allocationStrategy fleetOnDemandAllocationStrategyCodec
        |> Codec.buildObject


{-| Codec for OnDemandAllocationStrategy. -}
onDemandAllocationStrategyCodec : Codec OnDemandAllocationStrategy
onDemandAllocationStrategyCodec =
    Codec.build (Enum.encoder onDemandAllocationStrategy) (Enum.decoder onDemandAllocationStrategy)


{-| Codec for OfferingTypeValues. -}
offeringTypeValuesCodec : Codec OfferingTypeValues
offeringTypeValuesCodec =
    Codec.build (Enum.encoder offeringTypeValues) (Enum.decoder offeringTypeValues)


{-| Codec for OfferingClassType. -}
offeringClassTypeCodec : Codec OfferingClassType
offeringClassTypeCodec =
    Codec.build (Enum.encoder offeringClassType) (Enum.decoder offeringClassType)


{-| Codec for OccurrenceDaySet. -}
occurrenceDaySetCodec : Codec OccurrenceDaySet
occurrenceDaySetCodec =
    Codec.list Codec.int


{-| Codec for OccurrenceDayRequestSet. -}
occurrenceDayRequestSetCodec : Codec OccurrenceDayRequestSet
occurrenceDayRequestSetCodec =
    Codec.list Codec.int


{-| Codec for NextToken. -}
nextTokenCodec : Codec NextToken
nextTokenCodec =
    Codec.string


{-| Codec for NewDhcpConfigurationList. -}
newDhcpConfigurationListCodec : Codec NewDhcpConfigurationList
newDhcpConfigurationListCodec =
    Codec.list newDhcpConfigurationCodec


{-| Codec for NewDhcpConfiguration. -}
newDhcpConfigurationCodec : Codec NewDhcpConfiguration
newDhcpConfigurationCodec =
    Codec.object NewDhcpConfiguration
        |> Codec.field "Values" .values valueStringListCodec
        |> Codec.field "Key" .key Codec.string
        |> Codec.buildObject


{-| Codec for NetworkInterfaceType. -}
networkInterfaceTypeCodec : Codec NetworkInterfaceType
networkInterfaceTypeCodec =
    Codec.build (Enum.encoder networkInterfaceType) (Enum.decoder networkInterfaceType)


{-| Codec for NetworkInterfaceStatus. -}
networkInterfaceStatusCodec : Codec NetworkInterfaceStatus
networkInterfaceStatusCodec =
    Codec.build (Enum.encoder networkInterfaceStatus) (Enum.decoder networkInterfaceStatus)


{-| Codec for NetworkInterfacePrivateIpAddressList. -}
networkInterfacePrivateIpAddressListCodec : Codec NetworkInterfacePrivateIpAddressList
networkInterfacePrivateIpAddressListCodec =
    Codec.list networkInterfacePrivateIpAddressCodec


{-| Codec for NetworkInterfacePrivateIpAddress. -}
networkInterfacePrivateIpAddressCodec : Codec NetworkInterfacePrivateIpAddress
networkInterfacePrivateIpAddressCodec =
    Codec.object NetworkInterfacePrivateIpAddress
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "PrivateDnsName" .privateDnsName Codec.string
        |> Codec.field "Primary" .primary Codec.bool
        |> Codec.field "Association" .association networkInterfaceAssociationCodec
        |> Codec.buildObject


{-| Codec for NetworkInterfacePermissionStateCode. -}
networkInterfacePermissionStateCodeCodec : Codec NetworkInterfacePermissionStateCode
networkInterfacePermissionStateCodeCodec =
    Codec.build (Enum.encoder networkInterfacePermissionStateCode) (Enum.decoder networkInterfacePermissionStateCode)


{-| Codec for NetworkInterfacePermissionState. -}
networkInterfacePermissionStateCodec : Codec NetworkInterfacePermissionState
networkInterfacePermissionStateCodec =
    Codec.object NetworkInterfacePermissionState
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "State" .state networkInterfacePermissionStateCodeCodec
        |> Codec.buildObject


{-| Codec for NetworkInterfacePermissionList. -}
networkInterfacePermissionListCodec : Codec NetworkInterfacePermissionList
networkInterfacePermissionListCodec =
    Codec.list networkInterfacePermissionCodec


{-| Codec for NetworkInterfacePermissionIdList. -}
networkInterfacePermissionIdListCodec : Codec NetworkInterfacePermissionIdList
networkInterfacePermissionIdListCodec =
    Codec.list Codec.string


{-| Codec for NetworkInterfacePermission. -}
networkInterfacePermissionCodec : Codec NetworkInterfacePermission
networkInterfacePermissionCodec =
    Codec.object NetworkInterfacePermission
        |> Codec.field "PermissionState" .permissionState networkInterfacePermissionStateCodec
        |> Codec.field "Permission" .permission interfacePermissionTypeCodec
        |> Codec.field "NetworkInterfacePermissionId" .networkInterfacePermissionId Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "AwsService" .awsService Codec.string
        |> Codec.field "AwsAccountId" .awsAccountId Codec.string
        |> Codec.buildObject


{-| Codec for NetworkInterfaceList. -}
networkInterfaceListCodec : Codec NetworkInterfaceList
networkInterfaceListCodec =
    Codec.list networkInterfaceCodec


{-| Codec for NetworkInterfaceIpv6AddressesList. -}
networkInterfaceIpv6AddressesListCodec : Codec NetworkInterfaceIpv6AddressesList
networkInterfaceIpv6AddressesListCodec =
    Codec.list networkInterfaceIpv6AddressCodec


{-| Codec for NetworkInterfaceIpv6Address. -}
networkInterfaceIpv6AddressCodec : Codec NetworkInterfaceIpv6Address
networkInterfaceIpv6AddressCodec =
    Codec.object NetworkInterfaceIpv6Address |> Codec.field "Ipv6Address" .ipv6Address Codec.string |> Codec.buildObject


{-| Codec for NetworkInterfaceIdList. -}
networkInterfaceIdListCodec : Codec NetworkInterfaceIdList
networkInterfaceIdListCodec =
    Codec.list Codec.string


{-| Codec for NetworkInterfaceCreationType. -}
networkInterfaceCreationTypeCodec : Codec NetworkInterfaceCreationType
networkInterfaceCreationTypeCodec =
    Codec.build (Enum.encoder networkInterfaceCreationType) (Enum.decoder networkInterfaceCreationType)


{-| Codec for NetworkInterfaceAttribute. -}
networkInterfaceAttributeCodec : Codec NetworkInterfaceAttribute
networkInterfaceAttributeCodec =
    Codec.build (Enum.encoder networkInterfaceAttribute) (Enum.decoder networkInterfaceAttribute)


{-| Codec for NetworkInterfaceAttachmentChanges. -}
networkInterfaceAttachmentChangesCodec : Codec NetworkInterfaceAttachmentChanges
networkInterfaceAttachmentChangesCodec =
    Codec.object NetworkInterfaceAttachmentChanges
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AttachmentId" .attachmentId Codec.string
        |> Codec.buildObject


{-| Codec for NetworkInterfaceAttachment. -}
networkInterfaceAttachmentCodec : Codec NetworkInterfaceAttachment
networkInterfaceAttachmentCodec =
    Codec.object NetworkInterfaceAttachment
        |> Codec.field "Status" .status attachmentStatusCodec
        |> Codec.field "InstanceOwnerId" .instanceOwnerId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DeviceIndex" .deviceIndex Codec.int
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AttachmentId" .attachmentId Codec.string
        |> Codec.field "AttachTime" .attachTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for NetworkInterfaceAssociation. -}
networkInterfaceAssociationCodec : Codec NetworkInterfaceAssociation
networkInterfaceAssociationCodec =
    Codec.object NetworkInterfaceAssociation
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "PublicDnsName" .publicDnsName Codec.string
        |> Codec.field "IpOwnerId" .ipOwnerId Codec.string
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.field "AllocationId" .allocationId Codec.string
        |> Codec.buildObject


{-| Codec for NetworkInterface. -}
networkInterfaceCodec : Codec NetworkInterface
networkInterfaceCodec =
    Codec.object NetworkInterface
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "TagSet" .tagSet tagListCodec
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "Status" .status networkInterfaceStatusCodec
        |> Codec.field "SourceDestCheck" .sourceDestCheck Codec.bool
        |> Codec.field "RequesterManaged" .requesterManaged Codec.bool
        |> Codec.field "RequesterId" .requesterId Codec.string
        |> Codec.field "PrivateIpAddresses" .privateIpAddresses networkInterfacePrivateIpAddressListCodec
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "PrivateDnsName" .privateDnsName Codec.string
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "MacAddress" .macAddress Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses networkInterfaceIpv6AddressesListCodec
        |> Codec.field "InterfaceType" .interfaceType networkInterfaceTypeCodec
        |> Codec.field "Groups" .groups groupIdentifierListCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "Attachment" .attachment networkInterfaceAttachmentCodec
        |> Codec.field "Association" .association networkInterfaceAssociationCodec
        |> Codec.buildObject


{-| Codec for NetworkAclList. -}
networkAclListCodec : Codec NetworkAclList
networkAclListCodec =
    Codec.list networkAclCodec


{-| Codec for NetworkAclEntryList. -}
networkAclEntryListCodec : Codec NetworkAclEntryList
networkAclEntryListCodec =
    Codec.list networkAclEntryCodec


{-| Codec for NetworkAclEntry. -}
networkAclEntryCodec : Codec NetworkAclEntry
networkAclEntryCodec =
    Codec.object NetworkAclEntry
        |> Codec.field "RuleNumber" .ruleNumber Codec.int
        |> Codec.field "RuleAction" .ruleAction ruleActionCodec
        |> Codec.field "Protocol" .protocol Codec.string
        |> Codec.field "PortRange" .portRange portRangeCodec
        |> Codec.field "Ipv6CidrBlock" .ipv6CidrBlock Codec.string
        |> Codec.field "IcmpTypeCode" .icmpTypeCode icmpTypeCodeCodec
        |> Codec.field "Egress" .egress Codec.bool
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for NetworkAclAssociationList. -}
networkAclAssociationListCodec : Codec NetworkAclAssociationList
networkAclAssociationListCodec =
    Codec.list networkAclAssociationCodec


{-| Codec for NetworkAclAssociation. -}
networkAclAssociationCodec : Codec NetworkAclAssociation
networkAclAssociationCodec =
    Codec.object NetworkAclAssociation
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "NetworkAclId" .networkAclId Codec.string
        |> Codec.field "NetworkAclAssociationId" .networkAclAssociationId Codec.string
        |> Codec.buildObject


{-| Codec for NetworkAcl. -}
networkAclCodec : Codec NetworkAcl
networkAclCodec =
    Codec.object NetworkAcl
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "NetworkAclId" .networkAclId Codec.string
        |> Codec.field "IsDefault" .isDefault Codec.bool
        |> Codec.field "Entries" .entries networkAclEntryListCodec
        |> Codec.field "Associations" .associations networkAclAssociationListCodec
        |> Codec.buildObject


{-| Codec for NatGatewayState. -}
natGatewayStateCodec : Codec NatGatewayState
natGatewayStateCodec =
    Codec.build (Enum.encoder natGatewayState) (Enum.decoder natGatewayState)


{-| Codec for NatGatewayList. -}
natGatewayListCodec : Codec NatGatewayList
natGatewayListCodec =
    Codec.list natGatewayCodec


{-| Codec for NatGatewayAddressList. -}
natGatewayAddressListCodec : Codec NatGatewayAddressList
natGatewayAddressListCodec =
    Codec.list natGatewayAddressCodec


{-| Codec for NatGatewayAddress. -}
natGatewayAddressCodec : Codec NatGatewayAddress
natGatewayAddressCodec =
    Codec.object NatGatewayAddress
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "PrivateIp" .privateIp Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "AllocationId" .allocationId Codec.string
        |> Codec.buildObject


{-| Codec for NatGateway. -}
natGatewayCodec : Codec NatGateway
natGatewayCodec =
    Codec.object NatGateway
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "State" .state natGatewayStateCodec
        |> Codec.field "ProvisionedBandwidth" .provisionedBandwidth provisionedBandwidthCodec
        |> Codec.field "NatGatewayId" .natGatewayId Codec.string
        |> Codec.field "NatGatewayAddresses" .natGatewayAddresses natGatewayAddressListCodec
        |> Codec.field "FailureMessage" .failureMessage Codec.string
        |> Codec.field "FailureCode" .failureCode Codec.string
        |> Codec.field "DeleteTime" .deleteTime dateTimeCodec
        |> Codec.field "CreateTime" .createTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for MovingAddressStatusSet. -}
movingAddressStatusSetCodec : Codec MovingAddressStatusSet
movingAddressStatusSetCodec =
    Codec.list movingAddressStatusCodec


{-| Codec for MovingAddressStatus. -}
movingAddressStatusCodec : Codec MovingAddressStatus
movingAddressStatusCodec =
    Codec.object MovingAddressStatus
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "MoveStatus" .moveStatus moveStatusCodec
        |> Codec.buildObject


{-| Codec for MoveStatus. -}
moveStatusCodec : Codec MoveStatus
moveStatusCodec =
    Codec.build (Enum.encoder moveStatus) (Enum.decoder moveStatus)


{-| Codec for MoveAddressToVpcResult. -}
moveAddressToVpcResultCodec : Codec MoveAddressToVpcResult
moveAddressToVpcResultCodec =
    Codec.object MoveAddressToVpcResult
        |> Codec.field "Status" .status statusCodec
        |> Codec.field "AllocationId" .allocationId Codec.string
        |> Codec.buildObject


{-| Codec for MoveAddressToVpcRequest. -}
moveAddressToVpcRequestCodec : Codec MoveAddressToVpcRequest
moveAddressToVpcRequestCodec =
    Codec.object MoveAddressToVpcRequest
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for MonitoringState. -}
monitoringStateCodec : Codec MonitoringState
monitoringStateCodec =
    Codec.build (Enum.encoder monitoringState) (Enum.decoder monitoringState)


{-| Codec for Monitoring. -}
monitoringCodec : Codec Monitoring
monitoringCodec =
    Codec.object Monitoring |> Codec.field "State" .state monitoringStateCodec |> Codec.buildObject


{-| Codec for MonitorInstancesResult. -}
monitorInstancesResultCodec : Codec MonitorInstancesResult
monitorInstancesResultCodec =
    Codec.object MonitorInstancesResult
        |> Codec.field "InstanceMonitorings" .instanceMonitorings instanceMonitoringListCodec
        |> Codec.buildObject


{-| Codec for MonitorInstancesRequest. -}
monitorInstancesRequestCodec : Codec MonitorInstancesRequest
monitorInstancesRequestCodec =
    Codec.object MonitorInstancesRequest
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyVpnConnectionResult. -}
modifyVpnConnectionResultCodec : Codec ModifyVpnConnectionResult
modifyVpnConnectionResultCodec =
    Codec.object ModifyVpnConnectionResult
        |> Codec.field "VpnConnection" .vpnConnection vpnConnectionCodec
        |> Codec.buildObject


{-| Codec for ModifyVpnConnectionRequest. -}
modifyVpnConnectionRequestCodec : Codec ModifyVpnConnectionRequest
modifyVpnConnectionRequestCodec =
    Codec.object ModifyVpnConnectionRequest
        |> Codec.field "VpnGatewayId" .vpnGatewayId Codec.string
        |> Codec.field "VpnConnectionId" .vpnConnectionId Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyVpcTenancyResult. -}
modifyVpcTenancyResultCodec : Codec ModifyVpcTenancyResult
modifyVpcTenancyResultCodec =
    Codec.object ModifyVpcTenancyResult |> Codec.field "ReturnValue" .returnValue Codec.bool |> Codec.buildObject


{-| Codec for ModifyVpcTenancyRequest. -}
modifyVpcTenancyRequestCodec : Codec ModifyVpcTenancyRequest
modifyVpcTenancyRequestCodec =
    Codec.object ModifyVpcTenancyRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "InstanceTenancy" .instanceTenancy vpcTenancyCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyVpcPeeringConnectionOptionsResult. -}
modifyVpcPeeringConnectionOptionsResultCodec : Codec ModifyVpcPeeringConnectionOptionsResult
modifyVpcPeeringConnectionOptionsResultCodec =
    Codec.object ModifyVpcPeeringConnectionOptionsResult
        |> Codec.field
            "RequesterPeeringConnectionOptions"
            .requesterPeeringConnectionOptions
            peeringConnectionOptionsCodec
        |> Codec.field
            "AccepterPeeringConnectionOptions"
            .accepterPeeringConnectionOptions
            peeringConnectionOptionsCodec
        |> Codec.buildObject


{-| Codec for ModifyVpcPeeringConnectionOptionsRequest. -}
modifyVpcPeeringConnectionOptionsRequestCodec : Codec ModifyVpcPeeringConnectionOptionsRequest
modifyVpcPeeringConnectionOptionsRequestCodec =
    Codec.object ModifyVpcPeeringConnectionOptionsRequest
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field
            "RequesterPeeringConnectionOptions"
            .requesterPeeringConnectionOptions
            peeringConnectionOptionsRequestCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field
            "AccepterPeeringConnectionOptions"
            .accepterPeeringConnectionOptions
            peeringConnectionOptionsRequestCodec
        |> Codec.buildObject


{-| Codec for ModifyVpcEndpointServicePermissionsResult. -}
modifyVpcEndpointServicePermissionsResultCodec : Codec ModifyVpcEndpointServicePermissionsResult
modifyVpcEndpointServicePermissionsResultCodec =
    Codec.object ModifyVpcEndpointServicePermissionsResult
        |> Codec.field "ReturnValue" .returnValue Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyVpcEndpointServicePermissionsRequest. -}
modifyVpcEndpointServicePermissionsRequestCodec : Codec ModifyVpcEndpointServicePermissionsRequest
modifyVpcEndpointServicePermissionsRequestCodec =
    Codec.object ModifyVpcEndpointServicePermissionsRequest
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "RemoveAllowedPrincipals" .removeAllowedPrincipals valueStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AddAllowedPrincipals" .addAllowedPrincipals valueStringListCodec
        |> Codec.buildObject


{-| Codec for ModifyVpcEndpointServiceConfigurationResult. -}
modifyVpcEndpointServiceConfigurationResultCodec : Codec ModifyVpcEndpointServiceConfigurationResult
modifyVpcEndpointServiceConfigurationResultCodec =
    Codec.object ModifyVpcEndpointServiceConfigurationResult
        |> Codec.field "Return" .return Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyVpcEndpointServiceConfigurationRequest. -}
modifyVpcEndpointServiceConfigurationRequestCodec : Codec ModifyVpcEndpointServiceConfigurationRequest
modifyVpcEndpointServiceConfigurationRequestCodec =
    Codec.object ModifyVpcEndpointServiceConfigurationRequest
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "RemoveNetworkLoadBalancerArns" .removeNetworkLoadBalancerArns valueStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AddNetworkLoadBalancerArns" .addNetworkLoadBalancerArns valueStringListCodec
        |> Codec.field "AcceptanceRequired" .acceptanceRequired Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyVpcEndpointResult. -}
modifyVpcEndpointResultCodec : Codec ModifyVpcEndpointResult
modifyVpcEndpointResultCodec =
    Codec.object ModifyVpcEndpointResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for ModifyVpcEndpointRequest. -}
modifyVpcEndpointRequestCodec : Codec ModifyVpcEndpointRequest
modifyVpcEndpointRequestCodec =
    Codec.object ModifyVpcEndpointRequest
        |> Codec.field "VpcEndpointId" .vpcEndpointId Codec.string
        |> Codec.field "ResetPolicy" .resetPolicy Codec.bool
        |> Codec.field "RemoveSubnetIds" .removeSubnetIds valueStringListCodec
        |> Codec.field "RemoveSecurityGroupIds" .removeSecurityGroupIds valueStringListCodec
        |> Codec.field "RemoveRouteTableIds" .removeRouteTableIds valueStringListCodec
        |> Codec.field "PrivateDnsEnabled" .privateDnsEnabled Codec.bool
        |> Codec.field "PolicyDocument" .policyDocument Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AddSubnetIds" .addSubnetIds valueStringListCodec
        |> Codec.field "AddSecurityGroupIds" .addSecurityGroupIds valueStringListCodec
        |> Codec.field "AddRouteTableIds" .addRouteTableIds valueStringListCodec
        |> Codec.buildObject


{-| Codec for ModifyVpcEndpointConnectionNotificationResult. -}
modifyVpcEndpointConnectionNotificationResultCodec : Codec ModifyVpcEndpointConnectionNotificationResult
modifyVpcEndpointConnectionNotificationResultCodec =
    Codec.object ModifyVpcEndpointConnectionNotificationResult
        |> Codec.field "ReturnValue" .returnValue Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyVpcEndpointConnectionNotificationRequest. -}
modifyVpcEndpointConnectionNotificationRequestCodec : Codec ModifyVpcEndpointConnectionNotificationRequest
modifyVpcEndpointConnectionNotificationRequestCodec =
    Codec.object ModifyVpcEndpointConnectionNotificationRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ConnectionNotificationId" .connectionNotificationId Codec.string
        |> Codec.field "ConnectionNotificationArn" .connectionNotificationArn Codec.string
        |> Codec.field "ConnectionEvents" .connectionEvents valueStringListCodec
        |> Codec.buildObject


{-| Codec for ModifyVpcAttributeRequest. -}
modifyVpcAttributeRequestCodec : Codec ModifyVpcAttributeRequest
modifyVpcAttributeRequestCodec =
    Codec.object ModifyVpcAttributeRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "EnableDnsSupport" .enableDnsSupport attributeBooleanValueCodec
        |> Codec.field "EnableDnsHostnames" .enableDnsHostnames attributeBooleanValueCodec
        |> Codec.buildObject


{-| Codec for ModifyVolumeResult. -}
modifyVolumeResultCodec : Codec ModifyVolumeResult
modifyVolumeResultCodec =
    Codec.object ModifyVolumeResult
        |> Codec.field "VolumeModification" .volumeModification volumeModificationCodec
        |> Codec.buildObject


{-| Codec for ModifyVolumeRequest. -}
modifyVolumeRequestCodec : Codec ModifyVolumeRequest
modifyVolumeRequestCodec =
    Codec.object ModifyVolumeRequest
        |> Codec.field "VolumeType" .volumeType volumeTypeCodec
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "Size" .size Codec.int
        |> Codec.field "Iops" .iops Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyVolumeAttributeRequest. -}
modifyVolumeAttributeRequestCodec : Codec ModifyVolumeAttributeRequest
modifyVolumeAttributeRequestCodec =
    Codec.object ModifyVolumeAttributeRequest
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AutoEnableIO" .autoEnableIo attributeBooleanValueCodec
        |> Codec.buildObject


{-| Codec for ModifyTransitGatewayVpcAttachmentResult. -}
modifyTransitGatewayVpcAttachmentResultCodec : Codec ModifyTransitGatewayVpcAttachmentResult
modifyTransitGatewayVpcAttachmentResultCodec =
    Codec.object ModifyTransitGatewayVpcAttachmentResult
        |> Codec.field "TransitGatewayVpcAttachment" .transitGatewayVpcAttachment transitGatewayVpcAttachmentCodec
        |> Codec.buildObject


{-| Codec for ModifyTransitGatewayVpcAttachmentRequestOptions. -}
modifyTransitGatewayVpcAttachmentRequestOptionsCodec : Codec ModifyTransitGatewayVpcAttachmentRequestOptions
modifyTransitGatewayVpcAttachmentRequestOptionsCodec =
    Codec.object ModifyTransitGatewayVpcAttachmentRequestOptions
        |> Codec.field "Ipv6Support" .ipv6Support ipv6SupportValueCodec
        |> Codec.field "DnsSupport" .dnsSupport dnsSupportValueCodec
        |> Codec.buildObject


{-| Codec for ModifyTransitGatewayVpcAttachmentRequest. -}
modifyTransitGatewayVpcAttachmentRequestCodec : Codec ModifyTransitGatewayVpcAttachmentRequest
modifyTransitGatewayVpcAttachmentRequestCodec =
    Codec.object ModifyTransitGatewayVpcAttachmentRequest
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "RemoveSubnetIds" .removeSubnetIds valueStringListCodec
        |> Codec.field "Options" .options modifyTransitGatewayVpcAttachmentRequestOptionsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AddSubnetIds" .addSubnetIds valueStringListCodec
        |> Codec.buildObject


{-| Codec for ModifyTrafficMirrorSessionResult. -}
modifyTrafficMirrorSessionResultCodec : Codec ModifyTrafficMirrorSessionResult
modifyTrafficMirrorSessionResultCodec =
    Codec.object ModifyTrafficMirrorSessionResult
        |> Codec.field "TrafficMirrorSession" .trafficMirrorSession trafficMirrorSessionCodec
        |> Codec.buildObject


{-| Codec for ModifyTrafficMirrorSessionRequest. -}
modifyTrafficMirrorSessionRequestCodec : Codec ModifyTrafficMirrorSessionRequest
modifyTrafficMirrorSessionRequestCodec =
    Codec.object ModifyTrafficMirrorSessionRequest
        |> Codec.field "VirtualNetworkId" .virtualNetworkId Codec.int
        |> Codec.field "TrafficMirrorTargetId" .trafficMirrorTargetId Codec.string
        |> Codec.field "TrafficMirrorSessionId" .trafficMirrorSessionId Codec.string
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.field "SessionNumber" .sessionNumber Codec.int
        |> Codec.field "RemoveFields" .removeFields trafficMirrorSessionFieldListCodec
        |> Codec.field "PacketLength" .packetLength Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ModifyTrafficMirrorFilterRuleResult. -}
modifyTrafficMirrorFilterRuleResultCodec : Codec ModifyTrafficMirrorFilterRuleResult
modifyTrafficMirrorFilterRuleResultCodec =
    Codec.object ModifyTrafficMirrorFilterRuleResult
        |> Codec.field "TrafficMirrorFilterRule" .trafficMirrorFilterRule trafficMirrorFilterRuleCodec
        |> Codec.buildObject


{-| Codec for ModifyTrafficMirrorFilterRuleRequest. -}
modifyTrafficMirrorFilterRuleRequestCodec : Codec ModifyTrafficMirrorFilterRuleRequest
modifyTrafficMirrorFilterRuleRequestCodec =
    Codec.object ModifyTrafficMirrorFilterRuleRequest
        |> Codec.field "TrafficMirrorFilterRuleId" .trafficMirrorFilterRuleId Codec.string
        |> Codec.field "TrafficDirection" .trafficDirection trafficDirectionCodec
        |> Codec.field "SourcePortRange" .sourcePortRange trafficMirrorPortRangeRequestCodec
        |> Codec.field "SourceCidrBlock" .sourceCidrBlock Codec.string
        |> Codec.field "RuleNumber" .ruleNumber Codec.int
        |> Codec.field "RuleAction" .ruleAction trafficMirrorRuleActionCodec
        |> Codec.field "RemoveFields" .removeFields trafficMirrorFilterRuleFieldListCodec
        |> Codec.field "Protocol" .protocol Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationPortRange" .destinationPortRange trafficMirrorPortRangeRequestCodec
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ModifyTrafficMirrorFilterNetworkServicesResult. -}
modifyTrafficMirrorFilterNetworkServicesResultCodec : Codec ModifyTrafficMirrorFilterNetworkServicesResult
modifyTrafficMirrorFilterNetworkServicesResultCodec =
    Codec.object ModifyTrafficMirrorFilterNetworkServicesResult
        |> Codec.field "TrafficMirrorFilter" .trafficMirrorFilter trafficMirrorFilterCodec
        |> Codec.buildObject


{-| Codec for ModifyTrafficMirrorFilterNetworkServicesRequest. -}
modifyTrafficMirrorFilterNetworkServicesRequestCodec : Codec ModifyTrafficMirrorFilterNetworkServicesRequest
modifyTrafficMirrorFilterNetworkServicesRequestCodec =
    Codec.object ModifyTrafficMirrorFilterNetworkServicesRequest
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.field "RemoveNetworkServices" .removeNetworkServices trafficMirrorNetworkServiceListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AddNetworkServices" .addNetworkServices trafficMirrorNetworkServiceListCodec
        |> Codec.buildObject


{-| Codec for ModifySubnetAttributeRequest. -}
modifySubnetAttributeRequestCodec : Codec ModifySubnetAttributeRequest
modifySubnetAttributeRequestCodec =
    Codec.object ModifySubnetAttributeRequest
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "MapPublicIpOnLaunch" .mapPublicIpOnLaunch attributeBooleanValueCodec
        |> Codec.field "AssignIpv6AddressOnCreation" .assignIpv6AddressOnCreation attributeBooleanValueCodec
        |> Codec.buildObject


{-| Codec for ModifySpotFleetRequestResponse. -}
modifySpotFleetRequestResponseCodec : Codec ModifySpotFleetRequestResponse
modifySpotFleetRequestResponseCodec =
    Codec.object ModifySpotFleetRequestResponse |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for ModifySpotFleetRequestRequest. -}
modifySpotFleetRequestRequestCodec : Codec ModifySpotFleetRequestRequest
modifySpotFleetRequestRequestCodec =
    Codec.object ModifySpotFleetRequestRequest
        |> Codec.field "TargetCapacity" .targetCapacity Codec.int
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.field "OnDemandTargetCapacity" .onDemandTargetCapacity Codec.int
        |> Codec.field
            "ExcessCapacityTerminationPolicy"
            .excessCapacityTerminationPolicy
            excessCapacityTerminationPolicyCodec
        |> Codec.buildObject


{-| Codec for ModifySnapshotAttributeRequest. -}
modifySnapshotAttributeRequestCodec : Codec ModifySnapshotAttributeRequest
modifySnapshotAttributeRequestCodec =
    Codec.object ModifySnapshotAttributeRequest
        |> Codec.field "UserIds" .userIds userIdStringListCodec
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "OperationType" .operationType operationTypeCodec
        |> Codec.field "GroupNames" .groupNames groupNameStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CreateVolumePermission" .createVolumePermission createVolumePermissionModificationsCodec
        |> Codec.field "Attribute" .attribute snapshotAttributeNameCodec
        |> Codec.buildObject


{-| Codec for ModifyReservedInstancesResult. -}
modifyReservedInstancesResultCodec : Codec ModifyReservedInstancesResult
modifyReservedInstancesResultCodec =
    Codec.object ModifyReservedInstancesResult
        |> Codec.field "ReservedInstancesModificationId" .reservedInstancesModificationId Codec.string
        |> Codec.buildObject


{-| Codec for ModifyReservedInstancesRequest. -}
modifyReservedInstancesRequestCodec : Codec ModifyReservedInstancesRequest
modifyReservedInstancesRequestCodec =
    Codec.object ModifyReservedInstancesRequest
        |> Codec.field "TargetConfigurations" .targetConfigurations reservedInstancesConfigurationListCodec
        |> Codec.field "ReservedInstancesIds" .reservedInstancesIds reservedInstancesIdStringListCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for ModifyNetworkInterfaceAttributeRequest. -}
modifyNetworkInterfaceAttributeRequestCodec : Codec ModifyNetworkInterfaceAttributeRequest
modifyNetworkInterfaceAttributeRequestCodec =
    Codec.object ModifyNetworkInterfaceAttributeRequest
        |> Codec.field "SourceDestCheck" .sourceDestCheck attributeBooleanValueCodec
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Groups" .groups securityGroupIdStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description attributeValueCodec
        |> Codec.field "Attachment" .attachment networkInterfaceAttachmentChangesCodec
        |> Codec.buildObject


{-| Codec for ModifyLaunchTemplateResult. -}
modifyLaunchTemplateResultCodec : Codec ModifyLaunchTemplateResult
modifyLaunchTemplateResultCodec =
    Codec.object ModifyLaunchTemplateResult
        |> Codec.field "LaunchTemplate" .launchTemplate launchTemplateCodec
        |> Codec.buildObject


{-| Codec for ModifyLaunchTemplateRequest. -}
modifyLaunchTemplateRequestCodec : Codec ModifyLaunchTemplateRequest
modifyLaunchTemplateRequestCodec =
    Codec.object ModifyLaunchTemplateRequest
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DefaultVersion" .defaultVersion Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for ModifyInstancePlacementResult. -}
modifyInstancePlacementResultCodec : Codec ModifyInstancePlacementResult
modifyInstancePlacementResultCodec =
    Codec.object ModifyInstancePlacementResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for ModifyInstancePlacementRequest. -}
modifyInstancePlacementRequestCodec : Codec ModifyInstancePlacementRequest
modifyInstancePlacementRequestCodec =
    Codec.object ModifyInstancePlacementRequest
        |> Codec.field "Tenancy" .tenancy hostTenancyCodec
        |> Codec.field "PartitionNumber" .partitionNumber Codec.int
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "HostId" .hostId Codec.string
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "Affinity" .affinity affinityCodec
        |> Codec.buildObject


{-| Codec for ModifyInstanceEventStartTimeResult. -}
modifyInstanceEventStartTimeResultCodec : Codec ModifyInstanceEventStartTimeResult
modifyInstanceEventStartTimeResultCodec =
    Codec.object ModifyInstanceEventStartTimeResult
        |> Codec.field "Event" .event instanceStatusEventCodec
        |> Codec.buildObject


{-| Codec for ModifyInstanceEventStartTimeRequest. -}
modifyInstanceEventStartTimeRequestCodec : Codec ModifyInstanceEventStartTimeRequest
modifyInstanceEventStartTimeRequestCodec =
    Codec.object ModifyInstanceEventStartTimeRequest
        |> Codec.field "NotBefore" .notBefore dateTimeCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "InstanceEventId" .instanceEventId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyInstanceCreditSpecificationResult. -}
modifyInstanceCreditSpecificationResultCodec : Codec ModifyInstanceCreditSpecificationResult
modifyInstanceCreditSpecificationResultCodec =
    Codec.object ModifyInstanceCreditSpecificationResult
        |> Codec.field
            "UnsuccessfulInstanceCreditSpecifications"
            .unsuccessfulInstanceCreditSpecifications
            unsuccessfulInstanceCreditSpecificationSetCodec
        |> Codec.field
            "SuccessfulInstanceCreditSpecifications"
            .successfulInstanceCreditSpecifications
            successfulInstanceCreditSpecificationSetCodec
        |> Codec.buildObject


{-| Codec for ModifyInstanceCreditSpecificationRequest. -}
modifyInstanceCreditSpecificationRequestCodec : Codec ModifyInstanceCreditSpecificationRequest
modifyInstanceCreditSpecificationRequestCodec =
    Codec.object ModifyInstanceCreditSpecificationRequest
        |> Codec.field
            "InstanceCreditSpecifications"
            .instanceCreditSpecifications
            instanceCreditSpecificationListRequestCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for ModifyInstanceCapacityReservationAttributesResult. -}
modifyInstanceCapacityReservationAttributesResultCodec : Codec ModifyInstanceCapacityReservationAttributesResult
modifyInstanceCapacityReservationAttributesResultCodec =
    Codec.object ModifyInstanceCapacityReservationAttributesResult
        |> Codec.field "Return" .return Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyInstanceCapacityReservationAttributesRequest. -}
modifyInstanceCapacityReservationAttributesRequestCodec : Codec ModifyInstanceCapacityReservationAttributesRequest
modifyInstanceCapacityReservationAttributesRequestCodec =
    Codec.object ModifyInstanceCapacityReservationAttributesRequest
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field
            "CapacityReservationSpecification"
            .capacityReservationSpecification
            capacityReservationSpecificationCodec
        |> Codec.buildObject


{-| Codec for ModifyInstanceAttributeRequest. -}
modifyInstanceAttributeRequestCodec : Codec ModifyInstanceAttributeRequest
modifyInstanceAttributeRequestCodec =
    Codec.object ModifyInstanceAttributeRequest
        |> Codec.field "Value" .value Codec.string
        |> Codec.field "UserData" .userData blobAttributeValueCodec
        |> Codec.field "SriovNetSupport" .sriovNetSupport attributeValueCodec
        |> Codec.field "SourceDestCheck" .sourceDestCheck attributeBooleanValueCodec
        |> Codec.field "Ramdisk" .ramdisk attributeValueCodec
        |> Codec.field "Kernel" .kernel attributeValueCodec
        |> Codec.field "InstanceType" .instanceType attributeValueCodec
        |> Codec.field "InstanceInitiatedShutdownBehavior" .instanceInitiatedShutdownBehavior attributeValueCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Groups" .groups groupIdStringListCodec
        |> Codec.field "EnaSupport" .enaSupport attributeBooleanValueCodec
        |> Codec.field "EbsOptimized" .ebsOptimized attributeBooleanValueCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DisableApiTermination" .disableApiTermination attributeBooleanValueCodec
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings instanceBlockDeviceMappingSpecificationListCodec
        |> Codec.field "Attribute" .attribute instanceAttributeNameCodec
        |> Codec.buildObject


{-| Codec for ModifyImageAttributeRequest. -}
modifyImageAttributeRequestCodec : Codec ModifyImageAttributeRequest
modifyImageAttributeRequestCodec =
    Codec.object ModifyImageAttributeRequest
        |> Codec.field "Value" .value Codec.string
        |> Codec.field "UserIds" .userIds userIdStringListCodec
        |> Codec.field "UserGroups" .userGroups userGroupStringListCodec
        |> Codec.field "ProductCodes" .productCodes productCodeStringListCodec
        |> Codec.field "OperationType" .operationType operationTypeCodec
        |> Codec.field "LaunchPermission" .launchPermission launchPermissionModificationsCodec
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description attributeValueCodec
        |> Codec.field "Attribute" .attribute Codec.string
        |> Codec.buildObject


{-| Codec for ModifyIdentityIdFormatRequest. -}
modifyIdentityIdFormatRequestCodec : Codec ModifyIdentityIdFormatRequest
modifyIdentityIdFormatRequestCodec =
    Codec.object ModifyIdentityIdFormatRequest
        |> Codec.field "UseLongIds" .useLongIds Codec.bool
        |> Codec.field "Resource" .resource Codec.string
        |> Codec.field "PrincipalArn" .principalArn Codec.string
        |> Codec.buildObject


{-| Codec for ModifyIdFormatRequest. -}
modifyIdFormatRequestCodec : Codec ModifyIdFormatRequest
modifyIdFormatRequestCodec =
    Codec.object ModifyIdFormatRequest
        |> Codec.field "UseLongIds" .useLongIds Codec.bool
        |> Codec.field "Resource" .resource Codec.string
        |> Codec.buildObject


{-| Codec for ModifyHostsResult. -}
modifyHostsResultCodec : Codec ModifyHostsResult
modifyHostsResultCodec =
    Codec.object ModifyHostsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemListCodec
        |> Codec.field "Successful" .successful responseHostIdListCodec
        |> Codec.buildObject


{-| Codec for ModifyHostsRequest. -}
modifyHostsRequestCodec : Codec ModifyHostsRequest
modifyHostsRequestCodec =
    Codec.object ModifyHostsRequest
        |> Codec.field "HostRecovery" .hostRecovery hostRecoveryCodec
        |> Codec.field "HostIds" .hostIds requestHostIdListCodec
        |> Codec.field "AutoPlacement" .autoPlacement autoPlacementCodec
        |> Codec.buildObject


{-| Codec for ModifyFpgaImageAttributeResult. -}
modifyFpgaImageAttributeResultCodec : Codec ModifyFpgaImageAttributeResult
modifyFpgaImageAttributeResultCodec =
    Codec.object ModifyFpgaImageAttributeResult
        |> Codec.field "FpgaImageAttribute" .fpgaImageAttribute fpgaImageAttributeCodec
        |> Codec.buildObject


{-| Codec for ModifyFpgaImageAttributeRequest. -}
modifyFpgaImageAttributeRequestCodec : Codec ModifyFpgaImageAttributeRequest
modifyFpgaImageAttributeRequestCodec =
    Codec.object ModifyFpgaImageAttributeRequest
        |> Codec.field "UserIds" .userIds userIdStringListCodec
        |> Codec.field "UserGroups" .userGroups userGroupStringListCodec
        |> Codec.field "ProductCodes" .productCodes productCodeStringListCodec
        |> Codec.field "OperationType" .operationType operationTypeCodec
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "LoadPermission" .loadPermission loadPermissionModificationsCodec
        |> Codec.field "FpgaImageId" .fpgaImageId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "Attribute" .attribute fpgaImageAttributeNameCodec
        |> Codec.buildObject


{-| Codec for ModifyFleetResult. -}
modifyFleetResultCodec : Codec ModifyFleetResult
modifyFleetResultCodec =
    Codec.object ModifyFleetResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for ModifyFleetRequest. -}
modifyFleetRequestCodec : Codec ModifyFleetRequest
modifyFleetRequestCodec =
    Codec.object ModifyFleetRequest
        |> Codec.field
            "TargetCapacitySpecification"
            .targetCapacitySpecification
            targetCapacitySpecificationRequestCodec
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.field
            "ExcessCapacityTerminationPolicy"
            .excessCapacityTerminationPolicy
            fleetExcessCapacityTerminationPolicyCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyEbsDefaultKmsKeyIdResult. -}
modifyEbsDefaultKmsKeyIdResultCodec : Codec ModifyEbsDefaultKmsKeyIdResult
modifyEbsDefaultKmsKeyIdResultCodec =
    Codec.object ModifyEbsDefaultKmsKeyIdResult |> Codec.field "KmsKeyId" .kmsKeyId Codec.string |> Codec.buildObject


{-| Codec for ModifyEbsDefaultKmsKeyIdRequest. -}
modifyEbsDefaultKmsKeyIdRequestCodec : Codec ModifyEbsDefaultKmsKeyIdRequest
modifyEbsDefaultKmsKeyIdRequestCodec =
    Codec.object ModifyEbsDefaultKmsKeyIdRequest
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ModifyClientVpnEndpointResult. -}
modifyClientVpnEndpointResultCodec : Codec ModifyClientVpnEndpointResult
modifyClientVpnEndpointResultCodec =
    Codec.object ModifyClientVpnEndpointResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for ModifyClientVpnEndpointRequest. -}
modifyClientVpnEndpointRequestCodec : Codec ModifyClientVpnEndpointRequest
modifyClientVpnEndpointRequestCodec =
    Codec.object ModifyClientVpnEndpointRequest
        |> Codec.field "SplitTunnel" .splitTunnel Codec.bool
        |> Codec.field "ServerCertificateArn" .serverCertificateArn Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DnsServers" .dnsServers dnsServersOptionsModifyStructureCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ConnectionLogOptions" .connectionLogOptions connectionLogOptionsCodec
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for ModifyCapacityReservationResult. -}
modifyCapacityReservationResultCodec : Codec ModifyCapacityReservationResult
modifyCapacityReservationResultCodec =
    Codec.object ModifyCapacityReservationResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for ModifyCapacityReservationRequest. -}
modifyCapacityReservationRequestCodec : Codec ModifyCapacityReservationRequest
modifyCapacityReservationRequestCodec =
    Codec.object ModifyCapacityReservationRequest
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "EndDateType" .endDateType endDateTypeCodec
        |> Codec.field "EndDate" .endDate dateTimeCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CapacityReservationId" .capacityReservationId Codec.string
        |> Codec.buildObject


{-| Codec for MillisecondDateTime. -}
millisecondDateTimeCodec : Codec MillisecondDateTime
millisecondDateTimeCodec =
    Codec.string


{-| Codec for MarketType. -}
marketTypeCodec : Codec MarketType
marketTypeCodec =
    Codec.build (Enum.encoder marketType) (Enum.decoder marketType)


{-| Codec for Long. -}
longCodec : Codec Long
longCodec =
    Codec.int


{-| Codec for LogDestinationType. -}
logDestinationTypeCodec : Codec LogDestinationType
logDestinationTypeCodec =
    Codec.build (Enum.encoder logDestinationType) (Enum.decoder logDestinationType)


{-| Codec for LoadPermissionRequest. -}
loadPermissionRequestCodec : Codec LoadPermissionRequest
loadPermissionRequestCodec =
    Codec.object LoadPermissionRequest
        |> Codec.field "UserId" .userId Codec.string
        |> Codec.field "Group" .group permissionGroupCodec
        |> Codec.buildObject


{-| Codec for LoadPermissionModifications. -}
loadPermissionModificationsCodec : Codec LoadPermissionModifications
loadPermissionModificationsCodec =
    Codec.object LoadPermissionModifications
        |> Codec.field "Remove" .remove loadPermissionListRequestCodec
        |> Codec.field "Add" .add loadPermissionListRequestCodec
        |> Codec.buildObject


{-| Codec for LoadPermissionListRequest. -}
loadPermissionListRequestCodec : Codec LoadPermissionListRequest
loadPermissionListRequestCodec =
    Codec.list loadPermissionRequestCodec


{-| Codec for LoadPermissionList. -}
loadPermissionListCodec : Codec LoadPermissionList
loadPermissionListCodec =
    Codec.list loadPermissionCodec


{-| Codec for LoadPermission. -}
loadPermissionCodec : Codec LoadPermission
loadPermissionCodec =
    Codec.object LoadPermission
        |> Codec.field "UserId" .userId Codec.string
        |> Codec.field "Group" .group permissionGroupCodec
        |> Codec.buildObject


{-| Codec for LoadBalancersConfig. -}
loadBalancersConfigCodec : Codec LoadBalancersConfig
loadBalancersConfigCodec =
    Codec.object LoadBalancersConfig
        |> Codec.field "TargetGroupsConfig" .targetGroupsConfig targetGroupsConfigCodec
        |> Codec.field "ClassicLoadBalancersConfig" .classicLoadBalancersConfig classicLoadBalancersConfigCodec
        |> Codec.buildObject


{-| Codec for ListingStatus. -}
listingStatusCodec : Codec ListingStatus
listingStatusCodec =
    Codec.build (Enum.encoder listingStatus) (Enum.decoder listingStatus)


{-| Codec for ListingState. -}
listingStateCodec : Codec ListingState
listingStateCodec =
    Codec.build (Enum.encoder listingState) (Enum.decoder listingState)


{-| Codec for LicenseSpecificationListRequest. -}
licenseSpecificationListRequestCodec : Codec LicenseSpecificationListRequest
licenseSpecificationListRequestCodec =
    Codec.list licenseConfigurationRequestCodec


{-| Codec for LicenseList. -}
licenseListCodec : Codec LicenseList
licenseListCodec =
    Codec.list licenseConfigurationCodec


{-| Codec for LicenseConfigurationRequest. -}
licenseConfigurationRequestCodec : Codec LicenseConfigurationRequest
licenseConfigurationRequestCodec =
    Codec.object LicenseConfigurationRequest
        |> Codec.field "LicenseConfigurationArn" .licenseConfigurationArn Codec.string
        |> Codec.buildObject


{-| Codec for LicenseConfiguration. -}
licenseConfigurationCodec : Codec LicenseConfiguration
licenseConfigurationCodec =
    Codec.object LicenseConfiguration
        |> Codec.field "LicenseConfigurationArn" .licenseConfigurationArn Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplatesMonitoringRequest. -}
launchTemplatesMonitoringRequestCodec : Codec LaunchTemplatesMonitoringRequest
launchTemplatesMonitoringRequestCodec =
    Codec.object LaunchTemplatesMonitoringRequest |> Codec.field "Enabled" .enabled Codec.bool |> Codec.buildObject


{-| Codec for LaunchTemplatesMonitoring. -}
launchTemplatesMonitoringCodec : Codec LaunchTemplatesMonitoring
launchTemplatesMonitoringCodec =
    Codec.object LaunchTemplatesMonitoring |> Codec.field "Enabled" .enabled Codec.bool |> Codec.buildObject


{-| Codec for LaunchTemplateVersionSet. -}
launchTemplateVersionSetCodec : Codec LaunchTemplateVersionSet
launchTemplateVersionSetCodec =
    Codec.list launchTemplateVersionCodec


{-| Codec for LaunchTemplateVersion. -}
launchTemplateVersionCodec : Codec LaunchTemplateVersion
launchTemplateVersionCodec =
    Codec.object LaunchTemplateVersion
        |> Codec.field "VersionNumber" .versionNumber Codec.int
        |> Codec.field "VersionDescription" .versionDescription versionDescriptionCodec
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.field "LaunchTemplateData" .launchTemplateData responseLaunchTemplateDataCodec
        |> Codec.field "DefaultVersion" .defaultVersion Codec.bool
        |> Codec.field "CreatedBy" .createdBy Codec.string
        |> Codec.field "CreateTime" .createTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplateTagSpecificationRequestList. -}
launchTemplateTagSpecificationRequestListCodec : Codec LaunchTemplateTagSpecificationRequestList
launchTemplateTagSpecificationRequestListCodec =
    Codec.list launchTemplateTagSpecificationRequestCodec


{-| Codec for LaunchTemplateTagSpecificationRequest. -}
launchTemplateTagSpecificationRequestCodec : Codec LaunchTemplateTagSpecificationRequest
launchTemplateTagSpecificationRequestCodec =
    Codec.object LaunchTemplateTagSpecificationRequest
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "ResourceType" .resourceType resourceTypeCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplateTagSpecificationList. -}
launchTemplateTagSpecificationListCodec : Codec LaunchTemplateTagSpecificationList
launchTemplateTagSpecificationListCodec =
    Codec.list launchTemplateTagSpecificationCodec


{-| Codec for LaunchTemplateTagSpecification. -}
launchTemplateTagSpecificationCodec : Codec LaunchTemplateTagSpecification
launchTemplateTagSpecificationCodec =
    Codec.object LaunchTemplateTagSpecification
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "ResourceType" .resourceType resourceTypeCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplateSpotMarketOptionsRequest. -}
launchTemplateSpotMarketOptionsRequestCodec : Codec LaunchTemplateSpotMarketOptionsRequest
launchTemplateSpotMarketOptionsRequestCodec =
    Codec.object LaunchTemplateSpotMarketOptionsRequest
        |> Codec.field "ValidUntil" .validUntil dateTimeCodec
        |> Codec.field "SpotInstanceType" .spotInstanceType spotInstanceTypeCodec
        |> Codec.field "MaxPrice" .maxPrice Codec.string
        |> Codec.field "InstanceInterruptionBehavior" .instanceInterruptionBehavior instanceInterruptionBehaviorCodec
        |> Codec.field "BlockDurationMinutes" .blockDurationMinutes Codec.int
        |> Codec.buildObject


{-| Codec for LaunchTemplateSpotMarketOptions. -}
launchTemplateSpotMarketOptionsCodec : Codec LaunchTemplateSpotMarketOptions
launchTemplateSpotMarketOptionsCodec =
    Codec.object LaunchTemplateSpotMarketOptions
        |> Codec.field "ValidUntil" .validUntil dateTimeCodec
        |> Codec.field "SpotInstanceType" .spotInstanceType spotInstanceTypeCodec
        |> Codec.field "MaxPrice" .maxPrice Codec.string
        |> Codec.field "InstanceInterruptionBehavior" .instanceInterruptionBehavior instanceInterruptionBehaviorCodec
        |> Codec.field "BlockDurationMinutes" .blockDurationMinutes Codec.int
        |> Codec.buildObject


{-| Codec for LaunchTemplateSpecification. -}
launchTemplateSpecificationCodec : Codec LaunchTemplateSpecification
launchTemplateSpecificationCodec =
    Codec.object LaunchTemplateSpecification
        |> Codec.field "Version" .version Codec.string
        |> Codec.field "LaunchTemplateName" .launchTemplateName Codec.string
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateSet. -}
launchTemplateSetCodec : Codec LaunchTemplateSet
launchTemplateSetCodec =
    Codec.list launchTemplateCodec


{-| Codec for LaunchTemplatePlacementRequest. -}
launchTemplatePlacementRequestCodec : Codec LaunchTemplatePlacementRequest
launchTemplatePlacementRequestCodec =
    Codec.object LaunchTemplatePlacementRequest
        |> Codec.field "Tenancy" .tenancy tenancyCodec
        |> Codec.field "SpreadDomain" .spreadDomain Codec.string
        |> Codec.field "HostId" .hostId Codec.string
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "Affinity" .affinity Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplatePlacement. -}
launchTemplatePlacementCodec : Codec LaunchTemplatePlacement
launchTemplatePlacementCodec =
    Codec.object LaunchTemplatePlacement
        |> Codec.field "Tenancy" .tenancy tenancyCodec
        |> Codec.field "SpreadDomain" .spreadDomain Codec.string
        |> Codec.field "HostId" .hostId Codec.string
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "Affinity" .affinity Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateOverridesList. -}
launchTemplateOverridesListCodec : Codec LaunchTemplateOverridesList
launchTemplateOverridesListCodec =
    Codec.list launchTemplateOverridesCodec


{-| Codec for LaunchTemplateOverrides. -}
launchTemplateOverridesCodec : Codec LaunchTemplateOverrides
launchTemplateOverridesCodec =
    Codec.object LaunchTemplateOverrides
        |> Codec.field "WeightedCapacity" .weightedCapacity Codec.float
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SpotPrice" .spotPrice Codec.string
        |> Codec.field "Priority" .priority Codec.float
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateNameStringList. -}
launchTemplateNameStringListCodec : Codec LaunchTemplateNameStringList
launchTemplateNameStringListCodec =
    Codec.list launchTemplateNameCodec


{-| Codec for LaunchTemplateName. -}
launchTemplateNameCodec : Codec LaunchTemplateName
launchTemplateNameCodec =
    Codec.build (Refined.encoder launchTemplateName) (Refined.decoder launchTemplateName)


{-| Codec for LaunchTemplateLicenseSpecificationListRequest. -}
launchTemplateLicenseSpecificationListRequestCodec : Codec LaunchTemplateLicenseSpecificationListRequest
launchTemplateLicenseSpecificationListRequestCodec =
    Codec.list launchTemplateLicenseConfigurationRequestCodec


{-| Codec for LaunchTemplateLicenseList. -}
launchTemplateLicenseListCodec : Codec LaunchTemplateLicenseList
launchTemplateLicenseListCodec =
    Codec.list launchTemplateLicenseConfigurationCodec


{-| Codec for LaunchTemplateLicenseConfigurationRequest. -}
launchTemplateLicenseConfigurationRequestCodec : Codec LaunchTemplateLicenseConfigurationRequest
launchTemplateLicenseConfigurationRequestCodec =
    Codec.object LaunchTemplateLicenseConfigurationRequest
        |> Codec.field "LicenseConfigurationArn" .licenseConfigurationArn Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateLicenseConfiguration. -}
launchTemplateLicenseConfigurationCodec : Codec LaunchTemplateLicenseConfiguration
launchTemplateLicenseConfigurationCodec =
    Codec.object LaunchTemplateLicenseConfiguration
        |> Codec.field "LicenseConfigurationArn" .licenseConfigurationArn Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList. -}
launchTemplateInstanceNetworkInterfaceSpecificationRequestListCodec :
    Codec LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList
launchTemplateInstanceNetworkInterfaceSpecificationRequestListCodec =
    Codec.list launchTemplateInstanceNetworkInterfaceSpecificationRequestCodec


{-| Codec for LaunchTemplateInstanceNetworkInterfaceSpecificationRequest. -}
launchTemplateInstanceNetworkInterfaceSpecificationRequestCodec :
    Codec LaunchTemplateInstanceNetworkInterfaceSpecificationRequest
launchTemplateInstanceNetworkInterfaceSpecificationRequestCodec =
    Codec.object LaunchTemplateInstanceNetworkInterfaceSpecificationRequest
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecondaryPrivateIpAddressCount" .secondaryPrivateIpAddressCount Codec.int
        |> Codec.field "PrivateIpAddresses" .privateIpAddresses privateIpAddressSpecificationListCodec
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses instanceIpv6AddressListRequestCodec
        |> Codec.field "Ipv6AddressCount" .ipv6AddressCount Codec.int
        |> Codec.field "InterfaceType" .interfaceType Codec.string
        |> Codec.field "Groups" .groups securityGroupIdStringListCodec
        |> Codec.field "DeviceIndex" .deviceIndex Codec.int
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AssociatePublicIpAddress" .associatePublicIpAddress Codec.bool
        |> Codec.buildObject


{-| Codec for LaunchTemplateInstanceNetworkInterfaceSpecificationList. -}
launchTemplateInstanceNetworkInterfaceSpecificationListCodec :
    Codec LaunchTemplateInstanceNetworkInterfaceSpecificationList
launchTemplateInstanceNetworkInterfaceSpecificationListCodec =
    Codec.list launchTemplateInstanceNetworkInterfaceSpecificationCodec


{-| Codec for LaunchTemplateInstanceNetworkInterfaceSpecification. -}
launchTemplateInstanceNetworkInterfaceSpecificationCodec : Codec LaunchTemplateInstanceNetworkInterfaceSpecification
launchTemplateInstanceNetworkInterfaceSpecificationCodec =
    Codec.object LaunchTemplateInstanceNetworkInterfaceSpecification
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecondaryPrivateIpAddressCount" .secondaryPrivateIpAddressCount Codec.int
        |> Codec.field "PrivateIpAddresses" .privateIpAddresses privateIpAddressSpecificationListCodec
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses instanceIpv6AddressListCodec
        |> Codec.field "Ipv6AddressCount" .ipv6AddressCount Codec.int
        |> Codec.field "InterfaceType" .interfaceType Codec.string
        |> Codec.field "Groups" .groups groupIdStringListCodec
        |> Codec.field "DeviceIndex" .deviceIndex Codec.int
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AssociatePublicIpAddress" .associatePublicIpAddress Codec.bool
        |> Codec.buildObject


{-| Codec for LaunchTemplateInstanceMarketOptionsRequest. -}
launchTemplateInstanceMarketOptionsRequestCodec : Codec LaunchTemplateInstanceMarketOptionsRequest
launchTemplateInstanceMarketOptionsRequestCodec =
    Codec.object LaunchTemplateInstanceMarketOptionsRequest
        |> Codec.field "SpotOptions" .spotOptions launchTemplateSpotMarketOptionsRequestCodec
        |> Codec.field "MarketType" .marketType marketTypeCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplateInstanceMarketOptions. -}
launchTemplateInstanceMarketOptionsCodec : Codec LaunchTemplateInstanceMarketOptions
launchTemplateInstanceMarketOptionsCodec =
    Codec.object LaunchTemplateInstanceMarketOptions
        |> Codec.field "SpotOptions" .spotOptions launchTemplateSpotMarketOptionsCodec
        |> Codec.field "MarketType" .marketType marketTypeCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplateIamInstanceProfileSpecificationRequest. -}
launchTemplateIamInstanceProfileSpecificationRequestCodec : Codec LaunchTemplateIamInstanceProfileSpecificationRequest
launchTemplateIamInstanceProfileSpecificationRequestCodec =
    Codec.object LaunchTemplateIamInstanceProfileSpecificationRequest
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "Arn" .arn Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateIamInstanceProfileSpecification. -}
launchTemplateIamInstanceProfileSpecificationCodec : Codec LaunchTemplateIamInstanceProfileSpecification
launchTemplateIamInstanceProfileSpecificationCodec =
    Codec.object LaunchTemplateIamInstanceProfileSpecification
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "Arn" .arn Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateHibernationOptionsRequest. -}
launchTemplateHibernationOptionsRequestCodec : Codec LaunchTemplateHibernationOptionsRequest
launchTemplateHibernationOptionsRequestCodec =
    Codec.object LaunchTemplateHibernationOptionsRequest
        |> Codec.field "Configured" .configured Codec.bool
        |> Codec.buildObject


{-| Codec for LaunchTemplateHibernationOptions. -}
launchTemplateHibernationOptionsCodec : Codec LaunchTemplateHibernationOptions
launchTemplateHibernationOptionsCodec =
    Codec.object LaunchTemplateHibernationOptions
        |> Codec.field "Configured" .configured Codec.bool
        |> Codec.buildObject


{-| Codec for LaunchTemplateErrorCode. -}
launchTemplateErrorCodeCodec : Codec LaunchTemplateErrorCode
launchTemplateErrorCodeCodec =
    Codec.build (Enum.encoder launchTemplateErrorCode) (Enum.decoder launchTemplateErrorCode)


{-| Codec for LaunchTemplateElasticInferenceAcceleratorResponseList. -}
launchTemplateElasticInferenceAcceleratorResponseListCodec : Codec LaunchTemplateElasticInferenceAcceleratorResponseList
launchTemplateElasticInferenceAcceleratorResponseListCodec =
    Codec.list launchTemplateElasticInferenceAcceleratorResponseCodec


{-| Codec for LaunchTemplateElasticInferenceAcceleratorResponse. -}
launchTemplateElasticInferenceAcceleratorResponseCodec : Codec LaunchTemplateElasticInferenceAcceleratorResponse
launchTemplateElasticInferenceAcceleratorResponseCodec =
    Codec.object LaunchTemplateElasticInferenceAcceleratorResponse
        |> Codec.field "Type" .type_ Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateElasticInferenceAcceleratorList. -}
launchTemplateElasticInferenceAcceleratorListCodec : Codec LaunchTemplateElasticInferenceAcceleratorList
launchTemplateElasticInferenceAcceleratorListCodec =
    Codec.list launchTemplateElasticInferenceAcceleratorCodec


{-| Codec for LaunchTemplateElasticInferenceAccelerator. -}
launchTemplateElasticInferenceAcceleratorCodec : Codec LaunchTemplateElasticInferenceAccelerator
launchTemplateElasticInferenceAcceleratorCodec =
    Codec.object LaunchTemplateElasticInferenceAccelerator
        |> Codec.field "Type" .type_ Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateEbsBlockDeviceRequest. -}
launchTemplateEbsBlockDeviceRequestCodec : Codec LaunchTemplateEbsBlockDeviceRequest
launchTemplateEbsBlockDeviceRequestCodec =
    Codec.object LaunchTemplateEbsBlockDeviceRequest
        |> Codec.field "VolumeType" .volumeType volumeTypeCodec
        |> Codec.field "VolumeSize" .volumeSize Codec.int
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Iops" .iops Codec.int
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.buildObject


{-| Codec for LaunchTemplateEbsBlockDevice. -}
launchTemplateEbsBlockDeviceCodec : Codec LaunchTemplateEbsBlockDevice
launchTemplateEbsBlockDeviceCodec =
    Codec.object LaunchTemplateEbsBlockDevice
        |> Codec.field "VolumeType" .volumeType volumeTypeCodec
        |> Codec.field "VolumeSize" .volumeSize Codec.int
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Iops" .iops Codec.int
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.buildObject


{-| Codec for LaunchTemplateCpuOptionsRequest. -}
launchTemplateCpuOptionsRequestCodec : Codec LaunchTemplateCpuOptionsRequest
launchTemplateCpuOptionsRequestCodec =
    Codec.object LaunchTemplateCpuOptionsRequest
        |> Codec.field "ThreadsPerCore" .threadsPerCore Codec.int
        |> Codec.field "CoreCount" .coreCount Codec.int
        |> Codec.buildObject


{-| Codec for LaunchTemplateCpuOptions. -}
launchTemplateCpuOptionsCodec : Codec LaunchTemplateCpuOptions
launchTemplateCpuOptionsCodec =
    Codec.object LaunchTemplateCpuOptions
        |> Codec.field "ThreadsPerCore" .threadsPerCore Codec.int
        |> Codec.field "CoreCount" .coreCount Codec.int
        |> Codec.buildObject


{-| Codec for LaunchTemplateConfigList. -}
launchTemplateConfigListCodec : Codec LaunchTemplateConfigList
launchTemplateConfigListCodec =
    Codec.list launchTemplateConfigCodec


{-| Codec for LaunchTemplateConfig. -}
launchTemplateConfigCodec : Codec LaunchTemplateConfig
launchTemplateConfigCodec =
    Codec.object LaunchTemplateConfig
        |> Codec.field "Overrides" .overrides launchTemplateOverridesListCodec
        |> Codec.field "LaunchTemplateSpecification" .launchTemplateSpecification fleetLaunchTemplateSpecificationCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplateCapacityReservationSpecificationResponse. -}
launchTemplateCapacityReservationSpecificationResponseCodec :
    Codec LaunchTemplateCapacityReservationSpecificationResponse
launchTemplateCapacityReservationSpecificationResponseCodec =
    Codec.object LaunchTemplateCapacityReservationSpecificationResponse
        |> Codec.field "CapacityReservationTarget" .capacityReservationTarget capacityReservationTargetResponseCodec
        |> Codec.field "CapacityReservationPreference" .capacityReservationPreference capacityReservationPreferenceCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplateCapacityReservationSpecificationRequest. -}
launchTemplateCapacityReservationSpecificationRequestCodec : Codec LaunchTemplateCapacityReservationSpecificationRequest
launchTemplateCapacityReservationSpecificationRequestCodec =
    Codec.object LaunchTemplateCapacityReservationSpecificationRequest
        |> Codec.field "CapacityReservationTarget" .capacityReservationTarget capacityReservationTargetCodec
        |> Codec.field "CapacityReservationPreference" .capacityReservationPreference capacityReservationPreferenceCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplateBlockDeviceMappingRequestList. -}
launchTemplateBlockDeviceMappingRequestListCodec : Codec LaunchTemplateBlockDeviceMappingRequestList
launchTemplateBlockDeviceMappingRequestListCodec =
    Codec.list launchTemplateBlockDeviceMappingRequestCodec


{-| Codec for LaunchTemplateBlockDeviceMappingRequest. -}
launchTemplateBlockDeviceMappingRequestCodec : Codec LaunchTemplateBlockDeviceMappingRequest
launchTemplateBlockDeviceMappingRequestCodec =
    Codec.object LaunchTemplateBlockDeviceMappingRequest
        |> Codec.field "VirtualName" .virtualName Codec.string
        |> Codec.field "NoDevice" .noDevice Codec.string
        |> Codec.field "Ebs" .ebs launchTemplateEbsBlockDeviceRequestCodec
        |> Codec.field "DeviceName" .deviceName Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateBlockDeviceMappingList. -}
launchTemplateBlockDeviceMappingListCodec : Codec LaunchTemplateBlockDeviceMappingList
launchTemplateBlockDeviceMappingListCodec =
    Codec.list launchTemplateBlockDeviceMappingCodec


{-| Codec for LaunchTemplateBlockDeviceMapping. -}
launchTemplateBlockDeviceMappingCodec : Codec LaunchTemplateBlockDeviceMapping
launchTemplateBlockDeviceMappingCodec =
    Codec.object LaunchTemplateBlockDeviceMapping
        |> Codec.field "VirtualName" .virtualName Codec.string
        |> Codec.field "NoDevice" .noDevice Codec.string
        |> Codec.field "Ebs" .ebs launchTemplateEbsBlockDeviceCodec
        |> Codec.field "DeviceName" .deviceName Codec.string
        |> Codec.buildObject


{-| Codec for LaunchTemplateAndOverridesResponse. -}
launchTemplateAndOverridesResponseCodec : Codec LaunchTemplateAndOverridesResponse
launchTemplateAndOverridesResponseCodec =
    Codec.object LaunchTemplateAndOverridesResponse
        |> Codec.field "Overrides" .overrides fleetLaunchTemplateOverridesCodec
        |> Codec.field "LaunchTemplateSpecification" .launchTemplateSpecification fleetLaunchTemplateSpecificationCodec
        |> Codec.buildObject


{-| Codec for LaunchTemplate. -}
launchTemplateCodec : Codec LaunchTemplate
launchTemplateCodec =
    Codec.object LaunchTemplate
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.field "LatestVersionNumber" .latestVersionNumber Codec.int
        |> Codec.field "DefaultVersionNumber" .defaultVersionNumber Codec.int
        |> Codec.field "CreatedBy" .createdBy Codec.string
        |> Codec.field "CreateTime" .createTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for LaunchSpecsList. -}
launchSpecsListCodec : Codec LaunchSpecsList
launchSpecsListCodec =
    Codec.list spotFleetLaunchSpecificationCodec


{-| Codec for LaunchSpecification. -}
launchSpecificationCodec : Codec LaunchSpecification
launchSpecificationCodec =
    Codec.object LaunchSpecification
        |> Codec.field "UserData" .userData Codec.string
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecurityGroups" .securityGroups groupIdentifierListCodec
        |> Codec.field "RamdiskId" .ramdiskId Codec.string
        |> Codec.field "Placement" .placement spotPlacementCodec
        |> Codec.field "NetworkInterfaces" .networkInterfaces instanceNetworkInterfaceSpecificationListCodec
        |> Codec.field "Monitoring" .monitoring runInstancesMonitoringEnabledCodec
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile iamInstanceProfileSpecificationCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings blockDeviceMappingListCodec
        |> Codec.field "AddressingType" .addressingType Codec.string
        |> Codec.buildObject


{-| Codec for LaunchPermissionModifications. -}
launchPermissionModificationsCodec : Codec LaunchPermissionModifications
launchPermissionModificationsCodec =
    Codec.object LaunchPermissionModifications
        |> Codec.field "Remove" .remove launchPermissionListCodec
        |> Codec.field "Add" .add launchPermissionListCodec
        |> Codec.buildObject


{-| Codec for LaunchPermissionList. -}
launchPermissionListCodec : Codec LaunchPermissionList
launchPermissionListCodec =
    Codec.list launchPermissionCodec


{-| Codec for LaunchPermission. -}
launchPermissionCodec : Codec LaunchPermission
launchPermissionCodec =
    Codec.object LaunchPermission
        |> Codec.field "UserId" .userId Codec.string
        |> Codec.field "Group" .group permissionGroupCodec
        |> Codec.buildObject


{-| Codec for KeyPairList. -}
keyPairListCodec : Codec KeyPairList
keyPairListCodec =
    Codec.list keyPairInfoCodec


{-| Codec for KeyPairInfo. -}
keyPairInfoCodec : Codec KeyPairInfo
keyPairInfoCodec =
    Codec.object KeyPairInfo
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KeyFingerprint" .keyFingerprint Codec.string
        |> Codec.buildObject


{-| Codec for KeyPair. -}
keyPairCodec : Codec KeyPair
keyPairCodec =
    Codec.object KeyPair
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KeyMaterial" .keyMaterial Codec.string
        |> Codec.field "KeyFingerprint" .keyFingerprint Codec.string
        |> Codec.buildObject


{-| Codec for KeyNameStringList. -}
keyNameStringListCodec : Codec KeyNameStringList
keyNameStringListCodec =
    Codec.list Codec.string


{-| Codec for Ipv6SupportValue. -}
ipv6SupportValueCodec : Codec Ipv6SupportValue
ipv6SupportValueCodec =
    Codec.build (Enum.encoder ipv6SupportValue) (Enum.decoder ipv6SupportValue)


{-| Codec for Ipv6RangeList. -}
ipv6RangeListCodec : Codec Ipv6RangeList
ipv6RangeListCodec =
    Codec.list ipv6RangeCodec


{-| Codec for Ipv6Range. -}
ipv6RangeCodec : Codec Ipv6Range
ipv6RangeCodec =
    Codec.object Ipv6Range
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "CidrIpv6" .cidrIpv6 Codec.string
        |> Codec.buildObject


{-| Codec for Ipv6CidrBlockSet. -}
ipv6CidrBlockSetCodec : Codec Ipv6CidrBlockSet
ipv6CidrBlockSetCodec =
    Codec.list ipv6CidrBlockCodec


{-| Codec for Ipv6CidrBlock. -}
ipv6CidrBlockCodec : Codec Ipv6CidrBlock
ipv6CidrBlockCodec =
    Codec.object Ipv6CidrBlock |> Codec.field "Ipv6CidrBlock" .ipv6CidrBlock Codec.string |> Codec.buildObject


{-| Codec for Ipv6AddressList. -}
ipv6AddressListCodec : Codec Ipv6AddressList
ipv6AddressListCodec =
    Codec.list Codec.string


{-| Codec for Ipv6Address. -}
ipv6AddressCodec : Codec Ipv6Address
ipv6AddressCodec =
    Codec.string


{-| Codec for IpRanges. -}
ipRangesCodec : Codec IpRanges
ipRangesCodec =
    Codec.list Codec.string


{-| Codec for IpRangeList. -}
ipRangeListCodec : Codec IpRangeList
ipRangeListCodec =
    Codec.list ipRangeCodec


{-| Codec for IpRange. -}
ipRangeCodec : Codec IpRange
ipRangeCodec =
    Codec.object IpRange
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "CidrIp" .cidrIp Codec.string
        |> Codec.buildObject


{-| Codec for IpPermissionList. -}
ipPermissionListCodec : Codec IpPermissionList
ipPermissionListCodec =
    Codec.list ipPermissionCodec


{-| Codec for IpPermission. -}
ipPermissionCodec : Codec IpPermission
ipPermissionCodec =
    Codec.object IpPermission
        |> Codec.field "UserIdGroupPairs" .userIdGroupPairs userIdGroupPairListCodec
        |> Codec.field "ToPort" .toPort Codec.int
        |> Codec.field "PrefixListIds" .prefixListIds prefixListIdListCodec
        |> Codec.field "Ipv6Ranges" .ipv6Ranges ipv6RangeListCodec
        |> Codec.field "IpRanges" .ipRanges ipRangeListCodec
        |> Codec.field "IpProtocol" .ipProtocol Codec.string
        |> Codec.field "FromPort" .fromPort Codec.int
        |> Codec.buildObject


{-| Codec for InternetGatewayList. -}
internetGatewayListCodec : Codec InternetGatewayList
internetGatewayListCodec =
    Codec.list internetGatewayCodec


{-| Codec for InternetGatewayAttachmentList. -}
internetGatewayAttachmentListCodec : Codec InternetGatewayAttachmentList
internetGatewayAttachmentListCodec =
    Codec.list internetGatewayAttachmentCodec


{-| Codec for InternetGatewayAttachment. -}
internetGatewayAttachmentCodec : Codec InternetGatewayAttachment
internetGatewayAttachmentCodec =
    Codec.object InternetGatewayAttachment
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "State" .state attachmentStatusCodec
        |> Codec.buildObject


{-| Codec for InternetGateway. -}
internetGatewayCodec : Codec InternetGateway
internetGatewayCodec =
    Codec.object InternetGateway
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "InternetGatewayId" .internetGatewayId Codec.string
        |> Codec.field "Attachments" .attachments internetGatewayAttachmentListCodec
        |> Codec.buildObject


{-| Codec for InterfacePermissionType. -}
interfacePermissionTypeCodec : Codec InterfacePermissionType
interfacePermissionTypeCodec =
    Codec.build (Enum.encoder interfacePermissionType) (Enum.decoder interfacePermissionType)


{-| Codec for Integer. -}
integerCodec : Codec Integer
integerCodec =
    Codec.int


{-| Codec for InstanceUsageSet. -}
instanceUsageSetCodec : Codec InstanceUsageSet
instanceUsageSetCodec =
    Codec.list instanceUsageCodec


{-| Codec for InstanceUsage. -}
instanceUsageCodec : Codec InstanceUsage
instanceUsageCodec =
    Codec.object InstanceUsage
        |> Codec.field "UsedInstanceCount" .usedInstanceCount Codec.int
        |> Codec.field "AccountId" .accountId Codec.string
        |> Codec.buildObject


{-| Codec for InstanceTypeList. -}
instanceTypeListCodec : Codec InstanceTypeList
instanceTypeListCodec =
    Codec.list instanceTypeCodec


{-| Codec for InstanceType. -}
instanceTypeCodec : Codec InstanceType
instanceTypeCodec =
    Codec.build (Enum.encoder instanceType) (Enum.decoder instanceType)


{-| Codec for InstanceStatusSummary. -}
instanceStatusSummaryCodec : Codec InstanceStatusSummary
instanceStatusSummaryCodec =
    Codec.object InstanceStatusSummary
        |> Codec.field "Status" .status summaryStatusCodec
        |> Codec.field "Details" .details instanceStatusDetailsListCodec
        |> Codec.buildObject


{-| Codec for InstanceStatusList. -}
instanceStatusListCodec : Codec InstanceStatusList
instanceStatusListCodec =
    Codec.list instanceStatusCodec


{-| Codec for InstanceStatusEventList. -}
instanceStatusEventListCodec : Codec InstanceStatusEventList
instanceStatusEventListCodec =
    Codec.list instanceStatusEventCodec


{-| Codec for InstanceStatusEvent. -}
instanceStatusEventCodec : Codec InstanceStatusEvent
instanceStatusEventCodec =
    Codec.object InstanceStatusEvent
        |> Codec.field "NotBeforeDeadline" .notBeforeDeadline dateTimeCodec
        |> Codec.field "NotBefore" .notBefore dateTimeCodec
        |> Codec.field "NotAfter" .notAfter dateTimeCodec
        |> Codec.field "InstanceEventId" .instanceEventId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "Code" .code eventCodeCodec
        |> Codec.buildObject


{-| Codec for InstanceStatusDetailsList. -}
instanceStatusDetailsListCodec : Codec InstanceStatusDetailsList
instanceStatusDetailsListCodec =
    Codec.list instanceStatusDetailsCodec


{-| Codec for InstanceStatusDetails. -}
instanceStatusDetailsCodec : Codec InstanceStatusDetails
instanceStatusDetailsCodec =
    Codec.object InstanceStatusDetails
        |> Codec.field "Status" .status statusTypeCodec
        |> Codec.field "Name" .name statusNameCodec
        |> Codec.field "ImpairedSince" .impairedSince dateTimeCodec
        |> Codec.buildObject


{-| Codec for InstanceStatus. -}
instanceStatusCodec : Codec InstanceStatus
instanceStatusCodec =
    Codec.object InstanceStatus
        |> Codec.field "SystemStatus" .systemStatus instanceStatusSummaryCodec
        |> Codec.field "InstanceStatus" .instanceStatus instanceStatusSummaryCodec
        |> Codec.field "InstanceState" .instanceState instanceStateCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Events" .events instanceStatusEventListCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for InstanceStateName. -}
instanceStateNameCodec : Codec InstanceStateName
instanceStateNameCodec =
    Codec.build (Enum.encoder instanceStateName) (Enum.decoder instanceStateName)


{-| Codec for InstanceStateChangeList. -}
instanceStateChangeListCodec : Codec InstanceStateChangeList
instanceStateChangeListCodec =
    Codec.list instanceStateChangeCodec


{-| Codec for InstanceStateChange. -}
instanceStateChangeCodec : Codec InstanceStateChange
instanceStateChangeCodec =
    Codec.object InstanceStateChange
        |> Codec.field "PreviousState" .previousState instanceStateCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "CurrentState" .currentState instanceStateCodec
        |> Codec.buildObject


{-| Codec for InstanceState. -}
instanceStateCodec : Codec InstanceState
instanceStateCodec =
    Codec.object InstanceState
        |> Codec.field "Name" .name instanceStateNameCodec
        |> Codec.field "Code" .code Codec.int
        |> Codec.buildObject


{-| Codec for InstanceSpecification. -}
instanceSpecificationCodec : Codec InstanceSpecification
instanceSpecificationCodec =
    Codec.object InstanceSpecification
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "ExcludeBootVolume" .excludeBootVolume Codec.bool
        |> Codec.buildObject


{-| Codec for InstancePrivateIpAddressList. -}
instancePrivateIpAddressListCodec : Codec InstancePrivateIpAddressList
instancePrivateIpAddressListCodec =
    Codec.list instancePrivateIpAddressCodec


{-| Codec for InstancePrivateIpAddress. -}
instancePrivateIpAddressCodec : Codec InstancePrivateIpAddress
instancePrivateIpAddressCodec =
    Codec.object InstancePrivateIpAddress
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "PrivateDnsName" .privateDnsName Codec.string
        |> Codec.field "Primary" .primary Codec.bool
        |> Codec.field "Association" .association instanceNetworkInterfaceAssociationCodec
        |> Codec.buildObject


{-| Codec for InstanceNetworkInterfaceSpecificationList. -}
instanceNetworkInterfaceSpecificationListCodec : Codec InstanceNetworkInterfaceSpecificationList
instanceNetworkInterfaceSpecificationListCodec =
    Codec.list instanceNetworkInterfaceSpecificationCodec


{-| Codec for InstanceNetworkInterfaceSpecification. -}
instanceNetworkInterfaceSpecificationCodec : Codec InstanceNetworkInterfaceSpecification
instanceNetworkInterfaceSpecificationCodec =
    Codec.object InstanceNetworkInterfaceSpecification
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecondaryPrivateIpAddressCount" .secondaryPrivateIpAddressCount Codec.int
        |> Codec.field "PrivateIpAddresses" .privateIpAddresses privateIpAddressSpecificationListCodec
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses instanceIpv6AddressListCodec
        |> Codec.field "Ipv6AddressCount" .ipv6AddressCount Codec.int
        |> Codec.field "InterfaceType" .interfaceType Codec.string
        |> Codec.field "Groups" .groups securityGroupIdStringListCodec
        |> Codec.field "DeviceIndex" .deviceIndex Codec.int
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AssociatePublicIpAddress" .associatePublicIpAddress Codec.bool
        |> Codec.buildObject


{-| Codec for InstanceNetworkInterfaceList. -}
instanceNetworkInterfaceListCodec : Codec InstanceNetworkInterfaceList
instanceNetworkInterfaceListCodec =
    Codec.list instanceNetworkInterfaceCodec


{-| Codec for InstanceNetworkInterfaceAttachment. -}
instanceNetworkInterfaceAttachmentCodec : Codec InstanceNetworkInterfaceAttachment
instanceNetworkInterfaceAttachmentCodec =
    Codec.object InstanceNetworkInterfaceAttachment
        |> Codec.field "Status" .status attachmentStatusCodec
        |> Codec.field "DeviceIndex" .deviceIndex Codec.int
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AttachmentId" .attachmentId Codec.string
        |> Codec.field "AttachTime" .attachTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for InstanceNetworkInterfaceAssociation. -}
instanceNetworkInterfaceAssociationCodec : Codec InstanceNetworkInterfaceAssociation
instanceNetworkInterfaceAssociationCodec =
    Codec.object InstanceNetworkInterfaceAssociation
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "PublicDnsName" .publicDnsName Codec.string
        |> Codec.field "IpOwnerId" .ipOwnerId Codec.string
        |> Codec.buildObject


{-| Codec for InstanceNetworkInterface. -}
instanceNetworkInterfaceCodec : Codec InstanceNetworkInterface
instanceNetworkInterfaceCodec =
    Codec.object InstanceNetworkInterface
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "Status" .status networkInterfaceStatusCodec
        |> Codec.field "SourceDestCheck" .sourceDestCheck Codec.bool
        |> Codec.field "PrivateIpAddresses" .privateIpAddresses instancePrivateIpAddressListCodec
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "PrivateDnsName" .privateDnsName Codec.string
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "MacAddress" .macAddress Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses instanceIpv6AddressListCodec
        |> Codec.field "InterfaceType" .interfaceType Codec.string
        |> Codec.field "Groups" .groups groupIdentifierListCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "Attachment" .attachment instanceNetworkInterfaceAttachmentCodec
        |> Codec.field "Association" .association instanceNetworkInterfaceAssociationCodec
        |> Codec.buildObject


{-| Codec for InstanceMonitoringList. -}
instanceMonitoringListCodec : Codec InstanceMonitoringList
instanceMonitoringListCodec =
    Codec.list instanceMonitoringCodec


{-| Codec for InstanceMonitoring. -}
instanceMonitoringCodec : Codec InstanceMonitoring
instanceMonitoringCodec =
    Codec.object InstanceMonitoring
        |> Codec.field "Monitoring" .monitoring monitoringCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.buildObject


{-| Codec for InstanceMatchCriteria. -}
instanceMatchCriteriaCodec : Codec InstanceMatchCriteria
instanceMatchCriteriaCodec =
    Codec.build (Enum.encoder instanceMatchCriteria) (Enum.decoder instanceMatchCriteria)


{-| Codec for InstanceMarketOptionsRequest. -}
instanceMarketOptionsRequestCodec : Codec InstanceMarketOptionsRequest
instanceMarketOptionsRequestCodec =
    Codec.object InstanceMarketOptionsRequest
        |> Codec.field "SpotOptions" .spotOptions spotMarketOptionsCodec
        |> Codec.field "MarketType" .marketType marketTypeCodec
        |> Codec.buildObject


{-| Codec for InstanceList. -}
instanceListCodec : Codec InstanceList
instanceListCodec =
    Codec.list instanceCodec


{-| Codec for InstanceLifecycleType. -}
instanceLifecycleTypeCodec : Codec InstanceLifecycleType
instanceLifecycleTypeCodec =
    Codec.build (Enum.encoder instanceLifecycleType) (Enum.decoder instanceLifecycleType)


{-| Codec for InstanceLifecycle. -}
instanceLifecycleCodec : Codec InstanceLifecycle
instanceLifecycleCodec =
    Codec.build (Enum.encoder instanceLifecycle) (Enum.decoder instanceLifecycle)


{-| Codec for InstanceIpv6AddressRequest. -}
instanceIpv6AddressRequestCodec : Codec InstanceIpv6AddressRequest
instanceIpv6AddressRequestCodec =
    Codec.object InstanceIpv6AddressRequest |> Codec.field "Ipv6Address" .ipv6Address Codec.string |> Codec.buildObject


{-| Codec for InstanceIpv6AddressListRequest. -}
instanceIpv6AddressListRequestCodec : Codec InstanceIpv6AddressListRequest
instanceIpv6AddressListRequestCodec =
    Codec.list instanceIpv6AddressRequestCodec


{-| Codec for InstanceIpv6AddressList. -}
instanceIpv6AddressListCodec : Codec InstanceIpv6AddressList
instanceIpv6AddressListCodec =
    Codec.list instanceIpv6AddressCodec


{-| Codec for InstanceIpv6Address. -}
instanceIpv6AddressCodec : Codec InstanceIpv6Address
instanceIpv6AddressCodec =
    Codec.object InstanceIpv6Address |> Codec.field "Ipv6Address" .ipv6Address Codec.string |> Codec.buildObject


{-| Codec for InstanceInterruptionBehavior. -}
instanceInterruptionBehaviorCodec : Codec InstanceInterruptionBehavior
instanceInterruptionBehaviorCodec =
    Codec.build (Enum.encoder instanceInterruptionBehavior) (Enum.decoder instanceInterruptionBehavior)


{-| Codec for InstanceIdsSet. -}
instanceIdsSetCodec : Codec InstanceIdsSet
instanceIdsSetCodec =
    Codec.list Codec.string


{-| Codec for InstanceIdStringList. -}
instanceIdStringListCodec : Codec InstanceIdStringList
instanceIdStringListCodec =
    Codec.list Codec.string


{-| Codec for InstanceIdSet. -}
instanceIdSetCodec : Codec InstanceIdSet
instanceIdSetCodec =
    Codec.list Codec.string


{-| Codec for InstanceId. -}
instanceIdCodec : Codec InstanceId
instanceIdCodec =
    Codec.string


{-| Codec for InstanceHealthStatus. -}
instanceHealthStatusCodec : Codec InstanceHealthStatus
instanceHealthStatusCodec =
    Codec.build (Enum.encoder instanceHealthStatus) (Enum.decoder instanceHealthStatus)


{-| Codec for InstanceExportDetails. -}
instanceExportDetailsCodec : Codec InstanceExportDetails
instanceExportDetailsCodec =
    Codec.object InstanceExportDetails
        |> Codec.field "TargetEnvironment" .targetEnvironment exportEnvironmentCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.buildObject


{-| Codec for InstanceEventId. -}
instanceEventIdCodec : Codec InstanceEventId
instanceEventIdCodec =
    Codec.string


{-| Codec for InstanceCreditSpecificationRequest. -}
instanceCreditSpecificationRequestCodec : Codec InstanceCreditSpecificationRequest
instanceCreditSpecificationRequestCodec =
    Codec.object InstanceCreditSpecificationRequest
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "CpuCredits" .cpuCredits Codec.string
        |> Codec.buildObject


{-| Codec for InstanceCreditSpecificationListRequest. -}
instanceCreditSpecificationListRequestCodec : Codec InstanceCreditSpecificationListRequest
instanceCreditSpecificationListRequestCodec =
    Codec.list instanceCreditSpecificationRequestCodec


{-| Codec for InstanceCreditSpecificationList. -}
instanceCreditSpecificationListCodec : Codec InstanceCreditSpecificationList
instanceCreditSpecificationListCodec =
    Codec.list instanceCreditSpecificationCodec


{-| Codec for InstanceCreditSpecification. -}
instanceCreditSpecificationCodec : Codec InstanceCreditSpecification
instanceCreditSpecificationCodec =
    Codec.object InstanceCreditSpecification
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "CpuCredits" .cpuCredits Codec.string
        |> Codec.buildObject


{-| Codec for InstanceCountList. -}
instanceCountListCodec : Codec InstanceCountList
instanceCountListCodec =
    Codec.list instanceCountCodec


{-| Codec for InstanceCount. -}
instanceCountCodec : Codec InstanceCount
instanceCountCodec =
    Codec.object InstanceCount
        |> Codec.field "State" .state listingStateCodec
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.buildObject


{-| Codec for InstanceCapacity. -}
instanceCapacityCodec : Codec InstanceCapacity
instanceCapacityCodec =
    Codec.object InstanceCapacity
        |> Codec.field "TotalCapacity" .totalCapacity Codec.int
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "AvailableCapacity" .availableCapacity Codec.int
        |> Codec.buildObject


{-| Codec for InstanceBlockDeviceMappingSpecificationList. -}
instanceBlockDeviceMappingSpecificationListCodec : Codec InstanceBlockDeviceMappingSpecificationList
instanceBlockDeviceMappingSpecificationListCodec =
    Codec.list instanceBlockDeviceMappingSpecificationCodec


{-| Codec for InstanceBlockDeviceMappingSpecification. -}
instanceBlockDeviceMappingSpecificationCodec : Codec InstanceBlockDeviceMappingSpecification
instanceBlockDeviceMappingSpecificationCodec =
    Codec.object InstanceBlockDeviceMappingSpecification
        |> Codec.field "VirtualName" .virtualName Codec.string
        |> Codec.field "NoDevice" .noDevice Codec.string
        |> Codec.field "Ebs" .ebs ebsInstanceBlockDeviceSpecificationCodec
        |> Codec.field "DeviceName" .deviceName Codec.string
        |> Codec.buildObject


{-| Codec for InstanceBlockDeviceMappingList. -}
instanceBlockDeviceMappingListCodec : Codec InstanceBlockDeviceMappingList
instanceBlockDeviceMappingListCodec =
    Codec.list instanceBlockDeviceMappingCodec


{-| Codec for InstanceBlockDeviceMapping. -}
instanceBlockDeviceMappingCodec : Codec InstanceBlockDeviceMapping
instanceBlockDeviceMappingCodec =
    Codec.object InstanceBlockDeviceMapping
        |> Codec.field "Ebs" .ebs ebsInstanceBlockDeviceCodec
        |> Codec.field "DeviceName" .deviceName Codec.string
        |> Codec.buildObject


{-| Codec for InstanceAttributeName. -}
instanceAttributeNameCodec : Codec InstanceAttributeName
instanceAttributeNameCodec =
    Codec.build (Enum.encoder instanceAttributeName) (Enum.decoder instanceAttributeName)


{-| Codec for InstanceAttribute. -}
instanceAttributeCodec : Codec InstanceAttribute
instanceAttributeCodec =
    Codec.object InstanceAttribute
        |> Codec.field "UserData" .userData attributeValueCodec
        |> Codec.field "SriovNetSupport" .sriovNetSupport attributeValueCodec
        |> Codec.field "SourceDestCheck" .sourceDestCheck attributeBooleanValueCodec
        |> Codec.field "RootDeviceName" .rootDeviceName attributeValueCodec
        |> Codec.field "RamdiskId" .ramdiskId attributeValueCodec
        |> Codec.field "ProductCodes" .productCodes productCodeListCodec
        |> Codec.field "KernelId" .kernelId attributeValueCodec
        |> Codec.field "InstanceType" .instanceType attributeValueCodec
        |> Codec.field "InstanceInitiatedShutdownBehavior" .instanceInitiatedShutdownBehavior attributeValueCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Groups" .groups groupIdentifierListCodec
        |> Codec.field "EnaSupport" .enaSupport attributeBooleanValueCodec
        |> Codec.field "EbsOptimized" .ebsOptimized attributeBooleanValueCodec
        |> Codec.field "DisableApiTermination" .disableApiTermination attributeBooleanValueCodec
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings instanceBlockDeviceMappingListCodec
        |> Codec.buildObject


{-| Codec for Instance. -}
instanceCodec : Codec Instance
instanceCodec =
    Codec.object Instance
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "VirtualizationType" .virtualizationType virtualizationTypeCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "StateTransitionReason" .stateTransitionReason Codec.string
        |> Codec.field "StateReason" .stateReason stateReasonCodec
        |> Codec.field "State" .state instanceStateCodec
        |> Codec.field "SriovNetSupport" .sriovNetSupport Codec.string
        |> Codec.field "SpotInstanceRequestId" .spotInstanceRequestId Codec.string
        |> Codec.field "SourceDestCheck" .sourceDestCheck Codec.bool
        |> Codec.field "SecurityGroups" .securityGroups groupIdentifierListCodec
        |> Codec.field "RootDeviceType" .rootDeviceType deviceTypeCodec
        |> Codec.field "RootDeviceName" .rootDeviceName Codec.string
        |> Codec.field "RamdiskId" .ramdiskId Codec.string
        |> Codec.field "PublicIpAddress" .publicIpAddress Codec.string
        |> Codec.field "PublicDnsName" .publicDnsName Codec.string
        |> Codec.field "ProductCodes" .productCodes productCodeListCodec
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "PrivateDnsName" .privateDnsName Codec.string
        |> Codec.field "Platform" .platform platformValuesCodec
        |> Codec.field "Placement" .placement placementCodec
        |> Codec.field "NetworkInterfaces" .networkInterfaces instanceNetworkInterfaceListCodec
        |> Codec.field "Monitoring" .monitoring monitoringCodec
        |> Codec.field "Licenses" .licenses licenseListCodec
        |> Codec.field "LaunchTime" .launchTime dateTimeCodec
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceLifecycle" .instanceLifecycle instanceLifecycleTypeCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile iamInstanceProfileCodec
        |> Codec.field "Hypervisor" .hypervisor hypervisorTypeCodec
        |> Codec.field "HibernationOptions" .hibernationOptions hibernationOptionsCodec
        |> Codec.field "EnaSupport" .enaSupport Codec.bool
        |> Codec.field
            "ElasticInferenceAcceleratorAssociations"
            .elasticInferenceAcceleratorAssociations
            elasticInferenceAcceleratorAssociationListCodec
        |> Codec.field "ElasticGpuAssociations" .elasticGpuAssociations elasticGpuAssociationListCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "CpuOptions" .cpuOptions cpuOptionsCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field
            "CapacityReservationSpecification"
            .capacityReservationSpecification
            capacityReservationSpecificationResponseCodec
        |> Codec.field "CapacityReservationId" .capacityReservationId Codec.string
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings instanceBlockDeviceMappingListCodec
        |> Codec.field "Architecture" .architecture architectureValuesCodec
        |> Codec.field "AmiLaunchIndex" .amiLaunchIndex Codec.int
        |> Codec.buildObject


{-| Codec for ImportVolumeTaskDetails. -}
importVolumeTaskDetailsCodec : Codec ImportVolumeTaskDetails
importVolumeTaskDetailsCodec =
    Codec.object ImportVolumeTaskDetails
        |> Codec.field "Volume" .volume diskImageVolumeDescriptionCodec
        |> Codec.field "Image" .image diskImageDescriptionCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "BytesConverted" .bytesConverted Codec.int
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ImportVolumeResult. -}
importVolumeResultCodec : Codec ImportVolumeResult
importVolumeResultCodec =
    Codec.object ImportVolumeResult
        |> Codec.field "ConversionTask" .conversionTask conversionTaskCodec
        |> Codec.buildObject


{-| Codec for ImportVolumeRequest. -}
importVolumeRequestCodec : Codec ImportVolumeRequest
importVolumeRequestCodec =
    Codec.object ImportVolumeRequest
        |> Codec.field "Volume" .volume volumeDetailCodec
        |> Codec.field "Image" .image diskImageDetailCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ImportTaskIdList. -}
importTaskIdListCodec : Codec ImportTaskIdList
importTaskIdListCodec =
    Codec.list Codec.string


{-| Codec for ImportSnapshotTaskList. -}
importSnapshotTaskListCodec : Codec ImportSnapshotTaskList
importSnapshotTaskListCodec =
    Codec.list importSnapshotTaskCodec


{-| Codec for ImportSnapshotTask. -}
importSnapshotTaskCodec : Codec ImportSnapshotTask
importSnapshotTaskCodec =
    Codec.object ImportSnapshotTask
        |> Codec.field "SnapshotTaskDetail" .snapshotTaskDetail snapshotTaskDetailCodec
        |> Codec.field "ImportTaskId" .importTaskId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ImportSnapshotResult. -}
importSnapshotResultCodec : Codec ImportSnapshotResult
importSnapshotResultCodec =
    Codec.object ImportSnapshotResult
        |> Codec.field "SnapshotTaskDetail" .snapshotTaskDetail snapshotTaskDetailCodec
        |> Codec.field "ImportTaskId" .importTaskId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ImportSnapshotRequest. -}
importSnapshotRequestCodec : Codec ImportSnapshotRequest
importSnapshotRequestCodec =
    Codec.object ImportSnapshotRequest
        |> Codec.field "RoleName" .roleName Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DiskContainer" .diskContainer snapshotDiskContainerCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "ClientData" .clientData clientDataCodec
        |> Codec.buildObject


{-| Codec for ImportKeyPairResult. -}
importKeyPairResultCodec : Codec ImportKeyPairResult
importKeyPairResultCodec =
    Codec.object ImportKeyPairResult
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "KeyFingerprint" .keyFingerprint Codec.string
        |> Codec.buildObject


{-| Codec for ImportKeyPairRequest. -}
importKeyPairRequestCodec : Codec ImportKeyPairRequest
importKeyPairRequestCodec =
    Codec.object ImportKeyPairRequest
        |> Codec.field "PublicKeyMaterial" .publicKeyMaterial Codec.string
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ImportInstanceVolumeDetailSet. -}
importInstanceVolumeDetailSetCodec : Codec ImportInstanceVolumeDetailSet
importInstanceVolumeDetailSetCodec =
    Codec.list importInstanceVolumeDetailItemCodec


{-| Codec for ImportInstanceVolumeDetailItem. -}
importInstanceVolumeDetailItemCodec : Codec ImportInstanceVolumeDetailItem
importInstanceVolumeDetailItemCodec =
    Codec.object ImportInstanceVolumeDetailItem
        |> Codec.field "Volume" .volume diskImageVolumeDescriptionCodec
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "Status" .status Codec.string
        |> Codec.field "Image" .image diskImageDescriptionCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "BytesConverted" .bytesConverted Codec.int
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ImportInstanceTaskDetails. -}
importInstanceTaskDetailsCodec : Codec ImportInstanceTaskDetails
importInstanceTaskDetailsCodec =
    Codec.object ImportInstanceTaskDetails
        |> Codec.field "Volumes" .volumes importInstanceVolumeDetailSetCodec
        |> Codec.field "Platform" .platform platformValuesCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ImportInstanceResult. -}
importInstanceResultCodec : Codec ImportInstanceResult
importInstanceResultCodec =
    Codec.object ImportInstanceResult
        |> Codec.field "ConversionTask" .conversionTask conversionTaskCodec
        |> Codec.buildObject


{-| Codec for ImportInstanceRequest. -}
importInstanceRequestCodec : Codec ImportInstanceRequest
importInstanceRequestCodec =
    Codec.object ImportInstanceRequest
        |> Codec.field "Platform" .platform platformValuesCodec
        |> Codec.field "LaunchSpecification" .launchSpecification importInstanceLaunchSpecificationCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DiskImages" .diskImages diskImageListCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ImportInstanceLaunchSpecification. -}
importInstanceLaunchSpecificationCodec : Codec ImportInstanceLaunchSpecification
importInstanceLaunchSpecificationCodec =
    Codec.object ImportInstanceLaunchSpecification
        |> Codec.field "UserData" .userData userDataCodec
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "Placement" .placement placementCodec
        |> Codec.field "Monitoring" .monitoring Codec.bool
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceInitiatedShutdownBehavior" .instanceInitiatedShutdownBehavior shutdownBehaviorCodec
        |> Codec.field "GroupNames" .groupNames securityGroupStringListCodec
        |> Codec.field "GroupIds" .groupIds securityGroupIdStringListCodec
        |> Codec.field "Architecture" .architecture architectureValuesCodec
        |> Codec.field "AdditionalInfo" .additionalInfo Codec.string
        |> Codec.buildObject


{-| Codec for ImportImageTaskList. -}
importImageTaskListCodec : Codec ImportImageTaskList
importImageTaskListCodec =
    Codec.list importImageTaskCodec


{-| Codec for ImportImageTask. -}
importImageTaskCodec : Codec ImportImageTask
importImageTaskCodec =
    Codec.object ImportImageTask
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "Status" .status Codec.string
        |> Codec.field "SnapshotDetails" .snapshotDetails snapshotDetailListCodec
        |> Codec.field "Progress" .progress Codec.string
        |> Codec.field "Platform" .platform Codec.string
        |> Codec.field "LicenseType" .licenseType Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "ImportTaskId" .importTaskId Codec.string
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "Hypervisor" .hypervisor Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "Architecture" .architecture Codec.string
        |> Codec.buildObject


{-| Codec for ImportImageResult. -}
importImageResultCodec : Codec ImportImageResult
importImageResultCodec =
    Codec.object ImportImageResult
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "Status" .status Codec.string
        |> Codec.field "SnapshotDetails" .snapshotDetails snapshotDetailListCodec
        |> Codec.field "Progress" .progress Codec.string
        |> Codec.field "Platform" .platform Codec.string
        |> Codec.field "LicenseType" .licenseType Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "ImportTaskId" .importTaskId Codec.string
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "Hypervisor" .hypervisor Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "Architecture" .architecture Codec.string
        |> Codec.buildObject


{-| Codec for ImportImageRequest. -}
importImageRequestCodec : Codec ImportImageRequest
importImageRequestCodec =
    Codec.object ImportImageRequest
        |> Codec.field "RoleName" .roleName Codec.string
        |> Codec.field "Platform" .platform Codec.string
        |> Codec.field "LicenseType" .licenseType Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Hypervisor" .hypervisor Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DiskContainers" .diskContainers imageDiskContainerListCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "ClientData" .clientData clientDataCodec
        |> Codec.field "Architecture" .architecture Codec.string
        |> Codec.buildObject


{-| Codec for ImportClientVpnClientCertificateRevocationListResult. -}
importClientVpnClientCertificateRevocationListResultCodec : Codec ImportClientVpnClientCertificateRevocationListResult
importClientVpnClientCertificateRevocationListResultCodec =
    Codec.object ImportClientVpnClientCertificateRevocationListResult
        |> Codec.field "Return" .return Codec.bool
        |> Codec.buildObject


{-| Codec for ImportClientVpnClientCertificateRevocationListRequest. -}
importClientVpnClientCertificateRevocationListRequestCodec : Codec ImportClientVpnClientCertificateRevocationListRequest
importClientVpnClientCertificateRevocationListRequestCodec =
    Codec.object ImportClientVpnClientCertificateRevocationListRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "CertificateRevocationList" .certificateRevocationList Codec.string
        |> Codec.buildObject


{-| Codec for ImageTypeValues. -}
imageTypeValuesCodec : Codec ImageTypeValues
imageTypeValuesCodec =
    Codec.build (Enum.encoder imageTypeValues) (Enum.decoder imageTypeValues)


{-| Codec for ImageState. -}
imageStateCodec : Codec ImageState
imageStateCodec =
    Codec.build (Enum.encoder imageState) (Enum.decoder imageState)


{-| Codec for ImageList. -}
imageListCodec : Codec ImageList
imageListCodec =
    Codec.list imageCodec


{-| Codec for ImageIdStringList. -}
imageIdStringListCodec : Codec ImageIdStringList
imageIdStringListCodec =
    Codec.list Codec.string


{-| Codec for ImageDiskContainerList. -}
imageDiskContainerListCodec : Codec ImageDiskContainerList
imageDiskContainerListCodec =
    Codec.list imageDiskContainerCodec


{-| Codec for ImageDiskContainer. -}
imageDiskContainerCodec : Codec ImageDiskContainer
imageDiskContainerCodec =
    Codec.object ImageDiskContainer
        |> Codec.field "UserBucket" .userBucket userBucketCodec
        |> Codec.field "Url" .url Codec.string
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "Format" .format Codec.string
        |> Codec.field "DeviceName" .deviceName Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ImageAttributeName. -}
imageAttributeNameCodec : Codec ImageAttributeName
imageAttributeNameCodec =
    Codec.build (Enum.encoder imageAttributeName) (Enum.decoder imageAttributeName)


{-| Codec for ImageAttribute. -}
imageAttributeCodec : Codec ImageAttribute
imageAttributeCodec =
    Codec.object ImageAttribute
        |> Codec.field "SriovNetSupport" .sriovNetSupport attributeValueCodec
        |> Codec.field "RamdiskId" .ramdiskId attributeValueCodec
        |> Codec.field "ProductCodes" .productCodes productCodeListCodec
        |> Codec.field "LaunchPermissions" .launchPermissions launchPermissionListCodec
        |> Codec.field "KernelId" .kernelId attributeValueCodec
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "Description" .description attributeValueCodec
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings blockDeviceMappingListCodec
        |> Codec.buildObject


{-| Codec for Image. -}
imageCodec : Codec Image
imageCodec =
    Codec.object Image
        |> Codec.field "VirtualizationType" .virtualizationType virtualizationTypeCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "StateReason" .stateReason stateReasonCodec
        |> Codec.field "State" .state imageStateCodec
        |> Codec.field "SriovNetSupport" .sriovNetSupport Codec.string
        |> Codec.field "RootDeviceType" .rootDeviceType deviceTypeCodec
        |> Codec.field "RootDeviceName" .rootDeviceName Codec.string
        |> Codec.field "RamdiskId" .ramdiskId Codec.string
        |> Codec.field "Public" .public Codec.bool
        |> Codec.field "ProductCodes" .productCodes productCodeListCodec
        |> Codec.field "Platform" .platform platformValuesCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "KernelId" .kernelId Codec.string
        |> Codec.field "ImageType" .imageType imageTypeValuesCodec
        |> Codec.field "ImageOwnerAlias" .imageOwnerAlias Codec.string
        |> Codec.field "ImageLocation" .imageLocation Codec.string
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "Hypervisor" .hypervisor hypervisorTypeCodec
        |> Codec.field "EnaSupport" .enaSupport Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "CreationDate" .creationDate Codec.string
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings blockDeviceMappingListCodec
        |> Codec.field "Architecture" .architecture architectureValuesCodec
        |> Codec.buildObject


{-| Codec for IdFormatList. -}
idFormatListCodec : Codec IdFormatList
idFormatListCodec =
    Codec.list idFormatCodec


{-| Codec for IdFormat. -}
idFormatCodec : Codec IdFormat
idFormatCodec =
    Codec.object IdFormat
        |> Codec.field "UseLongIds" .useLongIds Codec.bool
        |> Codec.field "Resource" .resource Codec.string
        |> Codec.field "Deadline" .deadline dateTimeCodec
        |> Codec.buildObject


{-| Codec for IcmpTypeCode. -}
icmpTypeCodeCodec : Codec IcmpTypeCode
icmpTypeCodeCodec =
    Codec.object IcmpTypeCode
        |> Codec.field "Type" .type_ Codec.int
        |> Codec.field "Code" .code Codec.int
        |> Codec.buildObject


{-| Codec for IamInstanceProfileSpecification. -}
iamInstanceProfileSpecificationCodec : Codec IamInstanceProfileSpecification
iamInstanceProfileSpecificationCodec =
    Codec.object IamInstanceProfileSpecification
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "Arn" .arn Codec.string
        |> Codec.buildObject


{-| Codec for IamInstanceProfileAssociationState. -}
iamInstanceProfileAssociationStateCodec : Codec IamInstanceProfileAssociationState
iamInstanceProfileAssociationStateCodec =
    Codec.build (Enum.encoder iamInstanceProfileAssociationState) (Enum.decoder iamInstanceProfileAssociationState)


{-| Codec for IamInstanceProfileAssociationSet. -}
iamInstanceProfileAssociationSetCodec : Codec IamInstanceProfileAssociationSet
iamInstanceProfileAssociationSetCodec =
    Codec.list iamInstanceProfileAssociationCodec


{-| Codec for IamInstanceProfileAssociation. -}
iamInstanceProfileAssociationCodec : Codec IamInstanceProfileAssociation
iamInstanceProfileAssociationCodec =
    Codec.object IamInstanceProfileAssociation
        |> Codec.field "Timestamp" .timestamp dateTimeCodec
        |> Codec.field "State" .state iamInstanceProfileAssociationStateCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile iamInstanceProfileCodec
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for IamInstanceProfile. -}
iamInstanceProfileCodec : Codec IamInstanceProfile
iamInstanceProfileCodec =
    Codec.object IamInstanceProfile
        |> Codec.field "Id" .id Codec.string
        |> Codec.field "Arn" .arn Codec.string
        |> Codec.buildObject


{-| Codec for HypervisorType. -}
hypervisorTypeCodec : Codec HypervisorType
hypervisorTypeCodec =
    Codec.build (Enum.encoder hypervisorType) (Enum.decoder hypervisorType)


{-| Codec for HostTenancy. -}
hostTenancyCodec : Codec HostTenancy
hostTenancyCodec =
    Codec.build (Enum.encoder hostTenancy) (Enum.decoder hostTenancy)


{-| Codec for HostReservationSet. -}
hostReservationSetCodec : Codec HostReservationSet
hostReservationSetCodec =
    Codec.list hostReservationCodec


{-| Codec for HostReservationIdSet. -}
hostReservationIdSetCodec : Codec HostReservationIdSet
hostReservationIdSetCodec =
    Codec.list Codec.string


{-| Codec for HostReservation. -}
hostReservationCodec : Codec HostReservation
hostReservationCodec =
    Codec.object HostReservation
        |> Codec.field "UpfrontPrice" .upfrontPrice Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state reservationStateCodec
        |> Codec.field "Start" .start dateTimeCodec
        |> Codec.field "PaymentOption" .paymentOption paymentOptionCodec
        |> Codec.field "OfferingId" .offeringId Codec.string
        |> Codec.field "InstanceFamily" .instanceFamily Codec.string
        |> Codec.field "HourlyPrice" .hourlyPrice Codec.string
        |> Codec.field "HostReservationId" .hostReservationId Codec.string
        |> Codec.field "HostIdSet" .hostIdSet responseHostIdSetCodec
        |> Codec.field "End" .end dateTimeCodec
        |> Codec.field "Duration" .duration Codec.int
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.field "Count" .count Codec.int
        |> Codec.buildObject


{-| Codec for HostRecovery. -}
hostRecoveryCodec : Codec HostRecovery
hostRecoveryCodec =
    Codec.build (Enum.encoder hostRecovery) (Enum.decoder hostRecovery)


{-| Codec for HostProperties. -}
hostPropertiesCodec : Codec HostProperties
hostPropertiesCodec =
    Codec.object HostProperties
        |> Codec.field "TotalVCpus" .totalVcpus Codec.int
        |> Codec.field "Sockets" .sockets Codec.int
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "Cores" .cores Codec.int
        |> Codec.buildObject


{-| Codec for HostOfferingSet. -}
hostOfferingSetCodec : Codec HostOfferingSet
hostOfferingSetCodec =
    Codec.list hostOfferingCodec


{-| Codec for HostOffering. -}
hostOfferingCodec : Codec HostOffering
hostOfferingCodec =
    Codec.object HostOffering
        |> Codec.field "UpfrontPrice" .upfrontPrice Codec.string
        |> Codec.field "PaymentOption" .paymentOption paymentOptionCodec
        |> Codec.field "OfferingId" .offeringId Codec.string
        |> Codec.field "InstanceFamily" .instanceFamily Codec.string
        |> Codec.field "HourlyPrice" .hourlyPrice Codec.string
        |> Codec.field "Duration" .duration Codec.int
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.buildObject


{-| Codec for HostList. -}
hostListCodec : Codec HostList
hostListCodec =
    Codec.list hostCodec


{-| Codec for HostInstanceList. -}
hostInstanceListCodec : Codec HostInstanceList
hostInstanceListCodec =
    Codec.list hostInstanceCodec


{-| Codec for HostInstance. -}
hostInstanceCodec : Codec HostInstance
hostInstanceCodec =
    Codec.object HostInstance
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.buildObject


{-| Codec for Host. -}
hostCodec : Codec Host
hostCodec =
    Codec.object Host
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state allocationStateCodec
        |> Codec.field "ReleaseTime" .releaseTime dateTimeCodec
        |> Codec.field "Instances" .instances hostInstanceListCodec
        |> Codec.field "HostReservationId" .hostReservationId Codec.string
        |> Codec.field "HostRecovery" .hostRecovery hostRecoveryCodec
        |> Codec.field "HostProperties" .hostProperties hostPropertiesCodec
        |> Codec.field "HostId" .hostId Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "AvailableCapacity" .availableCapacity availableCapacityCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "AutoPlacement" .autoPlacement autoPlacementCodec
        |> Codec.field "AllocationTime" .allocationTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for HistoryRecords. -}
historyRecordsCodec : Codec HistoryRecords
historyRecordsCodec =
    Codec.list historyRecordCodec


{-| Codec for HistoryRecordSet. -}
historyRecordSetCodec : Codec HistoryRecordSet
historyRecordSetCodec =
    Codec.list historyRecordEntryCodec


{-| Codec for HistoryRecordEntry. -}
historyRecordEntryCodec : Codec HistoryRecordEntry
historyRecordEntryCodec =
    Codec.object HistoryRecordEntry
        |> Codec.field "Timestamp" .timestamp dateTimeCodec
        |> Codec.field "EventType" .eventType fleetEventTypeCodec
        |> Codec.field "EventInformation" .eventInformation eventInformationCodec
        |> Codec.buildObject


{-| Codec for HistoryRecord. -}
historyRecordCodec : Codec HistoryRecord
historyRecordCodec =
    Codec.object HistoryRecord
        |> Codec.field "Timestamp" .timestamp dateTimeCodec
        |> Codec.field "EventType" .eventType eventTypeCodec
        |> Codec.field "EventInformation" .eventInformation eventInformationCodec
        |> Codec.buildObject


{-| Codec for HibernationOptionsRequest. -}
hibernationOptionsRequestCodec : Codec HibernationOptionsRequest
hibernationOptionsRequestCodec =
    Codec.object HibernationOptionsRequest |> Codec.field "Configured" .configured Codec.bool |> Codec.buildObject


{-| Codec for HibernationOptions. -}
hibernationOptionsCodec : Codec HibernationOptions
hibernationOptionsCodec =
    Codec.object HibernationOptions |> Codec.field "Configured" .configured Codec.bool |> Codec.buildObject


{-| Codec for GroupNameStringList. -}
groupNameStringListCodec : Codec GroupNameStringList
groupNameStringListCodec =
    Codec.list Codec.string


{-| Codec for GroupIds. -}
groupIdsCodec : Codec GroupIds
groupIdsCodec =
    Codec.list Codec.string


{-| Codec for GroupIdentifierSet. -}
groupIdentifierSetCodec : Codec GroupIdentifierSet
groupIdentifierSetCodec =
    Codec.list securityGroupIdentifierCodec


{-| Codec for GroupIdentifierList. -}
groupIdentifierListCodec : Codec GroupIdentifierList
groupIdentifierListCodec =
    Codec.list groupIdentifierCodec


{-| Codec for GroupIdentifier. -}
groupIdentifierCodec : Codec GroupIdentifier
groupIdentifierCodec =
    Codec.object GroupIdentifier
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.buildObject


{-| Codec for GroupIdStringList. -}
groupIdStringListCodec : Codec GroupIdStringList
groupIdStringListCodec =
    Codec.list Codec.string


{-| Codec for GetTransitGatewayRouteTablePropagationsResult. -}
getTransitGatewayRouteTablePropagationsResultCodec : Codec GetTransitGatewayRouteTablePropagationsResult
getTransitGatewayRouteTablePropagationsResultCodec =
    Codec.object GetTransitGatewayRouteTablePropagationsResult
        |> Codec.field
            "TransitGatewayRouteTablePropagations"
            .transitGatewayRouteTablePropagations
            transitGatewayRouteTablePropagationListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for GetTransitGatewayRouteTablePropagationsRequest. -}
getTransitGatewayRouteTablePropagationsRequestCodec : Codec GetTransitGatewayRouteTablePropagationsRequest
getTransitGatewayRouteTablePropagationsRequestCodec =
    Codec.object GetTransitGatewayRouteTablePropagationsRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults transitGatewayMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for GetTransitGatewayRouteTableAssociationsResult. -}
getTransitGatewayRouteTableAssociationsResultCodec : Codec GetTransitGatewayRouteTableAssociationsResult
getTransitGatewayRouteTableAssociationsResultCodec =
    Codec.object GetTransitGatewayRouteTableAssociationsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "Associations" .associations transitGatewayRouteTableAssociationListCodec
        |> Codec.buildObject


{-| Codec for GetTransitGatewayRouteTableAssociationsRequest. -}
getTransitGatewayRouteTableAssociationsRequestCodec : Codec GetTransitGatewayRouteTableAssociationsRequest
getTransitGatewayRouteTableAssociationsRequestCodec =
    Codec.object GetTransitGatewayRouteTableAssociationsRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults transitGatewayMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for GetTransitGatewayAttachmentPropagationsResult. -}
getTransitGatewayAttachmentPropagationsResultCodec : Codec GetTransitGatewayAttachmentPropagationsResult
getTransitGatewayAttachmentPropagationsResultCodec =
    Codec.object GetTransitGatewayAttachmentPropagationsResult
        |> Codec.field
            "TransitGatewayAttachmentPropagations"
            .transitGatewayAttachmentPropagations
            transitGatewayAttachmentPropagationListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for GetTransitGatewayAttachmentPropagationsRequest. -}
getTransitGatewayAttachmentPropagationsRequestCodec : Codec GetTransitGatewayAttachmentPropagationsRequest
getTransitGatewayAttachmentPropagationsRequestCodec =
    Codec.object GetTransitGatewayAttachmentPropagationsRequest
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults transitGatewayMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for GetReservedInstancesExchangeQuoteResult. -}
getReservedInstancesExchangeQuoteResultCodec : Codec GetReservedInstancesExchangeQuoteResult
getReservedInstancesExchangeQuoteResultCodec =
    Codec.object GetReservedInstancesExchangeQuoteResult
        |> Codec.field "ValidationFailureReason" .validationFailureReason Codec.string
        |> Codec.field "TargetConfigurationValueSet" .targetConfigurationValueSet targetReservationValueSetCodec
        |> Codec.field "TargetConfigurationValueRollup" .targetConfigurationValueRollup reservationValueCodec
        |> Codec.field "ReservedInstanceValueSet" .reservedInstanceValueSet reservedInstanceReservationValueSetCodec
        |> Codec.field "ReservedInstanceValueRollup" .reservedInstanceValueRollup reservationValueCodec
        |> Codec.field "PaymentDue" .paymentDue Codec.string
        |> Codec.field "OutputReservedInstancesWillExpireAt" .outputReservedInstancesWillExpireAt dateTimeCodec
        |> Codec.field "IsValidExchange" .isValidExchange Codec.bool
        |> Codec.field "CurrencyCode" .currencyCode Codec.string
        |> Codec.buildObject


{-| Codec for GetReservedInstancesExchangeQuoteRequest. -}
getReservedInstancesExchangeQuoteRequestCodec : Codec GetReservedInstancesExchangeQuoteRequest
getReservedInstancesExchangeQuoteRequestCodec =
    Codec.object GetReservedInstancesExchangeQuoteRequest
        |> Codec.field "TargetConfigurations" .targetConfigurations targetConfigurationRequestSetCodec
        |> Codec.field "ReservedInstanceIds" .reservedInstanceIds reservedInstanceIdSetCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for GetPasswordDataResult. -}
getPasswordDataResultCodec : Codec GetPasswordDataResult
getPasswordDataResultCodec =
    Codec.object GetPasswordDataResult
        |> Codec.field "Timestamp" .timestamp dateTimeCodec
        |> Codec.field "PasswordData" .passwordData Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.buildObject


{-| Codec for GetPasswordDataRequest. -}
getPasswordDataRequestCodec : Codec GetPasswordDataRequest
getPasswordDataRequestCodec =
    Codec.object GetPasswordDataRequest
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for GetLaunchTemplateDataResult. -}
getLaunchTemplateDataResultCodec : Codec GetLaunchTemplateDataResult
getLaunchTemplateDataResultCodec =
    Codec.object GetLaunchTemplateDataResult
        |> Codec.field "LaunchTemplateData" .launchTemplateData responseLaunchTemplateDataCodec
        |> Codec.buildObject


{-| Codec for GetLaunchTemplateDataRequest. -}
getLaunchTemplateDataRequestCodec : Codec GetLaunchTemplateDataRequest
getLaunchTemplateDataRequestCodec =
    Codec.object GetLaunchTemplateDataRequest
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for GetHostReservationPurchasePreviewResult. -}
getHostReservationPurchasePreviewResultCodec : Codec GetHostReservationPurchasePreviewResult
getHostReservationPurchasePreviewResultCodec =
    Codec.object GetHostReservationPurchasePreviewResult
        |> Codec.field "TotalUpfrontPrice" .totalUpfrontPrice Codec.string
        |> Codec.field "TotalHourlyPrice" .totalHourlyPrice Codec.string
        |> Codec.field "Purchase" .purchase purchaseSetCodec
        |> Codec.field "CurrencyCode" .currencyCode currencyCodeValuesCodec
        |> Codec.buildObject


{-| Codec for GetHostReservationPurchasePreviewRequest. -}
getHostReservationPurchasePreviewRequestCodec : Codec GetHostReservationPurchasePreviewRequest
getHostReservationPurchasePreviewRequestCodec =
    Codec.object GetHostReservationPurchasePreviewRequest
        |> Codec.field "OfferingId" .offeringId Codec.string
        |> Codec.field "HostIdSet" .hostIdSet requestHostIdSetCodec
        |> Codec.buildObject


{-| Codec for GetEbsEncryptionByDefaultResult. -}
getEbsEncryptionByDefaultResultCodec : Codec GetEbsEncryptionByDefaultResult
getEbsEncryptionByDefaultResultCodec =
    Codec.object GetEbsEncryptionByDefaultResult
        |> Codec.field "EbsEncryptionByDefault" .ebsEncryptionByDefault Codec.bool
        |> Codec.buildObject


{-| Codec for GetEbsEncryptionByDefaultRequest. -}
getEbsEncryptionByDefaultRequestCodec : Codec GetEbsEncryptionByDefaultRequest
getEbsEncryptionByDefaultRequestCodec =
    Codec.object GetEbsEncryptionByDefaultRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for GetEbsDefaultKmsKeyIdResult. -}
getEbsDefaultKmsKeyIdResultCodec : Codec GetEbsDefaultKmsKeyIdResult
getEbsDefaultKmsKeyIdResultCodec =
    Codec.object GetEbsDefaultKmsKeyIdResult |> Codec.field "KmsKeyId" .kmsKeyId Codec.string |> Codec.buildObject


{-| Codec for GetEbsDefaultKmsKeyIdRequest. -}
getEbsDefaultKmsKeyIdRequestCodec : Codec GetEbsDefaultKmsKeyIdRequest
getEbsDefaultKmsKeyIdRequestCodec =
    Codec.object GetEbsDefaultKmsKeyIdRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for GetConsoleScreenshotResult. -}
getConsoleScreenshotResultCodec : Codec GetConsoleScreenshotResult
getConsoleScreenshotResultCodec =
    Codec.object GetConsoleScreenshotResult
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "ImageData" .imageData Codec.string
        |> Codec.buildObject


{-| Codec for GetConsoleScreenshotRequest. -}
getConsoleScreenshotRequestCodec : Codec GetConsoleScreenshotRequest
getConsoleScreenshotRequestCodec =
    Codec.object GetConsoleScreenshotRequest
        |> Codec.field "WakeUp" .wakeUp Codec.bool
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for GetConsoleOutputResult. -}
getConsoleOutputResultCodec : Codec GetConsoleOutputResult
getConsoleOutputResultCodec =
    Codec.object GetConsoleOutputResult
        |> Codec.field "Timestamp" .timestamp dateTimeCodec
        |> Codec.field "Output" .output Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.buildObject


{-| Codec for GetConsoleOutputRequest. -}
getConsoleOutputRequestCodec : Codec GetConsoleOutputRequest
getConsoleOutputRequestCodec =
    Codec.object GetConsoleOutputRequest
        |> Codec.field "Latest" .latest Codec.bool
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for GetCapacityReservationUsageResult. -}
getCapacityReservationUsageResultCodec : Codec GetCapacityReservationUsageResult
getCapacityReservationUsageResultCodec =
    Codec.object GetCapacityReservationUsageResult
        |> Codec.field "TotalInstanceCount" .totalInstanceCount Codec.int
        |> Codec.field "State" .state capacityReservationStateCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "InstanceUsages" .instanceUsages instanceUsageSetCodec
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "CapacityReservationId" .capacityReservationId Codec.string
        |> Codec.field "AvailableInstanceCount" .availableInstanceCount Codec.int
        |> Codec.buildObject


{-| Codec for GetCapacityReservationUsageRequestMaxResults. -}
getCapacityReservationUsageRequestMaxResultsCodec : Codec GetCapacityReservationUsageRequestMaxResults
getCapacityReservationUsageRequestMaxResultsCodec =
    Codec.build
        (Refined.encoder getCapacityReservationUsageRequestMaxResults)
        (Refined.decoder getCapacityReservationUsageRequestMaxResults)


{-| Codec for GetCapacityReservationUsageRequest. -}
getCapacityReservationUsageRequestCodec : Codec GetCapacityReservationUsageRequest
getCapacityReservationUsageRequestCodec =
    Codec.object GetCapacityReservationUsageRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults getCapacityReservationUsageRequestMaxResultsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CapacityReservationId" .capacityReservationId Codec.string
        |> Codec.buildObject


{-| Codec for GatewayType. -}
gatewayTypeCodec : Codec GatewayType
gatewayTypeCodec =
    Codec.build (Enum.encoder gatewayType) (Enum.decoder gatewayType)


{-| Codec for FpgaImageStateCode. -}
fpgaImageStateCodeCodec : Codec FpgaImageStateCode
fpgaImageStateCodeCodec =
    Codec.build (Enum.encoder fpgaImageStateCode) (Enum.decoder fpgaImageStateCode)


{-| Codec for FpgaImageState. -}
fpgaImageStateCodec : Codec FpgaImageState
fpgaImageStateCodec =
    Codec.object FpgaImageState
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code fpgaImageStateCodeCodec
        |> Codec.buildObject


{-| Codec for FpgaImageList. -}
fpgaImageListCodec : Codec FpgaImageList
fpgaImageListCodec =
    Codec.list fpgaImageCodec


{-| Codec for FpgaImageIdList. -}
fpgaImageIdListCodec : Codec FpgaImageIdList
fpgaImageIdListCodec =
    Codec.list Codec.string


{-| Codec for FpgaImageAttributeName. -}
fpgaImageAttributeNameCodec : Codec FpgaImageAttributeName
fpgaImageAttributeNameCodec =
    Codec.build (Enum.encoder fpgaImageAttributeName) (Enum.decoder fpgaImageAttributeName)


{-| Codec for FpgaImageAttribute. -}
fpgaImageAttributeCodec : Codec FpgaImageAttribute
fpgaImageAttributeCodec =
    Codec.object FpgaImageAttribute
        |> Codec.field "ProductCodes" .productCodes productCodeListCodec
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "LoadPermissions" .loadPermissions loadPermissionListCodec
        |> Codec.field "FpgaImageId" .fpgaImageId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for FpgaImage. -}
fpgaImageCodec : Codec FpgaImage
fpgaImageCodec =
    Codec.object FpgaImage
        |> Codec.field "UpdateTime" .updateTime dateTimeCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state fpgaImageStateCodec
        |> Codec.field "ShellVersion" .shellVersion Codec.string
        |> Codec.field "Public" .public Codec.bool
        |> Codec.field "ProductCodes" .productCodes productCodeListCodec
        |> Codec.field "PciId" .pciId pciIdCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "OwnerAlias" .ownerAlias Codec.string
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "FpgaImageId" .fpgaImageId Codec.string
        |> Codec.field "FpgaImageGlobalId" .fpgaImageGlobalId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "DataRetentionSupport" .dataRetentionSupport Codec.bool
        |> Codec.field "CreateTime" .createTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for FlowLogsResourceType. -}
flowLogsResourceTypeCodec : Codec FlowLogsResourceType
flowLogsResourceTypeCodec =
    Codec.build (Enum.encoder flowLogsResourceType) (Enum.decoder flowLogsResourceType)


{-| Codec for FlowLogSet. -}
flowLogSetCodec : Codec FlowLogSet
flowLogSetCodec =
    Codec.list flowLogCodec


{-| Codec for FlowLog. -}
flowLogCodec : Codec FlowLog
flowLogCodec =
    Codec.object FlowLog
        |> Codec.field "TrafficType" .trafficType trafficTypeCodec
        |> Codec.field "ResourceId" .resourceId Codec.string
        |> Codec.field "LogGroupName" .logGroupName Codec.string
        |> Codec.field "LogDestinationType" .logDestinationType logDestinationTypeCodec
        |> Codec.field "LogDestination" .logDestination Codec.string
        |> Codec.field "FlowLogStatus" .flowLogStatus Codec.string
        |> Codec.field "FlowLogId" .flowLogId Codec.string
        |> Codec.field "DeliverLogsStatus" .deliverLogsStatus Codec.string
        |> Codec.field "DeliverLogsPermissionArn" .deliverLogsPermissionArn Codec.string
        |> Codec.field "DeliverLogsErrorMessage" .deliverLogsErrorMessage Codec.string
        |> Codec.field "CreationTime" .creationTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for Float_. -}
floatCodec : Codec Float_
floatCodec =
    Codec.float


{-| Codec for FleetType. -}
fleetTypeCodec : Codec FleetType
fleetTypeCodec =
    Codec.build (Enum.encoder fleetType) (Enum.decoder fleetType)


{-| Codec for FleetStateCode. -}
fleetStateCodeCodec : Codec FleetStateCode
fleetStateCodeCodec =
    Codec.build (Enum.encoder fleetStateCode) (Enum.decoder fleetStateCode)


{-| Codec for FleetSet. -}
fleetSetCodec : Codec FleetSet
fleetSetCodec =
    Codec.list fleetDataCodec


{-| Codec for FleetOnDemandAllocationStrategy. -}
fleetOnDemandAllocationStrategyCodec : Codec FleetOnDemandAllocationStrategy
fleetOnDemandAllocationStrategyCodec =
    Codec.build (Enum.encoder fleetOnDemandAllocationStrategy) (Enum.decoder fleetOnDemandAllocationStrategy)


{-| Codec for FleetLaunchTemplateSpecificationRequest. -}
fleetLaunchTemplateSpecificationRequestCodec : Codec FleetLaunchTemplateSpecificationRequest
fleetLaunchTemplateSpecificationRequestCodec =
    Codec.object FleetLaunchTemplateSpecificationRequest
        |> Codec.field "Version" .version Codec.string
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.buildObject


{-| Codec for FleetLaunchTemplateSpecification. -}
fleetLaunchTemplateSpecificationCodec : Codec FleetLaunchTemplateSpecification
fleetLaunchTemplateSpecificationCodec =
    Codec.object FleetLaunchTemplateSpecification
        |> Codec.field "Version" .version Codec.string
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.buildObject


{-| Codec for FleetLaunchTemplateOverridesRequest. -}
fleetLaunchTemplateOverridesRequestCodec : Codec FleetLaunchTemplateOverridesRequest
fleetLaunchTemplateOverridesRequestCodec =
    Codec.object FleetLaunchTemplateOverridesRequest
        |> Codec.field "WeightedCapacity" .weightedCapacity Codec.float
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "Priority" .priority Codec.float
        |> Codec.field "Placement" .placement placementCodec
        |> Codec.field "MaxPrice" .maxPrice Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for FleetLaunchTemplateOverridesListRequest. -}
fleetLaunchTemplateOverridesListRequestCodec : Codec FleetLaunchTemplateOverridesListRequest
fleetLaunchTemplateOverridesListRequestCodec =
    Codec.list fleetLaunchTemplateOverridesRequestCodec


{-| Codec for FleetLaunchTemplateOverridesList. -}
fleetLaunchTemplateOverridesListCodec : Codec FleetLaunchTemplateOverridesList
fleetLaunchTemplateOverridesListCodec =
    Codec.list fleetLaunchTemplateOverridesCodec


{-| Codec for FleetLaunchTemplateOverrides. -}
fleetLaunchTemplateOverridesCodec : Codec FleetLaunchTemplateOverrides
fleetLaunchTemplateOverridesCodec =
    Codec.object FleetLaunchTemplateOverrides
        |> Codec.field "WeightedCapacity" .weightedCapacity Codec.float
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "Priority" .priority Codec.float
        |> Codec.field "Placement" .placement placementResponseCodec
        |> Codec.field "MaxPrice" .maxPrice Codec.string
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for FleetLaunchTemplateConfigRequest. -}
fleetLaunchTemplateConfigRequestCodec : Codec FleetLaunchTemplateConfigRequest
fleetLaunchTemplateConfigRequestCodec =
    Codec.object FleetLaunchTemplateConfigRequest
        |> Codec.field "Overrides" .overrides fleetLaunchTemplateOverridesListRequestCodec
        |> Codec.field
            "LaunchTemplateSpecification"
            .launchTemplateSpecification
            fleetLaunchTemplateSpecificationRequestCodec
        |> Codec.buildObject


{-| Codec for FleetLaunchTemplateConfigListRequest. -}
fleetLaunchTemplateConfigListRequestCodec : Codec FleetLaunchTemplateConfigListRequest
fleetLaunchTemplateConfigListRequestCodec =
    Codec.list fleetLaunchTemplateConfigRequestCodec


{-| Codec for FleetLaunchTemplateConfigList. -}
fleetLaunchTemplateConfigListCodec : Codec FleetLaunchTemplateConfigList
fleetLaunchTemplateConfigListCodec =
    Codec.list fleetLaunchTemplateConfigCodec


{-| Codec for FleetLaunchTemplateConfig. -}
fleetLaunchTemplateConfigCodec : Codec FleetLaunchTemplateConfig
fleetLaunchTemplateConfigCodec =
    Codec.object FleetLaunchTemplateConfig
        |> Codec.field "Overrides" .overrides fleetLaunchTemplateOverridesListCodec
        |> Codec.field "LaunchTemplateSpecification" .launchTemplateSpecification fleetLaunchTemplateSpecificationCodec
        |> Codec.buildObject


{-| Codec for FleetIdentifier. -}
fleetIdentifierCodec : Codec FleetIdentifier
fleetIdentifierCodec =
    Codec.string


{-| Codec for FleetIdSet. -}
fleetIdSetCodec : Codec FleetIdSet
fleetIdSetCodec =
    Codec.list Codec.string


{-| Codec for FleetExcessCapacityTerminationPolicy. -}
fleetExcessCapacityTerminationPolicyCodec : Codec FleetExcessCapacityTerminationPolicy
fleetExcessCapacityTerminationPolicyCodec =
    Codec.build (Enum.encoder fleetExcessCapacityTerminationPolicy) (Enum.decoder fleetExcessCapacityTerminationPolicy)


{-| Codec for FleetEventType. -}
fleetEventTypeCodec : Codec FleetEventType
fleetEventTypeCodec =
    Codec.build (Enum.encoder fleetEventType) (Enum.decoder fleetEventType)


{-| Codec for FleetData. -}
fleetDataCodec : Codec FleetData
fleetDataCodec =
    Codec.object FleetData
        |> Codec.field "ValidUntil" .validUntil dateTimeCodec
        |> Codec.field "ValidFrom" .validFrom dateTimeCodec
        |> Codec.field "Type" .type_ fleetTypeCodec
        |> Codec.field "TerminateInstancesWithExpiration" .terminateInstancesWithExpiration Codec.bool
        |> Codec.field "TargetCapacitySpecification" .targetCapacitySpecification targetCapacitySpecificationCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "SpotOptions" .spotOptions spotOptionsCodec
        |> Codec.field "ReplaceUnhealthyInstances" .replaceUnhealthyInstances Codec.bool
        |> Codec.field "OnDemandOptions" .onDemandOptions onDemandOptionsCodec
        |> Codec.field "LaunchTemplateConfigs" .launchTemplateConfigs fleetLaunchTemplateConfigListCodec
        |> Codec.field "Instances" .instances describeFleetsInstancesSetCodec
        |> Codec.field "FulfilledOnDemandCapacity" .fulfilledOnDemandCapacity Codec.float
        |> Codec.field "FulfilledCapacity" .fulfilledCapacity Codec.float
        |> Codec.field "FleetState" .fleetState fleetStateCodeCodec
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.field
            "ExcessCapacityTerminationPolicy"
            .excessCapacityTerminationPolicy
            fleetExcessCapacityTerminationPolicyCodec
        |> Codec.field "Errors" .errors describeFleetsErrorSetCodec
        |> Codec.field "CreateTime" .createTime dateTimeCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "ActivityStatus" .activityStatus fleetActivityStatusCodec
        |> Codec.buildObject


{-| Codec for FleetActivityStatus. -}
fleetActivityStatusCodec : Codec FleetActivityStatus
fleetActivityStatusCodec =
    Codec.build (Enum.encoder fleetActivityStatus) (Enum.decoder fleetActivityStatus)


{-| Codec for FilterList. -}
filterListCodec : Codec FilterList
filterListCodec =
    Codec.list filterCodec


{-| Codec for Filter. -}
filterCodec : Codec Filter
filterCodec =
    Codec.object Filter
        |> Codec.field "Values" .values valueStringListCodec
        |> Codec.field "Name" .name Codec.string
        |> Codec.buildObject


{-| Codec for ExportTransitGatewayRoutesResult. -}
exportTransitGatewayRoutesResultCodec : Codec ExportTransitGatewayRoutesResult
exportTransitGatewayRoutesResultCodec =
    Codec.object ExportTransitGatewayRoutesResult
        |> Codec.field "S3Location" .s3Location Codec.string
        |> Codec.buildObject


{-| Codec for ExportTransitGatewayRoutesRequest. -}
exportTransitGatewayRoutesRequestCodec : Codec ExportTransitGatewayRoutesRequest
exportTransitGatewayRoutesRequestCodec =
    Codec.object ExportTransitGatewayRoutesRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "S3Bucket" .s3Bucket Codec.string
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ExportToS3TaskSpecification. -}
exportToS3TaskSpecificationCodec : Codec ExportToS3TaskSpecification
exportToS3TaskSpecificationCodec =
    Codec.object ExportToS3TaskSpecification
        |> Codec.field "S3Prefix" .s3Prefix Codec.string
        |> Codec.field "S3Bucket" .s3Bucket Codec.string
        |> Codec.field "DiskImageFormat" .diskImageFormat diskImageFormatCodec
        |> Codec.field "ContainerFormat" .containerFormat containerFormatCodec
        |> Codec.buildObject


{-| Codec for ExportToS3Task. -}
exportToS3TaskCodec : Codec ExportToS3Task
exportToS3TaskCodec =
    Codec.object ExportToS3Task
        |> Codec.field "S3Key" .s3Key Codec.string
        |> Codec.field "S3Bucket" .s3Bucket Codec.string
        |> Codec.field "DiskImageFormat" .diskImageFormat diskImageFormatCodec
        |> Codec.field "ContainerFormat" .containerFormat containerFormatCodec
        |> Codec.buildObject


{-| Codec for ExportTaskState. -}
exportTaskStateCodec : Codec ExportTaskState
exportTaskStateCodec =
    Codec.build (Enum.encoder exportTaskState) (Enum.decoder exportTaskState)


{-| Codec for ExportTaskList. -}
exportTaskListCodec : Codec ExportTaskList
exportTaskListCodec =
    Codec.list exportTaskCodec


{-| Codec for ExportTaskIdStringList. -}
exportTaskIdStringListCodec : Codec ExportTaskIdStringList
exportTaskIdStringListCodec =
    Codec.list Codec.string


{-| Codec for ExportTask. -}
exportTaskCodec : Codec ExportTask
exportTaskCodec =
    Codec.object ExportTask
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "State" .state exportTaskStateCodec
        |> Codec.field "InstanceExportDetails" .instanceExportDetails instanceExportDetailsCodec
        |> Codec.field "ExportToS3Task" .exportToS3Task exportToS3TaskCodec
        |> Codec.field "ExportTaskId" .exportTaskId Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for ExportEnvironment. -}
exportEnvironmentCodec : Codec ExportEnvironment
exportEnvironmentCodec =
    Codec.build (Enum.encoder exportEnvironment) (Enum.decoder exportEnvironment)


{-| Codec for ExportClientVpnClientConfigurationResult. -}
exportClientVpnClientConfigurationResultCodec : Codec ExportClientVpnClientConfigurationResult
exportClientVpnClientConfigurationResultCodec =
    Codec.object ExportClientVpnClientConfigurationResult
        |> Codec.field "ClientConfiguration" .clientConfiguration Codec.string
        |> Codec.buildObject


{-| Codec for ExportClientVpnClientConfigurationRequest. -}
exportClientVpnClientConfigurationRequestCodec : Codec ExportClientVpnClientConfigurationRequest
exportClientVpnClientConfigurationRequestCodec =
    Codec.object ExportClientVpnClientConfigurationRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for ExportClientVpnClientCertificateRevocationListResult. -}
exportClientVpnClientCertificateRevocationListResultCodec : Codec ExportClientVpnClientCertificateRevocationListResult
exportClientVpnClientCertificateRevocationListResultCodec =
    Codec.object ExportClientVpnClientCertificateRevocationListResult
        |> Codec.field "Status" .status clientCertificateRevocationListStatusCodec
        |> Codec.field "CertificateRevocationList" .certificateRevocationList Codec.string
        |> Codec.buildObject


{-| Codec for ExportClientVpnClientCertificateRevocationListRequest. -}
exportClientVpnClientCertificateRevocationListRequestCodec : Codec ExportClientVpnClientCertificateRevocationListRequest
exportClientVpnClientCertificateRevocationListRequestCodec =
    Codec.object ExportClientVpnClientCertificateRevocationListRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for ExecutableByStringList. -}
executableByStringListCodec : Codec ExecutableByStringList
executableByStringListCodec =
    Codec.list Codec.string


{-| Codec for ExcessCapacityTerminationPolicy. -}
excessCapacityTerminationPolicyCodec : Codec ExcessCapacityTerminationPolicy
excessCapacityTerminationPolicyCodec =
    Codec.build (Enum.encoder excessCapacityTerminationPolicy) (Enum.decoder excessCapacityTerminationPolicy)


{-| Codec for EventType. -}
eventTypeCodec : Codec EventType
eventTypeCodec =
    Codec.build (Enum.encoder eventType) (Enum.decoder eventType)


{-| Codec for EventInformation. -}
eventInformationCodec : Codec EventInformation
eventInformationCodec =
    Codec.object EventInformation
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "EventSubType" .eventSubType Codec.string
        |> Codec.field "EventDescription" .eventDescription Codec.string
        |> Codec.buildObject


{-| Codec for EventCode. -}
eventCodeCodec : Codec EventCode
eventCodeCodec =
    Codec.build (Enum.encoder eventCode) (Enum.decoder eventCode)


{-| Codec for EndpointSet. -}
endpointSetCodec : Codec EndpointSet
endpointSetCodec =
    Codec.list clientVpnEndpointCodec


{-| Codec for EndDateType. -}
endDateTypeCodec : Codec EndDateType
endDateTypeCodec =
    Codec.build (Enum.encoder endDateType) (Enum.decoder endDateType)


{-| Codec for EnableVpcClassicLinkResult. -}
enableVpcClassicLinkResultCodec : Codec EnableVpcClassicLinkResult
enableVpcClassicLinkResultCodec =
    Codec.object EnableVpcClassicLinkResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for EnableVpcClassicLinkRequest. -}
enableVpcClassicLinkRequestCodec : Codec EnableVpcClassicLinkRequest
enableVpcClassicLinkRequestCodec =
    Codec.object EnableVpcClassicLinkRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for EnableVpcClassicLinkDnsSupportResult. -}
enableVpcClassicLinkDnsSupportResultCodec : Codec EnableVpcClassicLinkDnsSupportResult
enableVpcClassicLinkDnsSupportResultCodec =
    Codec.object EnableVpcClassicLinkDnsSupportResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for EnableVpcClassicLinkDnsSupportRequest. -}
enableVpcClassicLinkDnsSupportRequestCodec : Codec EnableVpcClassicLinkDnsSupportRequest
enableVpcClassicLinkDnsSupportRequestCodec =
    Codec.object EnableVpcClassicLinkDnsSupportRequest |> Codec.field "VpcId" .vpcId Codec.string |> Codec.buildObject


{-| Codec for EnableVolumeIorequest. -}
enableVolumeIorequestCodec : Codec EnableVolumeIorequest
enableVolumeIorequestCodec =
    Codec.object EnableVolumeIorequest
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for EnableVgwRoutePropagationRequest. -}
enableVgwRoutePropagationRequestCodec : Codec EnableVgwRoutePropagationRequest
enableVgwRoutePropagationRequestCodec =
    Codec.object EnableVgwRoutePropagationRequest
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "GatewayId" .gatewayId Codec.string
        |> Codec.buildObject


{-| Codec for EnableTransitGatewayRouteTablePropagationResult. -}
enableTransitGatewayRouteTablePropagationResultCodec : Codec EnableTransitGatewayRouteTablePropagationResult
enableTransitGatewayRouteTablePropagationResultCodec =
    Codec.object EnableTransitGatewayRouteTablePropagationResult
        |> Codec.field "Propagation" .propagation transitGatewayPropagationCodec
        |> Codec.buildObject


{-| Codec for EnableTransitGatewayRouteTablePropagationRequest. -}
enableTransitGatewayRouteTablePropagationRequestCodec : Codec EnableTransitGatewayRouteTablePropagationRequest
enableTransitGatewayRouteTablePropagationRequestCodec =
    Codec.object EnableTransitGatewayRouteTablePropagationRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for EnableEbsEncryptionByDefaultResult. -}
enableEbsEncryptionByDefaultResultCodec : Codec EnableEbsEncryptionByDefaultResult
enableEbsEncryptionByDefaultResultCodec =
    Codec.object EnableEbsEncryptionByDefaultResult
        |> Codec.field "EbsEncryptionByDefault" .ebsEncryptionByDefault Codec.bool
        |> Codec.buildObject


{-| Codec for EnableEbsEncryptionByDefaultRequest. -}
enableEbsEncryptionByDefaultRequestCodec : Codec EnableEbsEncryptionByDefaultRequest
enableEbsEncryptionByDefaultRequestCodec =
    Codec.object EnableEbsEncryptionByDefaultRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for ElasticInferenceAccelerators. -}
elasticInferenceAcceleratorsCodec : Codec ElasticInferenceAccelerators
elasticInferenceAcceleratorsCodec =
    Codec.list elasticInferenceAcceleratorCodec


{-| Codec for ElasticInferenceAcceleratorAssociationList. -}
elasticInferenceAcceleratorAssociationListCodec : Codec ElasticInferenceAcceleratorAssociationList
elasticInferenceAcceleratorAssociationListCodec =
    Codec.list elasticInferenceAcceleratorAssociationCodec


{-| Codec for ElasticInferenceAcceleratorAssociation. -}
elasticInferenceAcceleratorAssociationCodec : Codec ElasticInferenceAcceleratorAssociation
elasticInferenceAcceleratorAssociationCodec =
    Codec.object ElasticInferenceAcceleratorAssociation
        |> Codec.field
            "ElasticInferenceAcceleratorAssociationTime"
            .elasticInferenceAcceleratorAssociationTime
            dateTimeCodec
        |> Codec.field
            "ElasticInferenceAcceleratorAssociationState"
            .elasticInferenceAcceleratorAssociationState
            Codec.string
        |> Codec.field "ElasticInferenceAcceleratorAssociationId" .elasticInferenceAcceleratorAssociationId Codec.string
        |> Codec.field "ElasticInferenceAcceleratorArn" .elasticInferenceAcceleratorArn Codec.string
        |> Codec.buildObject


{-| Codec for ElasticInferenceAccelerator. -}
elasticInferenceAcceleratorCodec : Codec ElasticInferenceAccelerator
elasticInferenceAcceleratorCodec =
    Codec.object ElasticInferenceAccelerator |> Codec.field "Type" .type_ Codec.string |> Codec.buildObject


{-| Codec for ElasticGpus. -}
elasticGpusCodec : Codec ElasticGpus
elasticGpusCodec =
    Codec.object ElasticGpus
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "ElasticGpuType" .elasticGpuType Codec.string
        |> Codec.field "ElasticGpuState" .elasticGpuState elasticGpuStateCodec
        |> Codec.field "ElasticGpuId" .elasticGpuId Codec.string
        |> Codec.field "ElasticGpuHealth" .elasticGpuHealth elasticGpuHealthCodec
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for ElasticGpuStatus. -}
elasticGpuStatusCodec : Codec ElasticGpuStatus
elasticGpuStatusCodec =
    Codec.build (Enum.encoder elasticGpuStatus) (Enum.decoder elasticGpuStatus)


{-| Codec for ElasticGpuState. -}
elasticGpuStateCodec : Codec ElasticGpuState
elasticGpuStateCodec =
    Codec.build (Enum.encoder elasticGpuState) (Enum.decoder elasticGpuState)


{-| Codec for ElasticGpuSpecifications. -}
elasticGpuSpecificationsCodec : Codec ElasticGpuSpecifications
elasticGpuSpecificationsCodec =
    Codec.list elasticGpuSpecificationCodec


{-| Codec for ElasticGpuSpecificationResponseList. -}
elasticGpuSpecificationResponseListCodec : Codec ElasticGpuSpecificationResponseList
elasticGpuSpecificationResponseListCodec =
    Codec.list elasticGpuSpecificationResponseCodec


{-| Codec for ElasticGpuSpecificationResponse. -}
elasticGpuSpecificationResponseCodec : Codec ElasticGpuSpecificationResponse
elasticGpuSpecificationResponseCodec =
    Codec.object ElasticGpuSpecificationResponse |> Codec.field "Type" .type_ Codec.string |> Codec.buildObject


{-| Codec for ElasticGpuSpecificationList. -}
elasticGpuSpecificationListCodec : Codec ElasticGpuSpecificationList
elasticGpuSpecificationListCodec =
    Codec.list elasticGpuSpecificationCodec


{-| Codec for ElasticGpuSpecification. -}
elasticGpuSpecificationCodec : Codec ElasticGpuSpecification
elasticGpuSpecificationCodec =
    Codec.object ElasticGpuSpecification |> Codec.field "Type" .type_ Codec.string |> Codec.buildObject


{-| Codec for ElasticGpuSet. -}
elasticGpuSetCodec : Codec ElasticGpuSet
elasticGpuSetCodec =
    Codec.list elasticGpusCodec


{-| Codec for ElasticGpuIdSet. -}
elasticGpuIdSetCodec : Codec ElasticGpuIdSet
elasticGpuIdSetCodec =
    Codec.list Codec.string


{-| Codec for ElasticGpuHealth. -}
elasticGpuHealthCodec : Codec ElasticGpuHealth
elasticGpuHealthCodec =
    Codec.object ElasticGpuHealth |> Codec.field "Status" .status elasticGpuStatusCodec |> Codec.buildObject


{-| Codec for ElasticGpuAssociationList. -}
elasticGpuAssociationListCodec : Codec ElasticGpuAssociationList
elasticGpuAssociationListCodec =
    Codec.list elasticGpuAssociationCodec


{-| Codec for ElasticGpuAssociation. -}
elasticGpuAssociationCodec : Codec ElasticGpuAssociation
elasticGpuAssociationCodec =
    Codec.object ElasticGpuAssociation
        |> Codec.field "ElasticGpuId" .elasticGpuId Codec.string
        |> Codec.field "ElasticGpuAssociationTime" .elasticGpuAssociationTime Codec.string
        |> Codec.field "ElasticGpuAssociationState" .elasticGpuAssociationState Codec.string
        |> Codec.field "ElasticGpuAssociationId" .elasticGpuAssociationId Codec.string
        |> Codec.buildObject


{-| Codec for EgressOnlyInternetGatewayList. -}
egressOnlyInternetGatewayListCodec : Codec EgressOnlyInternetGatewayList
egressOnlyInternetGatewayListCodec =
    Codec.list egressOnlyInternetGatewayCodec


{-| Codec for EgressOnlyInternetGatewayIdList. -}
egressOnlyInternetGatewayIdListCodec : Codec EgressOnlyInternetGatewayIdList
egressOnlyInternetGatewayIdListCodec =
    Codec.list Codec.string


{-| Codec for EgressOnlyInternetGatewayId. -}
egressOnlyInternetGatewayIdCodec : Codec EgressOnlyInternetGatewayId
egressOnlyInternetGatewayIdCodec =
    Codec.string


{-| Codec for EgressOnlyInternetGateway. -}
egressOnlyInternetGatewayCodec : Codec EgressOnlyInternetGateway
egressOnlyInternetGatewayCodec =
    Codec.object EgressOnlyInternetGateway
        |> Codec.field "EgressOnlyInternetGatewayId" .egressOnlyInternetGatewayId Codec.string
        |> Codec.field "Attachments" .attachments internetGatewayAttachmentListCodec
        |> Codec.buildObject


{-| Codec for EbsInstanceBlockDeviceSpecification. -}
ebsInstanceBlockDeviceSpecificationCodec : Codec EbsInstanceBlockDeviceSpecification
ebsInstanceBlockDeviceSpecificationCodec =
    Codec.object EbsInstanceBlockDeviceSpecification
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.buildObject


{-| Codec for EbsInstanceBlockDevice. -}
ebsInstanceBlockDeviceCodec : Codec EbsInstanceBlockDevice
ebsInstanceBlockDeviceCodec =
    Codec.object EbsInstanceBlockDevice
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "Status" .status attachmentStatusCodec
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.field "AttachTime" .attachTime dateTimeCodec
        |> Codec.buildObject


{-| Codec for EbsBlockDevice. -}
ebsBlockDeviceCodec : Codec EbsBlockDevice
ebsBlockDeviceCodec =
    Codec.object EbsBlockDevice
        |> Codec.field "VolumeType" .volumeType volumeTypeCodec
        |> Codec.field "VolumeSize" .volumeSize Codec.int
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Iops" .iops Codec.int
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DeleteOnTermination" .deleteOnTermination Codec.bool
        |> Codec.buildObject


{-| Codec for Double. -}
doubleCodec : Codec Double
doubleCodec =
    Codec.float


{-| Codec for DomainType. -}
domainTypeCodec : Codec DomainType
domainTypeCodec =
    Codec.build (Enum.encoder domainType) (Enum.decoder domainType)


{-| Codec for DnsSupportValue. -}
dnsSupportValueCodec : Codec DnsSupportValue
dnsSupportValueCodec =
    Codec.build (Enum.encoder dnsSupportValue) (Enum.decoder dnsSupportValue)


{-| Codec for DnsServersOptionsModifyStructure. -}
dnsServersOptionsModifyStructureCodec : Codec DnsServersOptionsModifyStructure
dnsServersOptionsModifyStructureCodec =
    Codec.object DnsServersOptionsModifyStructure
        |> Codec.field "Enabled" .enabled Codec.bool
        |> Codec.field "CustomDnsServers" .customDnsServers valueStringListCodec
        |> Codec.buildObject


{-| Codec for DnsEntrySet. -}
dnsEntrySetCodec : Codec DnsEntrySet
dnsEntrySetCodec =
    Codec.list dnsEntryCodec


{-| Codec for DnsEntry. -}
dnsEntryCodec : Codec DnsEntry
dnsEntryCodec =
    Codec.object DnsEntry
        |> Codec.field "HostedZoneId" .hostedZoneId Codec.string
        |> Codec.field "DnsName" .dnsName Codec.string
        |> Codec.buildObject


{-| Codec for DiskImageVolumeDescription. -}
diskImageVolumeDescriptionCodec : Codec DiskImageVolumeDescription
diskImageVolumeDescriptionCodec =
    Codec.object DiskImageVolumeDescription
        |> Codec.field "Size" .size Codec.int
        |> Codec.field "Id" .id Codec.string
        |> Codec.buildObject


{-| Codec for DiskImageList. -}
diskImageListCodec : Codec DiskImageList
diskImageListCodec =
    Codec.list diskImageCodec


{-| Codec for DiskImageFormat. -}
diskImageFormatCodec : Codec DiskImageFormat
diskImageFormatCodec =
    Codec.build (Enum.encoder diskImageFormat) (Enum.decoder diskImageFormat)


{-| Codec for DiskImageDetail. -}
diskImageDetailCodec : Codec DiskImageDetail
diskImageDetailCodec =
    Codec.object DiskImageDetail
        |> Codec.field "ImportManifestUrl" .importManifestUrl Codec.string
        |> Codec.field "Format" .format diskImageFormatCodec
        |> Codec.field "Bytes" .bytes Codec.int
        |> Codec.buildObject


{-| Codec for DiskImageDescription. -}
diskImageDescriptionCodec : Codec DiskImageDescription
diskImageDescriptionCodec =
    Codec.object DiskImageDescription
        |> Codec.field "Size" .size Codec.int
        |> Codec.field "ImportManifestUrl" .importManifestUrl Codec.string
        |> Codec.field "Format" .format diskImageFormatCodec
        |> Codec.field "Checksum" .checksum Codec.string
        |> Codec.buildObject


{-| Codec for DiskImage. -}
diskImageCodec : Codec DiskImage
diskImageCodec =
    Codec.object DiskImage
        |> Codec.field "Volume" .volume volumeDetailCodec
        |> Codec.field "Image" .image diskImageDetailCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for DisassociateVpcCidrBlockResult. -}
disassociateVpcCidrBlockResultCodec : Codec DisassociateVpcCidrBlockResult
disassociateVpcCidrBlockResultCodec =
    Codec.object DisassociateVpcCidrBlockResult
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Ipv6CidrBlockAssociation" .ipv6CidrBlockAssociation vpcIpv6CidrBlockAssociationCodec
        |> Codec.field "CidrBlockAssociation" .cidrBlockAssociation vpcCidrBlockAssociationCodec
        |> Codec.buildObject


{-| Codec for DisassociateVpcCidrBlockRequest. -}
disassociateVpcCidrBlockRequestCodec : Codec DisassociateVpcCidrBlockRequest
disassociateVpcCidrBlockRequestCodec =
    Codec.object DisassociateVpcCidrBlockRequest
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for DisassociateTransitGatewayRouteTableResult. -}
disassociateTransitGatewayRouteTableResultCodec : Codec DisassociateTransitGatewayRouteTableResult
disassociateTransitGatewayRouteTableResultCodec =
    Codec.object DisassociateTransitGatewayRouteTableResult
        |> Codec.field "Association" .association transitGatewayAssociationCodec
        |> Codec.buildObject


{-| Codec for DisassociateTransitGatewayRouteTableRequest. -}
disassociateTransitGatewayRouteTableRequestCodec : Codec DisassociateTransitGatewayRouteTableRequest
disassociateTransitGatewayRouteTableRequestCodec =
    Codec.object DisassociateTransitGatewayRouteTableRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DisassociateSubnetCidrBlockResult. -}
disassociateSubnetCidrBlockResultCodec : Codec DisassociateSubnetCidrBlockResult
disassociateSubnetCidrBlockResultCodec =
    Codec.object DisassociateSubnetCidrBlockResult
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "Ipv6CidrBlockAssociation" .ipv6CidrBlockAssociation subnetIpv6CidrBlockAssociationCodec
        |> Codec.buildObject


{-| Codec for DisassociateSubnetCidrBlockRequest. -}
disassociateSubnetCidrBlockRequestCodec : Codec DisassociateSubnetCidrBlockRequest
disassociateSubnetCidrBlockRequestCodec =
    Codec.object DisassociateSubnetCidrBlockRequest
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for DisassociateRouteTableRequest. -}
disassociateRouteTableRequestCodec : Codec DisassociateRouteTableRequest
disassociateRouteTableRequestCodec =
    Codec.object DisassociateRouteTableRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for DisassociateIamInstanceProfileResult. -}
disassociateIamInstanceProfileResultCodec : Codec DisassociateIamInstanceProfileResult
disassociateIamInstanceProfileResultCodec =
    Codec.object DisassociateIamInstanceProfileResult
        |> Codec.field "IamInstanceProfileAssociation" .iamInstanceProfileAssociation iamInstanceProfileAssociationCodec
        |> Codec.buildObject


{-| Codec for DisassociateIamInstanceProfileRequest. -}
disassociateIamInstanceProfileRequestCodec : Codec DisassociateIamInstanceProfileRequest
disassociateIamInstanceProfileRequestCodec =
    Codec.object DisassociateIamInstanceProfileRequest
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for DisassociateClientVpnTargetNetworkResult. -}
disassociateClientVpnTargetNetworkResultCodec : Codec DisassociateClientVpnTargetNetworkResult
disassociateClientVpnTargetNetworkResultCodec =
    Codec.object DisassociateClientVpnTargetNetworkResult
        |> Codec.field "Status" .status associationStatusCodec
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for DisassociateClientVpnTargetNetworkRequest. -}
disassociateClientVpnTargetNetworkRequestCodec : Codec DisassociateClientVpnTargetNetworkRequest
disassociateClientVpnTargetNetworkRequestCodec =
    Codec.object DisassociateClientVpnTargetNetworkRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for DisassociateAddressRequest. -}
disassociateAddressRequestCodec : Codec DisassociateAddressRequest
disassociateAddressRequestCodec =
    Codec.object DisassociateAddressRequest
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for DisableVpcClassicLinkResult. -}
disableVpcClassicLinkResultCodec : Codec DisableVpcClassicLinkResult
disableVpcClassicLinkResultCodec =
    Codec.object DisableVpcClassicLinkResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for DisableVpcClassicLinkRequest. -}
disableVpcClassicLinkRequestCodec : Codec DisableVpcClassicLinkRequest
disableVpcClassicLinkRequestCodec =
    Codec.object DisableVpcClassicLinkRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DisableVpcClassicLinkDnsSupportResult. -}
disableVpcClassicLinkDnsSupportResultCodec : Codec DisableVpcClassicLinkDnsSupportResult
disableVpcClassicLinkDnsSupportResultCodec =
    Codec.object DisableVpcClassicLinkDnsSupportResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for DisableVpcClassicLinkDnsSupportRequest. -}
disableVpcClassicLinkDnsSupportRequestCodec : Codec DisableVpcClassicLinkDnsSupportRequest
disableVpcClassicLinkDnsSupportRequestCodec =
    Codec.object DisableVpcClassicLinkDnsSupportRequest |> Codec.field "VpcId" .vpcId Codec.string |> Codec.buildObject


{-| Codec for DisableVgwRoutePropagationRequest. -}
disableVgwRoutePropagationRequestCodec : Codec DisableVgwRoutePropagationRequest
disableVgwRoutePropagationRequestCodec =
    Codec.object DisableVgwRoutePropagationRequest
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "GatewayId" .gatewayId Codec.string
        |> Codec.buildObject


{-| Codec for DisableTransitGatewayRouteTablePropagationResult. -}
disableTransitGatewayRouteTablePropagationResultCodec : Codec DisableTransitGatewayRouteTablePropagationResult
disableTransitGatewayRouteTablePropagationResultCodec =
    Codec.object DisableTransitGatewayRouteTablePropagationResult
        |> Codec.field "Propagation" .propagation transitGatewayPropagationCodec
        |> Codec.buildObject


{-| Codec for DisableTransitGatewayRouteTablePropagationRequest. -}
disableTransitGatewayRouteTablePropagationRequestCodec : Codec DisableTransitGatewayRouteTablePropagationRequest
disableTransitGatewayRouteTablePropagationRequestCodec =
    Codec.object DisableTransitGatewayRouteTablePropagationRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DisableEbsEncryptionByDefaultResult. -}
disableEbsEncryptionByDefaultResultCodec : Codec DisableEbsEncryptionByDefaultResult
disableEbsEncryptionByDefaultResultCodec =
    Codec.object DisableEbsEncryptionByDefaultResult
        |> Codec.field "EbsEncryptionByDefault" .ebsEncryptionByDefault Codec.bool
        |> Codec.buildObject


{-| Codec for DisableEbsEncryptionByDefaultRequest. -}
disableEbsEncryptionByDefaultRequestCodec : Codec DisableEbsEncryptionByDefaultRequest
disableEbsEncryptionByDefaultRequestCodec =
    Codec.object DisableEbsEncryptionByDefaultRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for DirectoryServiceAuthenticationRequest. -}
directoryServiceAuthenticationRequestCodec : Codec DirectoryServiceAuthenticationRequest
directoryServiceAuthenticationRequestCodec =
    Codec.object DirectoryServiceAuthenticationRequest
        |> Codec.field "DirectoryId" .directoryId Codec.string
        |> Codec.buildObject


{-| Codec for DirectoryServiceAuthentication. -}
directoryServiceAuthenticationCodec : Codec DirectoryServiceAuthentication
directoryServiceAuthenticationCodec =
    Codec.object DirectoryServiceAuthentication
        |> Codec.field "DirectoryId" .directoryId Codec.string
        |> Codec.buildObject


{-| Codec for DhcpOptionsList. -}
dhcpOptionsListCodec : Codec DhcpOptionsList
dhcpOptionsListCodec =
    Codec.list dhcpOptionsCodec


{-| Codec for DhcpOptionsIdStringList. -}
dhcpOptionsIdStringListCodec : Codec DhcpOptionsIdStringList
dhcpOptionsIdStringListCodec =
    Codec.list Codec.string


{-| Codec for DhcpOptions. -}
dhcpOptionsCodec : Codec DhcpOptions
dhcpOptionsCodec =
    Codec.object DhcpOptions
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "DhcpOptionsId" .dhcpOptionsId Codec.string
        |> Codec.field "DhcpConfigurations" .dhcpConfigurations dhcpConfigurationListCodec
        |> Codec.buildObject


{-| Codec for DhcpConfigurationValueList. -}
dhcpConfigurationValueListCodec : Codec DhcpConfigurationValueList
dhcpConfigurationValueListCodec =
    Codec.list attributeValueCodec


{-| Codec for DhcpConfigurationList. -}
dhcpConfigurationListCodec : Codec DhcpConfigurationList
dhcpConfigurationListCodec =
    Codec.list dhcpConfigurationCodec


{-| Codec for DhcpConfiguration. -}
dhcpConfigurationCodec : Codec DhcpConfiguration
dhcpConfigurationCodec =
    Codec.object DhcpConfiguration
        |> Codec.field "Values" .values dhcpConfigurationValueListCodec
        |> Codec.field "Key" .key Codec.string
        |> Codec.buildObject


{-| Codec for DeviceType. -}
deviceTypeCodec : Codec DeviceType
deviceTypeCodec =
    Codec.build (Enum.encoder deviceType) (Enum.decoder deviceType)


{-| Codec for DetachVpnGatewayRequest. -}
detachVpnGatewayRequestCodec : Codec DetachVpnGatewayRequest
detachVpnGatewayRequestCodec =
    Codec.object DetachVpnGatewayRequest
        |> Codec.field "VpnGatewayId" .vpnGatewayId Codec.string
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DetachVolumeRequest. -}
detachVolumeRequestCodec : Codec DetachVolumeRequest
detachVolumeRequestCodec =
    Codec.object DetachVolumeRequest
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Force" .force Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Device" .device Codec.string
        |> Codec.buildObject


{-| Codec for DetachNetworkInterfaceRequest. -}
detachNetworkInterfaceRequestCodec : Codec DetachNetworkInterfaceRequest
detachNetworkInterfaceRequestCodec =
    Codec.object DetachNetworkInterfaceRequest
        |> Codec.field "Force" .force Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AttachmentId" .attachmentId Codec.string
        |> Codec.buildObject


{-| Codec for DetachInternetGatewayRequest. -}
detachInternetGatewayRequestCodec : Codec DetachInternetGatewayRequest
detachInternetGatewayRequestCodec =
    Codec.object DetachInternetGatewayRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "InternetGatewayId" .internetGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DetachClassicLinkVpcResult. -}
detachClassicLinkVpcResultCodec : Codec DetachClassicLinkVpcResult
detachClassicLinkVpcResultCodec =
    Codec.object DetachClassicLinkVpcResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for DetachClassicLinkVpcRequest. -}
detachClassicLinkVpcRequestCodec : Codec DetachClassicLinkVpcRequest
detachClassicLinkVpcRequestCodec =
    Codec.object DetachClassicLinkVpcRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpnGatewaysResult. -}
describeVpnGatewaysResultCodec : Codec DescribeVpnGatewaysResult
describeVpnGatewaysResultCodec =
    Codec.object DescribeVpnGatewaysResult
        |> Codec.field "VpnGateways" .vpnGateways vpnGatewayListCodec
        |> Codec.buildObject


{-| Codec for DescribeVpnGatewaysRequest. -}
describeVpnGatewaysRequestCodec : Codec DescribeVpnGatewaysRequest
describeVpnGatewaysRequestCodec =
    Codec.object DescribeVpnGatewaysRequest
        |> Codec.field "VpnGatewayIds" .vpnGatewayIds vpnGatewayIdStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpnConnectionsResult. -}
describeVpnConnectionsResultCodec : Codec DescribeVpnConnectionsResult
describeVpnConnectionsResultCodec =
    Codec.object DescribeVpnConnectionsResult
        |> Codec.field "VpnConnections" .vpnConnections vpnConnectionListCodec
        |> Codec.buildObject


{-| Codec for DescribeVpnConnectionsRequest. -}
describeVpnConnectionsRequestCodec : Codec DescribeVpnConnectionsRequest
describeVpnConnectionsRequestCodec =
    Codec.object DescribeVpnConnectionsRequest
        |> Codec.field "VpnConnectionIds" .vpnConnectionIds vpnConnectionIdStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcsResult. -}
describeVpcsResultCodec : Codec DescribeVpcsResult
describeVpcsResultCodec =
    Codec.object DescribeVpcsResult
        |> Codec.field "Vpcs" .vpcs vpcListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVpcsRequest. -}
describeVpcsRequestCodec : Codec DescribeVpcsRequest
describeVpcsRequestCodec =
    Codec.object DescribeVpcsRequest
        |> Codec.field "VpcIds" .vpcIds vpcIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeVpcsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcsMaxResults. -}
describeVpcsMaxResultsCodec : Codec DescribeVpcsMaxResults
describeVpcsMaxResultsCodec =
    Codec.build (Refined.encoder describeVpcsMaxResults) (Refined.decoder describeVpcsMaxResults)


{-| Codec for DescribeVpcPeeringConnectionsResult. -}
describeVpcPeeringConnectionsResultCodec : Codec DescribeVpcPeeringConnectionsResult
describeVpcPeeringConnectionsResultCodec =
    Codec.object DescribeVpcPeeringConnectionsResult
        |> Codec.field "VpcPeeringConnections" .vpcPeeringConnections vpcPeeringConnectionListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVpcPeeringConnectionsRequest. -}
describeVpcPeeringConnectionsRequestCodec : Codec DescribeVpcPeeringConnectionsRequest
describeVpcPeeringConnectionsRequestCodec =
    Codec.object DescribeVpcPeeringConnectionsRequest
        |> Codec.field "VpcPeeringConnectionIds" .vpcPeeringConnectionIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeVpcPeeringConnectionsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcPeeringConnectionsMaxResults. -}
describeVpcPeeringConnectionsMaxResultsCodec : Codec DescribeVpcPeeringConnectionsMaxResults
describeVpcPeeringConnectionsMaxResultsCodec =
    Codec.build
        (Refined.encoder describeVpcPeeringConnectionsMaxResults)
        (Refined.decoder describeVpcPeeringConnectionsMaxResults)


{-| Codec for DescribeVpcEndpointsResult. -}
describeVpcEndpointsResultCodec : Codec DescribeVpcEndpointsResult
describeVpcEndpointsResultCodec =
    Codec.object DescribeVpcEndpointsResult
        |> Codec.field "VpcEndpoints" .vpcEndpoints vpcEndpointSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointsRequest. -}
describeVpcEndpointsRequestCodec : Codec DescribeVpcEndpointsRequest
describeVpcEndpointsRequestCodec =
    Codec.object DescribeVpcEndpointsRequest
        |> Codec.field "VpcEndpointIds" .vpcEndpointIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointServicesResult. -}
describeVpcEndpointServicesResultCodec : Codec DescribeVpcEndpointServicesResult
describeVpcEndpointServicesResultCodec =
    Codec.object DescribeVpcEndpointServicesResult
        |> Codec.field "ServiceNames" .serviceNames valueStringListCodec
        |> Codec.field "ServiceDetails" .serviceDetails serviceDetailSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointServicesRequest. -}
describeVpcEndpointServicesRequestCodec : Codec DescribeVpcEndpointServicesRequest
describeVpcEndpointServicesRequestCodec =
    Codec.object DescribeVpcEndpointServicesRequest
        |> Codec.field "ServiceNames" .serviceNames valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointServicePermissionsResult. -}
describeVpcEndpointServicePermissionsResultCodec : Codec DescribeVpcEndpointServicePermissionsResult
describeVpcEndpointServicePermissionsResultCodec =
    Codec.object DescribeVpcEndpointServicePermissionsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "AllowedPrincipals" .allowedPrincipals allowedPrincipalSetCodec
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointServicePermissionsRequest. -}
describeVpcEndpointServicePermissionsRequestCodec : Codec DescribeVpcEndpointServicePermissionsRequest
describeVpcEndpointServicePermissionsRequestCodec =
    Codec.object DescribeVpcEndpointServicePermissionsRequest
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointServiceConfigurationsResult. -}
describeVpcEndpointServiceConfigurationsResultCodec : Codec DescribeVpcEndpointServiceConfigurationsResult
describeVpcEndpointServiceConfigurationsResultCodec =
    Codec.object DescribeVpcEndpointServiceConfigurationsResult
        |> Codec.field "ServiceConfigurations" .serviceConfigurations serviceConfigurationSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointServiceConfigurationsRequest. -}
describeVpcEndpointServiceConfigurationsRequestCodec : Codec DescribeVpcEndpointServiceConfigurationsRequest
describeVpcEndpointServiceConfigurationsRequestCodec =
    Codec.object DescribeVpcEndpointServiceConfigurationsRequest
        |> Codec.field "ServiceIds" .serviceIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointConnectionsResult. -}
describeVpcEndpointConnectionsResultCodec : Codec DescribeVpcEndpointConnectionsResult
describeVpcEndpointConnectionsResultCodec =
    Codec.object DescribeVpcEndpointConnectionsResult
        |> Codec.field "VpcEndpointConnections" .vpcEndpointConnections vpcEndpointConnectionSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointConnectionsRequest. -}
describeVpcEndpointConnectionsRequestCodec : Codec DescribeVpcEndpointConnectionsRequest
describeVpcEndpointConnectionsRequestCodec =
    Codec.object DescribeVpcEndpointConnectionsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointConnectionNotificationsResult. -}
describeVpcEndpointConnectionNotificationsResultCodec : Codec DescribeVpcEndpointConnectionNotificationsResult
describeVpcEndpointConnectionNotificationsResultCodec =
    Codec.object DescribeVpcEndpointConnectionNotificationsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "ConnectionNotificationSet" .connectionNotificationSet connectionNotificationSetCodec
        |> Codec.buildObject


{-| Codec for DescribeVpcEndpointConnectionNotificationsRequest. -}
describeVpcEndpointConnectionNotificationsRequestCodec : Codec DescribeVpcEndpointConnectionNotificationsRequest
describeVpcEndpointConnectionNotificationsRequestCodec =
    Codec.object DescribeVpcEndpointConnectionNotificationsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ConnectionNotificationId" .connectionNotificationId Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVpcClassicLinkResult. -}
describeVpcClassicLinkResultCodec : Codec DescribeVpcClassicLinkResult
describeVpcClassicLinkResultCodec =
    Codec.object DescribeVpcClassicLinkResult |> Codec.field "Vpcs" .vpcs vpcClassicLinkListCodec |> Codec.buildObject


{-| Codec for DescribeVpcClassicLinkRequest. -}
describeVpcClassicLinkRequestCodec : Codec DescribeVpcClassicLinkRequest
describeVpcClassicLinkRequestCodec =
    Codec.object DescribeVpcClassicLinkRequest
        |> Codec.field "VpcIds" .vpcIds vpcClassicLinkIdListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVpcClassicLinkDnsSupportResult. -}
describeVpcClassicLinkDnsSupportResultCodec : Codec DescribeVpcClassicLinkDnsSupportResult
describeVpcClassicLinkDnsSupportResultCodec =
    Codec.object DescribeVpcClassicLinkDnsSupportResult
        |> Codec.field "Vpcs" .vpcs classicLinkDnsSupportListCodec
        |> Codec.field "NextToken" .nextToken describeVpcClassicLinkDnsSupportNextTokenCodec
        |> Codec.buildObject


{-| Codec for DescribeVpcClassicLinkDnsSupportRequest. -}
describeVpcClassicLinkDnsSupportRequestCodec : Codec DescribeVpcClassicLinkDnsSupportRequest
describeVpcClassicLinkDnsSupportRequestCodec =
    Codec.object DescribeVpcClassicLinkDnsSupportRequest
        |> Codec.field "VpcIds" .vpcIds vpcClassicLinkIdListCodec
        |> Codec.field "NextToken" .nextToken describeVpcClassicLinkDnsSupportNextTokenCodec
        |> Codec.field "MaxResults" .maxResults describeVpcClassicLinkDnsSupportMaxResultsCodec
        |> Codec.buildObject


{-| Codec for DescribeVpcClassicLinkDnsSupportNextToken. -}
describeVpcClassicLinkDnsSupportNextTokenCodec : Codec DescribeVpcClassicLinkDnsSupportNextToken
describeVpcClassicLinkDnsSupportNextTokenCodec =
    Codec.build
        (Refined.encoder describeVpcClassicLinkDnsSupportNextToken)
        (Refined.decoder describeVpcClassicLinkDnsSupportNextToken)


{-| Codec for DescribeVpcClassicLinkDnsSupportMaxResults. -}
describeVpcClassicLinkDnsSupportMaxResultsCodec : Codec DescribeVpcClassicLinkDnsSupportMaxResults
describeVpcClassicLinkDnsSupportMaxResultsCodec =
    Codec.build
        (Refined.encoder describeVpcClassicLinkDnsSupportMaxResults)
        (Refined.decoder describeVpcClassicLinkDnsSupportMaxResults)


{-| Codec for DescribeVpcAttributeResult. -}
describeVpcAttributeResultCodec : Codec DescribeVpcAttributeResult
describeVpcAttributeResultCodec =
    Codec.object DescribeVpcAttributeResult
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "EnableDnsSupport" .enableDnsSupport attributeBooleanValueCodec
        |> Codec.field "EnableDnsHostnames" .enableDnsHostnames attributeBooleanValueCodec
        |> Codec.buildObject


{-| Codec for DescribeVpcAttributeRequest. -}
describeVpcAttributeRequestCodec : Codec DescribeVpcAttributeRequest
describeVpcAttributeRequestCodec =
    Codec.object DescribeVpcAttributeRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute vpcAttributeNameCodec
        |> Codec.buildObject


{-| Codec for DescribeVolumesResult. -}
describeVolumesResultCodec : Codec DescribeVolumesResult
describeVolumesResultCodec =
    Codec.object DescribeVolumesResult
        |> Codec.field "Volumes" .volumes volumeListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVolumesRequest. -}
describeVolumesRequestCodec : Codec DescribeVolumesRequest
describeVolumesRequestCodec =
    Codec.object DescribeVolumesRequest
        |> Codec.field "VolumeIds" .volumeIds volumeIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVolumesModificationsResult. -}
describeVolumesModificationsResultCodec : Codec DescribeVolumesModificationsResult
describeVolumesModificationsResultCodec =
    Codec.object DescribeVolumesModificationsResult
        |> Codec.field "VolumesModifications" .volumesModifications volumeModificationListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVolumesModificationsRequest. -}
describeVolumesModificationsRequestCodec : Codec DescribeVolumesModificationsRequest
describeVolumesModificationsRequestCodec =
    Codec.object DescribeVolumesModificationsRequest
        |> Codec.field "VolumeIds" .volumeIds volumeIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVolumeStatusResult. -}
describeVolumeStatusResultCodec : Codec DescribeVolumeStatusResult
describeVolumeStatusResultCodec =
    Codec.object DescribeVolumeStatusResult
        |> Codec.field "VolumeStatuses" .volumeStatuses volumeStatusListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeVolumeStatusRequest. -}
describeVolumeStatusRequestCodec : Codec DescribeVolumeStatusRequest
describeVolumeStatusRequestCodec =
    Codec.object DescribeVolumeStatusRequest
        |> Codec.field "VolumeIds" .volumeIds volumeIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeVolumeAttributeResult. -}
describeVolumeAttributeResultCodec : Codec DescribeVolumeAttributeResult
describeVolumeAttributeResultCodec =
    Codec.object DescribeVolumeAttributeResult
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "ProductCodes" .productCodes productCodeListCodec
        |> Codec.field "AutoEnableIO" .autoEnableIo attributeBooleanValueCodec
        |> Codec.buildObject


{-| Codec for DescribeVolumeAttributeRequest. -}
describeVolumeAttributeRequestCodec : Codec DescribeVolumeAttributeRequest
describeVolumeAttributeRequestCodec =
    Codec.object DescribeVolumeAttributeRequest
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute volumeAttributeNameCodec
        |> Codec.buildObject


{-| Codec for DescribeTransitGatewaysResult. -}
describeTransitGatewaysResultCodec : Codec DescribeTransitGatewaysResult
describeTransitGatewaysResultCodec =
    Codec.object DescribeTransitGatewaysResult
        |> Codec.field "TransitGateways" .transitGateways transitGatewayListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeTransitGatewaysRequest. -}
describeTransitGatewaysRequestCodec : Codec DescribeTransitGatewaysRequest
describeTransitGatewaysRequestCodec =
    Codec.object DescribeTransitGatewaysRequest
        |> Codec.field "TransitGatewayIds" .transitGatewayIds transitGatewayIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults transitGatewayMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeTransitGatewayVpcAttachmentsResult. -}
describeTransitGatewayVpcAttachmentsResultCodec : Codec DescribeTransitGatewayVpcAttachmentsResult
describeTransitGatewayVpcAttachmentsResultCodec =
    Codec.object DescribeTransitGatewayVpcAttachmentsResult
        |> Codec.field "TransitGatewayVpcAttachments" .transitGatewayVpcAttachments transitGatewayVpcAttachmentListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeTransitGatewayVpcAttachmentsRequest. -}
describeTransitGatewayVpcAttachmentsRequestCodec : Codec DescribeTransitGatewayVpcAttachmentsRequest
describeTransitGatewayVpcAttachmentsRequestCodec =
    Codec.object DescribeTransitGatewayVpcAttachmentsRequest
        |> Codec.field
            "TransitGatewayAttachmentIds"
            .transitGatewayAttachmentIds
            transitGatewayAttachmentIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults transitGatewayMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeTransitGatewayRouteTablesResult. -}
describeTransitGatewayRouteTablesResultCodec : Codec DescribeTransitGatewayRouteTablesResult
describeTransitGatewayRouteTablesResultCodec =
    Codec.object DescribeTransitGatewayRouteTablesResult
        |> Codec.field "TransitGatewayRouteTables" .transitGatewayRouteTables transitGatewayRouteTableListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeTransitGatewayRouteTablesRequest. -}
describeTransitGatewayRouteTablesRequestCodec : Codec DescribeTransitGatewayRouteTablesRequest
describeTransitGatewayRouteTablesRequestCodec =
    Codec.object DescribeTransitGatewayRouteTablesRequest
        |> Codec.field
            "TransitGatewayRouteTableIds"
            .transitGatewayRouteTableIds
            transitGatewayRouteTableIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults transitGatewayMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeTransitGatewayAttachmentsResult. -}
describeTransitGatewayAttachmentsResultCodec : Codec DescribeTransitGatewayAttachmentsResult
describeTransitGatewayAttachmentsResultCodec =
    Codec.object DescribeTransitGatewayAttachmentsResult
        |> Codec.field "TransitGatewayAttachments" .transitGatewayAttachments transitGatewayAttachmentListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeTransitGatewayAttachmentsRequest. -}
describeTransitGatewayAttachmentsRequestCodec : Codec DescribeTransitGatewayAttachmentsRequest
describeTransitGatewayAttachmentsRequestCodec =
    Codec.object DescribeTransitGatewayAttachmentsRequest
        |> Codec.field
            "TransitGatewayAttachmentIds"
            .transitGatewayAttachmentIds
            transitGatewayAttachmentIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults transitGatewayMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeTrafficMirrorTargetsResult. -}
describeTrafficMirrorTargetsResultCodec : Codec DescribeTrafficMirrorTargetsResult
describeTrafficMirrorTargetsResultCodec =
    Codec.object DescribeTrafficMirrorTargetsResult
        |> Codec.field "TrafficMirrorTargets" .trafficMirrorTargets trafficMirrorTargetSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeTrafficMirrorTargetsRequest. -}
describeTrafficMirrorTargetsRequestCodec : Codec DescribeTrafficMirrorTargetsRequest
describeTrafficMirrorTargetsRequestCodec =
    Codec.object DescribeTrafficMirrorTargetsRequest
        |> Codec.field "TrafficMirrorTargetIds" .trafficMirrorTargetIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults trafficMirroringMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeTrafficMirrorSessionsResult. -}
describeTrafficMirrorSessionsResultCodec : Codec DescribeTrafficMirrorSessionsResult
describeTrafficMirrorSessionsResultCodec =
    Codec.object DescribeTrafficMirrorSessionsResult
        |> Codec.field "TrafficMirrorSessions" .trafficMirrorSessions trafficMirrorSessionSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeTrafficMirrorSessionsRequest. -}
describeTrafficMirrorSessionsRequestCodec : Codec DescribeTrafficMirrorSessionsRequest
describeTrafficMirrorSessionsRequestCodec =
    Codec.object DescribeTrafficMirrorSessionsRequest
        |> Codec.field "TrafficMirrorSessionIds" .trafficMirrorSessionIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults trafficMirroringMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeTrafficMirrorFiltersResult. -}
describeTrafficMirrorFiltersResultCodec : Codec DescribeTrafficMirrorFiltersResult
describeTrafficMirrorFiltersResultCodec =
    Codec.object DescribeTrafficMirrorFiltersResult
        |> Codec.field "TrafficMirrorFilters" .trafficMirrorFilters trafficMirrorFilterSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeTrafficMirrorFiltersRequest. -}
describeTrafficMirrorFiltersRequestCodec : Codec DescribeTrafficMirrorFiltersRequest
describeTrafficMirrorFiltersRequestCodec =
    Codec.object DescribeTrafficMirrorFiltersRequest
        |> Codec.field "TrafficMirrorFilterIds" .trafficMirrorFilterIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults trafficMirroringMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeTagsResult. -}
describeTagsResultCodec : Codec DescribeTagsResult
describeTagsResultCodec =
    Codec.object DescribeTagsResult
        |> Codec.field "Tags" .tags tagDescriptionListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeTagsRequest. -}
describeTagsRequestCodec : Codec DescribeTagsRequest
describeTagsRequestCodec =
    Codec.object DescribeTagsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeSubnetsResult. -}
describeSubnetsResultCodec : Codec DescribeSubnetsResult
describeSubnetsResultCodec =
    Codec.object DescribeSubnetsResult
        |> Codec.field "Subnets" .subnets subnetListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeSubnetsRequest. -}
describeSubnetsRequestCodec : Codec DescribeSubnetsRequest
describeSubnetsRequestCodec =
    Codec.object DescribeSubnetsRequest
        |> Codec.field "SubnetIds" .subnetIds subnetIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeSubnetsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeSubnetsMaxResults. -}
describeSubnetsMaxResultsCodec : Codec DescribeSubnetsMaxResults
describeSubnetsMaxResultsCodec =
    Codec.build (Refined.encoder describeSubnetsMaxResults) (Refined.decoder describeSubnetsMaxResults)


{-| Codec for DescribeStaleSecurityGroupsResult. -}
describeStaleSecurityGroupsResultCodec : Codec DescribeStaleSecurityGroupsResult
describeStaleSecurityGroupsResultCodec =
    Codec.object DescribeStaleSecurityGroupsResult
        |> Codec.field "StaleSecurityGroupSet" .staleSecurityGroupSet staleSecurityGroupSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeStaleSecurityGroupsRequest. -}
describeStaleSecurityGroupsRequestCodec : Codec DescribeStaleSecurityGroupsRequest
describeStaleSecurityGroupsRequestCodec =
    Codec.object DescribeStaleSecurityGroupsRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "NextToken" .nextToken describeStaleSecurityGroupsNextTokenCodec
        |> Codec.field "MaxResults" .maxResults describeStaleSecurityGroupsMaxResultsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeStaleSecurityGroupsNextToken. -}
describeStaleSecurityGroupsNextTokenCodec : Codec DescribeStaleSecurityGroupsNextToken
describeStaleSecurityGroupsNextTokenCodec =
    Codec.build
        (Refined.encoder describeStaleSecurityGroupsNextToken)
        (Refined.decoder describeStaleSecurityGroupsNextToken)


{-| Codec for DescribeStaleSecurityGroupsMaxResults. -}
describeStaleSecurityGroupsMaxResultsCodec : Codec DescribeStaleSecurityGroupsMaxResults
describeStaleSecurityGroupsMaxResultsCodec =
    Codec.build
        (Refined.encoder describeStaleSecurityGroupsMaxResults)
        (Refined.decoder describeStaleSecurityGroupsMaxResults)


{-| Codec for DescribeSpotPriceHistoryResult. -}
describeSpotPriceHistoryResultCodec : Codec DescribeSpotPriceHistoryResult
describeSpotPriceHistoryResultCodec =
    Codec.object DescribeSpotPriceHistoryResult
        |> Codec.field "SpotPriceHistory" .spotPriceHistory spotPriceHistoryListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeSpotPriceHistoryRequest. -}
describeSpotPriceHistoryRequestCodec : Codec DescribeSpotPriceHistoryRequest
describeSpotPriceHistoryRequestCodec =
    Codec.object DescribeSpotPriceHistoryRequest
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "ProductDescriptions" .productDescriptions productDescriptionListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "InstanceTypes" .instanceTypes instanceTypeListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "EndTime" .endTime dateTimeCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for DescribeSpotInstanceRequestsResult. -}
describeSpotInstanceRequestsResultCodec : Codec DescribeSpotInstanceRequestsResult
describeSpotInstanceRequestsResultCodec =
    Codec.object DescribeSpotInstanceRequestsResult
        |> Codec.field "SpotInstanceRequests" .spotInstanceRequests spotInstanceRequestListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeSpotInstanceRequestsRequest. -}
describeSpotInstanceRequestsRequestCodec : Codec DescribeSpotInstanceRequestsRequest
describeSpotInstanceRequestsRequestCodec =
    Codec.object DescribeSpotInstanceRequestsRequest
        |> Codec.field "SpotInstanceRequestIds" .spotInstanceRequestIds spotInstanceRequestIdListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeSpotFleetRequestsResponse. -}
describeSpotFleetRequestsResponseCodec : Codec DescribeSpotFleetRequestsResponse
describeSpotFleetRequestsResponseCodec =
    Codec.object DescribeSpotFleetRequestsResponse
        |> Codec.field "SpotFleetRequestConfigs" .spotFleetRequestConfigs spotFleetRequestConfigSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeSpotFleetRequestsRequest. -}
describeSpotFleetRequestsRequestCodec : Codec DescribeSpotFleetRequestsRequest
describeSpotFleetRequestsRequestCodec =
    Codec.object DescribeSpotFleetRequestsRequest
        |> Codec.field "SpotFleetRequestIds" .spotFleetRequestIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeSpotFleetRequestHistoryResponse. -}
describeSpotFleetRequestHistoryResponseCodec : Codec DescribeSpotFleetRequestHistoryResponse
describeSpotFleetRequestHistoryResponseCodec =
    Codec.object DescribeSpotFleetRequestHistoryResponse
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "LastEvaluatedTime" .lastEvaluatedTime dateTimeCodec
        |> Codec.field "HistoryRecords" .historyRecords historyRecordsCodec
        |> Codec.buildObject


{-| Codec for DescribeSpotFleetRequestHistoryRequest. -}
describeSpotFleetRequestHistoryRequestCodec : Codec DescribeSpotFleetRequestHistoryRequest
describeSpotFleetRequestHistoryRequestCodec =
    Codec.object DescribeSpotFleetRequestHistoryRequest
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeSpotFleetRequestHistoryMaxResultsCodec
        |> Codec.field "EventType" .eventType eventTypeCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeSpotFleetRequestHistoryMaxResults. -}
describeSpotFleetRequestHistoryMaxResultsCodec : Codec DescribeSpotFleetRequestHistoryMaxResults
describeSpotFleetRequestHistoryMaxResultsCodec =
    Codec.build
        (Refined.encoder describeSpotFleetRequestHistoryMaxResults)
        (Refined.decoder describeSpotFleetRequestHistoryMaxResults)


{-| Codec for DescribeSpotFleetInstancesResponse. -}
describeSpotFleetInstancesResponseCodec : Codec DescribeSpotFleetInstancesResponse
describeSpotFleetInstancesResponseCodec =
    Codec.object DescribeSpotFleetInstancesResponse
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "ActiveInstances" .activeInstances activeInstanceSetCodec
        |> Codec.buildObject


{-| Codec for DescribeSpotFleetInstancesRequest. -}
describeSpotFleetInstancesRequestCodec : Codec DescribeSpotFleetInstancesRequest
describeSpotFleetInstancesRequestCodec =
    Codec.object DescribeSpotFleetInstancesRequest
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeSpotFleetInstancesMaxResultsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeSpotFleetInstancesMaxResults. -}
describeSpotFleetInstancesMaxResultsCodec : Codec DescribeSpotFleetInstancesMaxResults
describeSpotFleetInstancesMaxResultsCodec =
    Codec.build
        (Refined.encoder describeSpotFleetInstancesMaxResults)
        (Refined.decoder describeSpotFleetInstancesMaxResults)


{-| Codec for DescribeSpotDatafeedSubscriptionResult. -}
describeSpotDatafeedSubscriptionResultCodec : Codec DescribeSpotDatafeedSubscriptionResult
describeSpotDatafeedSubscriptionResultCodec =
    Codec.object DescribeSpotDatafeedSubscriptionResult
        |> Codec.field "SpotDatafeedSubscription" .spotDatafeedSubscription spotDatafeedSubscriptionCodec
        |> Codec.buildObject


{-| Codec for DescribeSpotDatafeedSubscriptionRequest. -}
describeSpotDatafeedSubscriptionRequestCodec : Codec DescribeSpotDatafeedSubscriptionRequest
describeSpotDatafeedSubscriptionRequestCodec =
    Codec.object DescribeSpotDatafeedSubscriptionRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for DescribeSnapshotsResult. -}
describeSnapshotsResultCodec : Codec DescribeSnapshotsResult
describeSnapshotsResultCodec =
    Codec.object DescribeSnapshotsResult
        |> Codec.field "Snapshots" .snapshots snapshotListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeSnapshotsRequest. -}
describeSnapshotsRequestCodec : Codec DescribeSnapshotsRequest
describeSnapshotsRequestCodec =
    Codec.object DescribeSnapshotsRequest
        |> Codec.field "SnapshotIds" .snapshotIds snapshotIdStringListCodec
        |> Codec.field "RestorableByUserIds" .restorableByUserIds restorableByStringListCodec
        |> Codec.field "OwnerIds" .ownerIds ownerStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeSnapshotAttributeResult. -}
describeSnapshotAttributeResultCodec : Codec DescribeSnapshotAttributeResult
describeSnapshotAttributeResultCodec =
    Codec.object DescribeSnapshotAttributeResult
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "ProductCodes" .productCodes productCodeListCodec
        |> Codec.field "CreateVolumePermissions" .createVolumePermissions createVolumePermissionListCodec
        |> Codec.buildObject


{-| Codec for DescribeSnapshotAttributeRequest. -}
describeSnapshotAttributeRequestCodec : Codec DescribeSnapshotAttributeRequest
describeSnapshotAttributeRequestCodec =
    Codec.object DescribeSnapshotAttributeRequest
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute snapshotAttributeNameCodec
        |> Codec.buildObject


{-| Codec for DescribeSecurityGroupsResult. -}
describeSecurityGroupsResultCodec : Codec DescribeSecurityGroupsResult
describeSecurityGroupsResultCodec =
    Codec.object DescribeSecurityGroupsResult
        |> Codec.field "SecurityGroups" .securityGroups securityGroupListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeSecurityGroupsRequest. -}
describeSecurityGroupsRequestCodec : Codec DescribeSecurityGroupsRequest
describeSecurityGroupsRequestCodec =
    Codec.object DescribeSecurityGroupsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeSecurityGroupsMaxResultsCodec
        |> Codec.field "GroupNames" .groupNames groupNameStringListCodec
        |> Codec.field "GroupIds" .groupIds groupIdStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeSecurityGroupsMaxResults. -}
describeSecurityGroupsMaxResultsCodec : Codec DescribeSecurityGroupsMaxResults
describeSecurityGroupsMaxResultsCodec =
    Codec.build (Refined.encoder describeSecurityGroupsMaxResults) (Refined.decoder describeSecurityGroupsMaxResults)


{-| Codec for DescribeSecurityGroupReferencesResult. -}
describeSecurityGroupReferencesResultCodec : Codec DescribeSecurityGroupReferencesResult
describeSecurityGroupReferencesResultCodec =
    Codec.object DescribeSecurityGroupReferencesResult
        |> Codec.field "SecurityGroupReferenceSet" .securityGroupReferenceSet securityGroupReferencesCodec
        |> Codec.buildObject


{-| Codec for DescribeSecurityGroupReferencesRequest. -}
describeSecurityGroupReferencesRequestCodec : Codec DescribeSecurityGroupReferencesRequest
describeSecurityGroupReferencesRequestCodec =
    Codec.object DescribeSecurityGroupReferencesRequest
        |> Codec.field "GroupId" .groupId groupIdsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeScheduledInstancesResult. -}
describeScheduledInstancesResultCodec : Codec DescribeScheduledInstancesResult
describeScheduledInstancesResultCodec =
    Codec.object DescribeScheduledInstancesResult
        |> Codec.field "ScheduledInstanceSet" .scheduledInstanceSet scheduledInstanceSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeScheduledInstancesRequest. -}
describeScheduledInstancesRequestCodec : Codec DescribeScheduledInstancesRequest
describeScheduledInstancesRequestCodec =
    Codec.object DescribeScheduledInstancesRequest
        |> Codec.field "SlotStartTimeRange" .slotStartTimeRange slotStartTimeRangeRequestCodec
        |> Codec.field "ScheduledInstanceIds" .scheduledInstanceIds scheduledInstanceIdRequestSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeScheduledInstanceAvailabilityResult. -}
describeScheduledInstanceAvailabilityResultCodec : Codec DescribeScheduledInstanceAvailabilityResult
describeScheduledInstanceAvailabilityResultCodec =
    Codec.object DescribeScheduledInstanceAvailabilityResult
        |> Codec.field
            "ScheduledInstanceAvailabilitySet"
            .scheduledInstanceAvailabilitySet
            scheduledInstanceAvailabilitySetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeScheduledInstanceAvailabilityRequest. -}
describeScheduledInstanceAvailabilityRequestCodec : Codec DescribeScheduledInstanceAvailabilityRequest
describeScheduledInstanceAvailabilityRequestCodec =
    Codec.object DescribeScheduledInstanceAvailabilityRequest
        |> Codec.field "Recurrence" .recurrence scheduledInstanceRecurrenceRequestCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MinSlotDurationInHours" .minSlotDurationInHours Codec.int
        |> Codec.field "MaxSlotDurationInHours" .maxSlotDurationInHours Codec.int
        |> Codec.field "MaxResults" .maxResults describeScheduledInstanceAvailabilityMaxResultsCodec
        |> Codec.field "FirstSlotStartTimeRange" .firstSlotStartTimeRange slotDateTimeRangeRequestCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeScheduledInstanceAvailabilityMaxResults. -}
describeScheduledInstanceAvailabilityMaxResultsCodec : Codec DescribeScheduledInstanceAvailabilityMaxResults
describeScheduledInstanceAvailabilityMaxResultsCodec =
    Codec.build
        (Refined.encoder describeScheduledInstanceAvailabilityMaxResults)
        (Refined.decoder describeScheduledInstanceAvailabilityMaxResults)


{-| Codec for DescribeRouteTablesResult. -}
describeRouteTablesResultCodec : Codec DescribeRouteTablesResult
describeRouteTablesResultCodec =
    Codec.object DescribeRouteTablesResult
        |> Codec.field "RouteTables" .routeTables routeTableListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeRouteTablesRequest. -}
describeRouteTablesRequestCodec : Codec DescribeRouteTablesRequest
describeRouteTablesRequestCodec =
    Codec.object DescribeRouteTablesRequest
        |> Codec.field "RouteTableIds" .routeTableIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeRouteTablesMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeRouteTablesMaxResults. -}
describeRouteTablesMaxResultsCodec : Codec DescribeRouteTablesMaxResults
describeRouteTablesMaxResultsCodec =
    Codec.build (Refined.encoder describeRouteTablesMaxResults) (Refined.decoder describeRouteTablesMaxResults)


{-| Codec for DescribeReservedInstancesResult. -}
describeReservedInstancesResultCodec : Codec DescribeReservedInstancesResult
describeReservedInstancesResultCodec =
    Codec.object DescribeReservedInstancesResult
        |> Codec.field "ReservedInstances" .reservedInstances reservedInstancesListCodec
        |> Codec.buildObject


{-| Codec for DescribeReservedInstancesRequest. -}
describeReservedInstancesRequestCodec : Codec DescribeReservedInstancesRequest
describeReservedInstancesRequestCodec =
    Codec.object DescribeReservedInstancesRequest
        |> Codec.field "ReservedInstancesIds" .reservedInstancesIds reservedInstancesIdStringListCodec
        |> Codec.field "OfferingType" .offeringType offeringTypeValuesCodec
        |> Codec.field "OfferingClass" .offeringClass offeringClassTypeCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeReservedInstancesOfferingsResult. -}
describeReservedInstancesOfferingsResultCodec : Codec DescribeReservedInstancesOfferingsResult
describeReservedInstancesOfferingsResultCodec =
    Codec.object DescribeReservedInstancesOfferingsResult
        |> Codec.field "ReservedInstancesOfferings" .reservedInstancesOfferings reservedInstancesOfferingListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeReservedInstancesOfferingsRequest. -}
describeReservedInstancesOfferingsRequestCodec : Codec DescribeReservedInstancesOfferingsRequest
describeReservedInstancesOfferingsRequestCodec =
    Codec.object DescribeReservedInstancesOfferingsRequest
        |> Codec.field
            "ReservedInstancesOfferingIds"
            .reservedInstancesOfferingIds
            reservedInstancesOfferingIdStringListCodec
        |> Codec.field "ProductDescription" .productDescription riproductDescriptionCodec
        |> Codec.field "OfferingType" .offeringType offeringTypeValuesCodec
        |> Codec.field "OfferingClass" .offeringClass offeringClassTypeCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MinDuration" .minDuration Codec.int
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "MaxInstanceCount" .maxInstanceCount Codec.int
        |> Codec.field "MaxDuration" .maxDuration Codec.int
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceTenancy" .instanceTenancy tenancyCodec
        |> Codec.field "IncludeMarketplace" .includeMarketplace Codec.bool
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for DescribeReservedInstancesModificationsResult. -}
describeReservedInstancesModificationsResultCodec : Codec DescribeReservedInstancesModificationsResult
describeReservedInstancesModificationsResultCodec =
    Codec.object DescribeReservedInstancesModificationsResult
        |> Codec.field
            "ReservedInstancesModifications"
            .reservedInstancesModifications
            reservedInstancesModificationListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeReservedInstancesModificationsRequest. -}
describeReservedInstancesModificationsRequestCodec : Codec DescribeReservedInstancesModificationsRequest
describeReservedInstancesModificationsRequestCodec =
    Codec.object DescribeReservedInstancesModificationsRequest
        |> Codec.field
            "ReservedInstancesModificationIds"
            .reservedInstancesModificationIds
            reservedInstancesModificationIdStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.buildObject


{-| Codec for DescribeReservedInstancesListingsResult. -}
describeReservedInstancesListingsResultCodec : Codec DescribeReservedInstancesListingsResult
describeReservedInstancesListingsResultCodec =
    Codec.object DescribeReservedInstancesListingsResult
        |> Codec.field "ReservedInstancesListings" .reservedInstancesListings reservedInstancesListingListCodec
        |> Codec.buildObject


{-| Codec for DescribeReservedInstancesListingsRequest. -}
describeReservedInstancesListingsRequestCodec : Codec DescribeReservedInstancesListingsRequest
describeReservedInstancesListingsRequestCodec =
    Codec.object DescribeReservedInstancesListingsRequest
        |> Codec.field "ReservedInstancesListingId" .reservedInstancesListingId Codec.string
        |> Codec.field "ReservedInstancesId" .reservedInstancesId Codec.string
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.buildObject


{-| Codec for DescribeRegionsResult. -}
describeRegionsResultCodec : Codec DescribeRegionsResult
describeRegionsResultCodec =
    Codec.object DescribeRegionsResult |> Codec.field "Regions" .regions regionListCodec |> Codec.buildObject


{-| Codec for DescribeRegionsRequest. -}
describeRegionsRequestCodec : Codec DescribeRegionsRequest
describeRegionsRequestCodec =
    Codec.object DescribeRegionsRequest
        |> Codec.field "RegionNames" .regionNames regionNameStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AllRegions" .allRegions Codec.bool
        |> Codec.buildObject


{-| Codec for DescribePublicIpv4PoolsResult. -}
describePublicIpv4PoolsResultCodec : Codec DescribePublicIpv4PoolsResult
describePublicIpv4PoolsResultCodec =
    Codec.object DescribePublicIpv4PoolsResult
        |> Codec.field "PublicIpv4Pools" .publicIpv4Pools publicIpv4PoolSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribePublicIpv4PoolsRequest. -}
describePublicIpv4PoolsRequestCodec : Codec DescribePublicIpv4PoolsRequest
describePublicIpv4PoolsRequestCodec =
    Codec.object DescribePublicIpv4PoolsRequest
        |> Codec.field "PoolIds" .poolIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults poolMaxResultsCodec
        |> Codec.buildObject


{-| Codec for DescribePrincipalIdFormatResult. -}
describePrincipalIdFormatResultCodec : Codec DescribePrincipalIdFormatResult
describePrincipalIdFormatResultCodec =
    Codec.object DescribePrincipalIdFormatResult
        |> Codec.field "Principals" .principals principalIdFormatListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribePrincipalIdFormatRequest. -}
describePrincipalIdFormatRequestCodec : Codec DescribePrincipalIdFormatRequest
describePrincipalIdFormatRequestCodec =
    Codec.object DescribePrincipalIdFormatRequest
        |> Codec.field "Resources" .resources resourceListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describePrincipalIdFormatMaxResultsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribePrincipalIdFormatMaxResults. -}
describePrincipalIdFormatMaxResultsCodec : Codec DescribePrincipalIdFormatMaxResults
describePrincipalIdFormatMaxResultsCodec =
    Codec.build
        (Refined.encoder describePrincipalIdFormatMaxResults)
        (Refined.decoder describePrincipalIdFormatMaxResults)


{-| Codec for DescribePrefixListsResult. -}
describePrefixListsResultCodec : Codec DescribePrefixListsResult
describePrefixListsResultCodec =
    Codec.object DescribePrefixListsResult
        |> Codec.field "PrefixLists" .prefixLists prefixListSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribePrefixListsRequest. -}
describePrefixListsRequestCodec : Codec DescribePrefixListsRequest
describePrefixListsRequestCodec =
    Codec.object DescribePrefixListsRequest
        |> Codec.field "PrefixListIds" .prefixListIds valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribePlacementGroupsResult. -}
describePlacementGroupsResultCodec : Codec DescribePlacementGroupsResult
describePlacementGroupsResultCodec =
    Codec.object DescribePlacementGroupsResult
        |> Codec.field "PlacementGroups" .placementGroups placementGroupListCodec
        |> Codec.buildObject


{-| Codec for DescribePlacementGroupsRequest. -}
describePlacementGroupsRequestCodec : Codec DescribePlacementGroupsRequest
describePlacementGroupsRequestCodec =
    Codec.object DescribePlacementGroupsRequest
        |> Codec.field "GroupNames" .groupNames placementGroupStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeNetworkInterfacesResult. -}
describeNetworkInterfacesResultCodec : Codec DescribeNetworkInterfacesResult
describeNetworkInterfacesResultCodec =
    Codec.object DescribeNetworkInterfacesResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "NetworkInterfaces" .networkInterfaces networkInterfaceListCodec
        |> Codec.buildObject


{-| Codec for DescribeNetworkInterfacesRequest. -}
describeNetworkInterfacesRequestCodec : Codec DescribeNetworkInterfacesRequest
describeNetworkInterfacesRequestCodec =
    Codec.object DescribeNetworkInterfacesRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "NetworkInterfaceIds" .networkInterfaceIds networkInterfaceIdListCodec
        |> Codec.field "MaxResults" .maxResults describeNetworkInterfacesMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeNetworkInterfacesMaxResults. -}
describeNetworkInterfacesMaxResultsCodec : Codec DescribeNetworkInterfacesMaxResults
describeNetworkInterfacesMaxResultsCodec =
    Codec.build
        (Refined.encoder describeNetworkInterfacesMaxResults)
        (Refined.decoder describeNetworkInterfacesMaxResults)


{-| Codec for DescribeNetworkInterfacePermissionsResult. -}
describeNetworkInterfacePermissionsResultCodec : Codec DescribeNetworkInterfacePermissionsResult
describeNetworkInterfacePermissionsResultCodec =
    Codec.object DescribeNetworkInterfacePermissionsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "NetworkInterfacePermissions" .networkInterfacePermissions networkInterfacePermissionListCodec
        |> Codec.buildObject


{-| Codec for DescribeNetworkInterfacePermissionsRequest. -}
describeNetworkInterfacePermissionsRequestCodec : Codec DescribeNetworkInterfacePermissionsRequest
describeNetworkInterfacePermissionsRequestCodec =
    Codec.object DescribeNetworkInterfacePermissionsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field
            "NetworkInterfacePermissionIds"
            .networkInterfacePermissionIds
            networkInterfacePermissionIdListCodec
        |> Codec.field "MaxResults" .maxResults describeNetworkInterfacePermissionsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.buildObject


{-| Codec for DescribeNetworkInterfacePermissionsMaxResults. -}
describeNetworkInterfacePermissionsMaxResultsCodec : Codec DescribeNetworkInterfacePermissionsMaxResults
describeNetworkInterfacePermissionsMaxResultsCodec =
    Codec.build
        (Refined.encoder describeNetworkInterfacePermissionsMaxResults)
        (Refined.decoder describeNetworkInterfacePermissionsMaxResults)


{-| Codec for DescribeNetworkInterfaceAttributeResult. -}
describeNetworkInterfaceAttributeResultCodec : Codec DescribeNetworkInterfaceAttributeResult
describeNetworkInterfaceAttributeResultCodec =
    Codec.object DescribeNetworkInterfaceAttributeResult
        |> Codec.field "SourceDestCheck" .sourceDestCheck attributeBooleanValueCodec
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Groups" .groups groupIdentifierListCodec
        |> Codec.field "Description" .description attributeValueCodec
        |> Codec.field "Attachment" .attachment networkInterfaceAttachmentCodec
        |> Codec.buildObject


{-| Codec for DescribeNetworkInterfaceAttributeRequest. -}
describeNetworkInterfaceAttributeRequestCodec : Codec DescribeNetworkInterfaceAttributeRequest
describeNetworkInterfaceAttributeRequestCodec =
    Codec.object DescribeNetworkInterfaceAttributeRequest
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute networkInterfaceAttributeCodec
        |> Codec.buildObject


{-| Codec for DescribeNetworkAclsResult. -}
describeNetworkAclsResultCodec : Codec DescribeNetworkAclsResult
describeNetworkAclsResultCodec =
    Codec.object DescribeNetworkAclsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "NetworkAcls" .networkAcls networkAclListCodec
        |> Codec.buildObject


{-| Codec for DescribeNetworkAclsRequest. -}
describeNetworkAclsRequestCodec : Codec DescribeNetworkAclsRequest
describeNetworkAclsRequestCodec =
    Codec.object DescribeNetworkAclsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "NetworkAclIds" .networkAclIds valueStringListCodec
        |> Codec.field "MaxResults" .maxResults describeNetworkAclsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeNetworkAclsMaxResults. -}
describeNetworkAclsMaxResultsCodec : Codec DescribeNetworkAclsMaxResults
describeNetworkAclsMaxResultsCodec =
    Codec.build (Refined.encoder describeNetworkAclsMaxResults) (Refined.decoder describeNetworkAclsMaxResults)


{-| Codec for DescribeNatGatewaysResult. -}
describeNatGatewaysResultCodec : Codec DescribeNatGatewaysResult
describeNatGatewaysResultCodec =
    Codec.object DescribeNatGatewaysResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "NatGateways" .natGateways natGatewayListCodec
        |> Codec.buildObject


{-| Codec for DescribeNatGatewaysRequest. -}
describeNatGatewaysRequestCodec : Codec DescribeNatGatewaysRequest
describeNatGatewaysRequestCodec =
    Codec.object DescribeNatGatewaysRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "NatGatewayIds" .natGatewayIds valueStringListCodec
        |> Codec.field "MaxResults" .maxResults describeNatGatewaysMaxResultsCodec
        |> Codec.field "Filter" .filter filterListCodec
        |> Codec.buildObject


{-| Codec for DescribeNatGatewaysMaxResults. -}
describeNatGatewaysMaxResultsCodec : Codec DescribeNatGatewaysMaxResults
describeNatGatewaysMaxResultsCodec =
    Codec.build (Refined.encoder describeNatGatewaysMaxResults) (Refined.decoder describeNatGatewaysMaxResults)


{-| Codec for DescribeMovingAddressesResult. -}
describeMovingAddressesResultCodec : Codec DescribeMovingAddressesResult
describeMovingAddressesResultCodec =
    Codec.object DescribeMovingAddressesResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MovingAddressStatuses" .movingAddressStatuses movingAddressStatusSetCodec
        |> Codec.buildObject


{-| Codec for DescribeMovingAddressesRequest. -}
describeMovingAddressesRequestCodec : Codec DescribeMovingAddressesRequest
describeMovingAddressesRequestCodec =
    Codec.object DescribeMovingAddressesRequest
        |> Codec.field "PublicIps" .publicIps valueStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeMovingAddressesMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeMovingAddressesMaxResults. -}
describeMovingAddressesMaxResultsCodec : Codec DescribeMovingAddressesMaxResults
describeMovingAddressesMaxResultsCodec =
    Codec.build (Refined.encoder describeMovingAddressesMaxResults) (Refined.decoder describeMovingAddressesMaxResults)


{-| Codec for DescribeLaunchTemplatesResult. -}
describeLaunchTemplatesResultCodec : Codec DescribeLaunchTemplatesResult
describeLaunchTemplatesResultCodec =
    Codec.object DescribeLaunchTemplatesResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "LaunchTemplates" .launchTemplates launchTemplateSetCodec
        |> Codec.buildObject


{-| Codec for DescribeLaunchTemplatesRequest. -}
describeLaunchTemplatesRequestCodec : Codec DescribeLaunchTemplatesRequest
describeLaunchTemplatesRequestCodec =
    Codec.object DescribeLaunchTemplatesRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeLaunchTemplatesMaxResultsCodec
        |> Codec.field "LaunchTemplateNames" .launchTemplateNames launchTemplateNameStringListCodec
        |> Codec.field "LaunchTemplateIds" .launchTemplateIds valueStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeLaunchTemplatesMaxResults. -}
describeLaunchTemplatesMaxResultsCodec : Codec DescribeLaunchTemplatesMaxResults
describeLaunchTemplatesMaxResultsCodec =
    Codec.build (Refined.encoder describeLaunchTemplatesMaxResults) (Refined.decoder describeLaunchTemplatesMaxResults)


{-| Codec for DescribeLaunchTemplateVersionsResult. -}
describeLaunchTemplateVersionsResultCodec : Codec DescribeLaunchTemplateVersionsResult
describeLaunchTemplateVersionsResultCodec =
    Codec.object DescribeLaunchTemplateVersionsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "LaunchTemplateVersions" .launchTemplateVersions launchTemplateVersionSetCodec
        |> Codec.buildObject


{-| Codec for DescribeLaunchTemplateVersionsRequest. -}
describeLaunchTemplateVersionsRequestCodec : Codec DescribeLaunchTemplateVersionsRequest
describeLaunchTemplateVersionsRequestCodec =
    Codec.object DescribeLaunchTemplateVersionsRequest
        |> Codec.field "Versions" .versions versionStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MinVersion" .minVersion Codec.string
        |> Codec.field "MaxVersion" .maxVersion Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeKeyPairsResult. -}
describeKeyPairsResultCodec : Codec DescribeKeyPairsResult
describeKeyPairsResultCodec =
    Codec.object DescribeKeyPairsResult |> Codec.field "KeyPairs" .keyPairs keyPairListCodec |> Codec.buildObject


{-| Codec for DescribeKeyPairsRequest. -}
describeKeyPairsRequestCodec : Codec DescribeKeyPairsRequest
describeKeyPairsRequestCodec =
    Codec.object DescribeKeyPairsRequest
        |> Codec.field "KeyNames" .keyNames keyNameStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeInternetGatewaysResult. -}
describeInternetGatewaysResultCodec : Codec DescribeInternetGatewaysResult
describeInternetGatewaysResultCodec =
    Codec.object DescribeInternetGatewaysResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "InternetGateways" .internetGateways internetGatewayListCodec
        |> Codec.buildObject


{-| Codec for DescribeInternetGatewaysRequest. -}
describeInternetGatewaysRequestCodec : Codec DescribeInternetGatewaysRequest
describeInternetGatewaysRequestCodec =
    Codec.object DescribeInternetGatewaysRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeInternetGatewaysMaxResultsCodec
        |> Codec.field "InternetGatewayIds" .internetGatewayIds valueStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeInternetGatewaysMaxResults. -}
describeInternetGatewaysMaxResultsCodec : Codec DescribeInternetGatewaysMaxResults
describeInternetGatewaysMaxResultsCodec =
    Codec.build
        (Refined.encoder describeInternetGatewaysMaxResults)
        (Refined.decoder describeInternetGatewaysMaxResults)


{-| Codec for DescribeInstancesResult. -}
describeInstancesResultCodec : Codec DescribeInstancesResult
describeInstancesResultCodec =
    Codec.object DescribeInstancesResult
        |> Codec.field "Reservations" .reservations reservationListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeInstancesRequest. -}
describeInstancesRequestCodec : Codec DescribeInstancesRequest
describeInstancesRequestCodec =
    Codec.object DescribeInstancesRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeInstanceStatusResult. -}
describeInstanceStatusResultCodec : Codec DescribeInstanceStatusResult
describeInstanceStatusResultCodec =
    Codec.object DescribeInstanceStatusResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "InstanceStatuses" .instanceStatuses instanceStatusListCodec
        |> Codec.buildObject


{-| Codec for DescribeInstanceStatusRequest. -}
describeInstanceStatusRequestCodec : Codec DescribeInstanceStatusRequest
describeInstanceStatusRequestCodec =
    Codec.object DescribeInstanceStatusRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "IncludeAllInstances" .includeAllInstances Codec.bool
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeInstanceCreditSpecificationsResult. -}
describeInstanceCreditSpecificationsResultCodec : Codec DescribeInstanceCreditSpecificationsResult
describeInstanceCreditSpecificationsResultCodec =
    Codec.object DescribeInstanceCreditSpecificationsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "InstanceCreditSpecifications" .instanceCreditSpecifications instanceCreditSpecificationListCodec
        |> Codec.buildObject


{-| Codec for DescribeInstanceCreditSpecificationsRequest. -}
describeInstanceCreditSpecificationsRequestCodec : Codec DescribeInstanceCreditSpecificationsRequest
describeInstanceCreditSpecificationsRequestCodec =
    Codec.object DescribeInstanceCreditSpecificationsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeInstanceCreditSpecificationsMaxResultsCodec
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeInstanceCreditSpecificationsMaxResults. -}
describeInstanceCreditSpecificationsMaxResultsCodec : Codec DescribeInstanceCreditSpecificationsMaxResults
describeInstanceCreditSpecificationsMaxResultsCodec =
    Codec.build
        (Refined.encoder describeInstanceCreditSpecificationsMaxResults)
        (Refined.decoder describeInstanceCreditSpecificationsMaxResults)


{-| Codec for DescribeInstanceAttributeRequest. -}
describeInstanceAttributeRequestCodec : Codec DescribeInstanceAttributeRequest
describeInstanceAttributeRequestCodec =
    Codec.object DescribeInstanceAttributeRequest
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute instanceAttributeNameCodec
        |> Codec.buildObject


{-| Codec for DescribeImportSnapshotTasksResult. -}
describeImportSnapshotTasksResultCodec : Codec DescribeImportSnapshotTasksResult
describeImportSnapshotTasksResultCodec =
    Codec.object DescribeImportSnapshotTasksResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "ImportSnapshotTasks" .importSnapshotTasks importSnapshotTaskListCodec
        |> Codec.buildObject


{-| Codec for DescribeImportSnapshotTasksRequest. -}
describeImportSnapshotTasksRequestCodec : Codec DescribeImportSnapshotTasksRequest
describeImportSnapshotTasksRequestCodec =
    Codec.object DescribeImportSnapshotTasksRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "ImportTaskIds" .importTaskIds importTaskIdListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeImportImageTasksResult. -}
describeImportImageTasksResultCodec : Codec DescribeImportImageTasksResult
describeImportImageTasksResultCodec =
    Codec.object DescribeImportImageTasksResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "ImportImageTasks" .importImageTasks importImageTaskListCodec
        |> Codec.buildObject


{-| Codec for DescribeImportImageTasksRequest. -}
describeImportImageTasksRequestCodec : Codec DescribeImportImageTasksRequest
describeImportImageTasksRequestCodec =
    Codec.object DescribeImportImageTasksRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "ImportTaskIds" .importTaskIds importTaskIdListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeImagesResult. -}
describeImagesResultCodec : Codec DescribeImagesResult
describeImagesResultCodec =
    Codec.object DescribeImagesResult |> Codec.field "Images" .images imageListCodec |> Codec.buildObject


{-| Codec for DescribeImagesRequest. -}
describeImagesRequestCodec : Codec DescribeImagesRequest
describeImagesRequestCodec =
    Codec.object DescribeImagesRequest
        |> Codec.field "Owners" .owners ownerStringListCodec
        |> Codec.field "ImageIds" .imageIds imageIdStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "ExecutableUsers" .executableUsers executableByStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeImageAttributeRequest. -}
describeImageAttributeRequestCodec : Codec DescribeImageAttributeRequest
describeImageAttributeRequestCodec =
    Codec.object DescribeImageAttributeRequest
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute imageAttributeNameCodec
        |> Codec.buildObject


{-| Codec for DescribeIdentityIdFormatResult. -}
describeIdentityIdFormatResultCodec : Codec DescribeIdentityIdFormatResult
describeIdentityIdFormatResultCodec =
    Codec.object DescribeIdentityIdFormatResult
        |> Codec.field "Statuses" .statuses idFormatListCodec
        |> Codec.buildObject


{-| Codec for DescribeIdentityIdFormatRequest. -}
describeIdentityIdFormatRequestCodec : Codec DescribeIdentityIdFormatRequest
describeIdentityIdFormatRequestCodec =
    Codec.object DescribeIdentityIdFormatRequest
        |> Codec.field "Resource" .resource Codec.string
        |> Codec.field "PrincipalArn" .principalArn Codec.string
        |> Codec.buildObject


{-| Codec for DescribeIdFormatResult. -}
describeIdFormatResultCodec : Codec DescribeIdFormatResult
describeIdFormatResultCodec =
    Codec.object DescribeIdFormatResult |> Codec.field "Statuses" .statuses idFormatListCodec |> Codec.buildObject


{-| Codec for DescribeIdFormatRequest. -}
describeIdFormatRequestCodec : Codec DescribeIdFormatRequest
describeIdFormatRequestCodec =
    Codec.object DescribeIdFormatRequest |> Codec.field "Resource" .resource Codec.string |> Codec.buildObject


{-| Codec for DescribeIamInstanceProfileAssociationsResult. -}
describeIamInstanceProfileAssociationsResultCodec : Codec DescribeIamInstanceProfileAssociationsResult
describeIamInstanceProfileAssociationsResultCodec =
    Codec.object DescribeIamInstanceProfileAssociationsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field
            "IamInstanceProfileAssociations"
            .iamInstanceProfileAssociations
            iamInstanceProfileAssociationSetCodec
        |> Codec.buildObject


{-| Codec for DescribeIamInstanceProfileAssociationsRequest. -}
describeIamInstanceProfileAssociationsRequestCodec : Codec DescribeIamInstanceProfileAssociationsRequest
describeIamInstanceProfileAssociationsRequestCodec =
    Codec.object DescribeIamInstanceProfileAssociationsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeIamInstanceProfileAssociationsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "AssociationIds" .associationIds associationIdListCodec
        |> Codec.buildObject


{-| Codec for DescribeIamInstanceProfileAssociationsMaxResults. -}
describeIamInstanceProfileAssociationsMaxResultsCodec : Codec DescribeIamInstanceProfileAssociationsMaxResults
describeIamInstanceProfileAssociationsMaxResultsCodec =
    Codec.build
        (Refined.encoder describeIamInstanceProfileAssociationsMaxResults)
        (Refined.decoder describeIamInstanceProfileAssociationsMaxResults)


{-| Codec for DescribeHostsResult. -}
describeHostsResultCodec : Codec DescribeHostsResult
describeHostsResultCodec =
    Codec.object DescribeHostsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "Hosts" .hosts hostListCodec
        |> Codec.buildObject


{-| Codec for DescribeHostsRequest. -}
describeHostsRequestCodec : Codec DescribeHostsRequest
describeHostsRequestCodec =
    Codec.object DescribeHostsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "HostIds" .hostIds requestHostIdListCodec
        |> Codec.field "Filter" .filter filterListCodec
        |> Codec.buildObject


{-| Codec for DescribeHostReservationsResult. -}
describeHostReservationsResultCodec : Codec DescribeHostReservationsResult
describeHostReservationsResultCodec =
    Codec.object DescribeHostReservationsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "HostReservationSet" .hostReservationSet hostReservationSetCodec
        |> Codec.buildObject


{-| Codec for DescribeHostReservationsRequest. -}
describeHostReservationsRequestCodec : Codec DescribeHostReservationsRequest
describeHostReservationsRequestCodec =
    Codec.object DescribeHostReservationsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "HostReservationIdSet" .hostReservationIdSet hostReservationIdSetCodec
        |> Codec.field "Filter" .filter filterListCodec
        |> Codec.buildObject


{-| Codec for DescribeHostReservationsMaxResults. -}
describeHostReservationsMaxResultsCodec : Codec DescribeHostReservationsMaxResults
describeHostReservationsMaxResultsCodec =
    Codec.build
        (Refined.encoder describeHostReservationsMaxResults)
        (Refined.decoder describeHostReservationsMaxResults)


{-| Codec for DescribeHostReservationOfferingsResult. -}
describeHostReservationOfferingsResultCodec : Codec DescribeHostReservationOfferingsResult
describeHostReservationOfferingsResultCodec =
    Codec.object DescribeHostReservationOfferingsResult
        |> Codec.field "OfferingSet" .offeringSet hostOfferingSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeHostReservationOfferingsRequest. -}
describeHostReservationOfferingsRequestCodec : Codec DescribeHostReservationOfferingsRequest
describeHostReservationOfferingsRequestCodec =
    Codec.object DescribeHostReservationOfferingsRequest
        |> Codec.field "OfferingId" .offeringId Codec.string
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MinDuration" .minDuration Codec.int
        |> Codec.field "MaxResults" .maxResults describeHostReservationsMaxResultsCodec
        |> Codec.field "MaxDuration" .maxDuration Codec.int
        |> Codec.field "Filter" .filter filterListCodec
        |> Codec.buildObject


{-| Codec for DescribeFpgaImagesResult. -}
describeFpgaImagesResultCodec : Codec DescribeFpgaImagesResult
describeFpgaImagesResultCodec =
    Codec.object DescribeFpgaImagesResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "FpgaImages" .fpgaImages fpgaImageListCodec
        |> Codec.buildObject


{-| Codec for DescribeFpgaImagesRequest. -}
describeFpgaImagesRequestCodec : Codec DescribeFpgaImagesRequest
describeFpgaImagesRequestCodec =
    Codec.object DescribeFpgaImagesRequest
        |> Codec.field "Owners" .owners ownerStringListCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeFpgaImagesMaxResultsCodec
        |> Codec.field "FpgaImageIds" .fpgaImageIds fpgaImageIdListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeFpgaImagesMaxResults. -}
describeFpgaImagesMaxResultsCodec : Codec DescribeFpgaImagesMaxResults
describeFpgaImagesMaxResultsCodec =
    Codec.build (Refined.encoder describeFpgaImagesMaxResults) (Refined.decoder describeFpgaImagesMaxResults)


{-| Codec for DescribeFpgaImageAttributeResult. -}
describeFpgaImageAttributeResultCodec : Codec DescribeFpgaImageAttributeResult
describeFpgaImageAttributeResultCodec =
    Codec.object DescribeFpgaImageAttributeResult
        |> Codec.field "FpgaImageAttribute" .fpgaImageAttribute fpgaImageAttributeCodec
        |> Codec.buildObject


{-| Codec for DescribeFpgaImageAttributeRequest. -}
describeFpgaImageAttributeRequestCodec : Codec DescribeFpgaImageAttributeRequest
describeFpgaImageAttributeRequestCodec =
    Codec.object DescribeFpgaImageAttributeRequest
        |> Codec.field "FpgaImageId" .fpgaImageId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Attribute" .attribute fpgaImageAttributeNameCodec
        |> Codec.buildObject


{-| Codec for DescribeFlowLogsResult. -}
describeFlowLogsResultCodec : Codec DescribeFlowLogsResult
describeFlowLogsResultCodec =
    Codec.object DescribeFlowLogsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "FlowLogs" .flowLogs flowLogSetCodec
        |> Codec.buildObject


{-| Codec for DescribeFlowLogsRequest. -}
describeFlowLogsRequestCodec : Codec DescribeFlowLogsRequest
describeFlowLogsRequestCodec =
    Codec.object DescribeFlowLogsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "FlowLogIds" .flowLogIds valueStringListCodec
        |> Codec.field "Filter" .filter filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeFleetsResult. -}
describeFleetsResultCodec : Codec DescribeFleetsResult
describeFleetsResultCodec =
    Codec.object DescribeFleetsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "Fleets" .fleets fleetSetCodec
        |> Codec.buildObject


{-| Codec for DescribeFleetsRequest. -}
describeFleetsRequestCodec : Codec DescribeFleetsRequest
describeFleetsRequestCodec =
    Codec.object DescribeFleetsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "FleetIds" .fleetIds fleetIdSetCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeFleetsInstancesSet. -}
describeFleetsInstancesSetCodec : Codec DescribeFleetsInstancesSet
describeFleetsInstancesSetCodec =
    Codec.list describeFleetsInstancesCodec


{-| Codec for DescribeFleetsInstances. -}
describeFleetsInstancesCodec : Codec DescribeFleetsInstances
describeFleetsInstancesCodec =
    Codec.object DescribeFleetsInstances
        |> Codec.field "Platform" .platform platformValuesCodec
        |> Codec.field "Lifecycle" .lifecycle instanceLifecycleCodec
        |> Codec.field "LaunchTemplateAndOverrides" .launchTemplateAndOverrides launchTemplateAndOverridesResponseCodec
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceIds" .instanceIds instanceIdsSetCodec
        |> Codec.buildObject


{-| Codec for DescribeFleetsErrorSet. -}
describeFleetsErrorSetCodec : Codec DescribeFleetsErrorSet
describeFleetsErrorSetCodec =
    Codec.list describeFleetErrorCodec


{-| Codec for DescribeFleetInstancesResult. -}
describeFleetInstancesResultCodec : Codec DescribeFleetInstancesResult
describeFleetInstancesResultCodec =
    Codec.object DescribeFleetInstancesResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.field "ActiveInstances" .activeInstances activeInstanceSetCodec
        |> Codec.buildObject


{-| Codec for DescribeFleetInstancesRequest. -}
describeFleetInstancesRequestCodec : Codec DescribeFleetInstancesRequest
describeFleetInstancesRequestCodec =
    Codec.object DescribeFleetInstancesRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeFleetHistoryResult. -}
describeFleetHistoryResultCodec : Codec DescribeFleetHistoryResult
describeFleetHistoryResultCodec =
    Codec.object DescribeFleetHistoryResult
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "LastEvaluatedTime" .lastEvaluatedTime dateTimeCodec
        |> Codec.field "HistoryRecords" .historyRecords historyRecordSetCodec
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.buildObject


{-| Codec for DescribeFleetHistoryRequest. -}
describeFleetHistoryRequestCodec : Codec DescribeFleetHistoryRequest
describeFleetHistoryRequestCodec =
    Codec.object DescribeFleetHistoryRequest
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.field "EventType" .eventType fleetEventTypeCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeFleetError. -}
describeFleetErrorCodec : Codec DescribeFleetError
describeFleetErrorCodec =
    Codec.object DescribeFleetError
        |> Codec.field "Lifecycle" .lifecycle instanceLifecycleCodec
        |> Codec.field "LaunchTemplateAndOverrides" .launchTemplateAndOverrides launchTemplateAndOverridesResponseCodec
        |> Codec.field "ErrorMessage" .errorMessage Codec.string
        |> Codec.field "ErrorCode" .errorCode Codec.string
        |> Codec.buildObject


{-| Codec for DescribeExportTasksResult. -}
describeExportTasksResultCodec : Codec DescribeExportTasksResult
describeExportTasksResultCodec =
    Codec.object DescribeExportTasksResult
        |> Codec.field "ExportTasks" .exportTasks exportTaskListCodec
        |> Codec.buildObject


{-| Codec for DescribeExportTasksRequest. -}
describeExportTasksRequestCodec : Codec DescribeExportTasksRequest
describeExportTasksRequestCodec =
    Codec.object DescribeExportTasksRequest
        |> Codec.field "ExportTaskIds" .exportTaskIds exportTaskIdStringListCodec
        |> Codec.buildObject


{-| Codec for DescribeElasticGpusResult. -}
describeElasticGpusResultCodec : Codec DescribeElasticGpusResult
describeElasticGpusResultCodec =
    Codec.object DescribeElasticGpusResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults Codec.int
        |> Codec.field "ElasticGpuSet" .elasticGpuSet elasticGpuSetCodec
        |> Codec.buildObject


{-| Codec for DescribeElasticGpusRequest. -}
describeElasticGpusRequestCodec : Codec DescribeElasticGpusRequest
describeElasticGpusRequestCodec =
    Codec.object DescribeElasticGpusRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeElasticGpusMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "ElasticGpuIds" .elasticGpuIds elasticGpuIdSetCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeElasticGpusMaxResults. -}
describeElasticGpusMaxResultsCodec : Codec DescribeElasticGpusMaxResults
describeElasticGpusMaxResultsCodec =
    Codec.build (Refined.encoder describeElasticGpusMaxResults) (Refined.decoder describeElasticGpusMaxResults)


{-| Codec for DescribeEgressOnlyInternetGatewaysResult. -}
describeEgressOnlyInternetGatewaysResultCodec : Codec DescribeEgressOnlyInternetGatewaysResult
describeEgressOnlyInternetGatewaysResultCodec =
    Codec.object DescribeEgressOnlyInternetGatewaysResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "EgressOnlyInternetGateways" .egressOnlyInternetGateways egressOnlyInternetGatewayListCodec
        |> Codec.buildObject


{-| Codec for DescribeEgressOnlyInternetGatewaysRequest. -}
describeEgressOnlyInternetGatewaysRequestCodec : Codec DescribeEgressOnlyInternetGatewaysRequest
describeEgressOnlyInternetGatewaysRequestCodec =
    Codec.object DescribeEgressOnlyInternetGatewaysRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeEgressOnlyInternetGatewaysMaxResultsCodec
        |> Codec.field "EgressOnlyInternetGatewayIds" .egressOnlyInternetGatewayIds egressOnlyInternetGatewayIdListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeEgressOnlyInternetGatewaysMaxResults. -}
describeEgressOnlyInternetGatewaysMaxResultsCodec : Codec DescribeEgressOnlyInternetGatewaysMaxResults
describeEgressOnlyInternetGatewaysMaxResultsCodec =
    Codec.build
        (Refined.encoder describeEgressOnlyInternetGatewaysMaxResults)
        (Refined.decoder describeEgressOnlyInternetGatewaysMaxResults)


{-| Codec for DescribeDhcpOptionsResult. -}
describeDhcpOptionsResultCodec : Codec DescribeDhcpOptionsResult
describeDhcpOptionsResultCodec =
    Codec.object DescribeDhcpOptionsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "DhcpOptions" .dhcpOptions dhcpOptionsListCodec
        |> Codec.buildObject


{-| Codec for DescribeDhcpOptionsRequest. -}
describeDhcpOptionsRequestCodec : Codec DescribeDhcpOptionsRequest
describeDhcpOptionsRequestCodec =
    Codec.object DescribeDhcpOptionsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeDhcpOptionsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DhcpOptionsIds" .dhcpOptionsIds dhcpOptionsIdStringListCodec
        |> Codec.buildObject


{-| Codec for DescribeDhcpOptionsMaxResults. -}
describeDhcpOptionsMaxResultsCodec : Codec DescribeDhcpOptionsMaxResults
describeDhcpOptionsMaxResultsCodec =
    Codec.build (Refined.encoder describeDhcpOptionsMaxResults) (Refined.decoder describeDhcpOptionsMaxResults)


{-| Codec for DescribeCustomerGatewaysResult. -}
describeCustomerGatewaysResultCodec : Codec DescribeCustomerGatewaysResult
describeCustomerGatewaysResultCodec =
    Codec.object DescribeCustomerGatewaysResult
        |> Codec.field "CustomerGateways" .customerGateways customerGatewayListCodec
        |> Codec.buildObject


{-| Codec for DescribeCustomerGatewaysRequest. -}
describeCustomerGatewaysRequestCodec : Codec DescribeCustomerGatewaysRequest
describeCustomerGatewaysRequestCodec =
    Codec.object DescribeCustomerGatewaysRequest
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CustomerGatewayIds" .customerGatewayIds customerGatewayIdStringListCodec
        |> Codec.buildObject


{-| Codec for DescribeConversionTasksResult. -}
describeConversionTasksResultCodec : Codec DescribeConversionTasksResult
describeConversionTasksResultCodec =
    Codec.object DescribeConversionTasksResult
        |> Codec.field "ConversionTasks" .conversionTasks describeConversionTaskListCodec
        |> Codec.buildObject


{-| Codec for DescribeConversionTasksRequest. -}
describeConversionTasksRequestCodec : Codec DescribeConversionTasksRequest
describeConversionTasksRequestCodec =
    Codec.object DescribeConversionTasksRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ConversionTaskIds" .conversionTaskIds conversionIdStringListCodec
        |> Codec.buildObject


{-| Codec for DescribeConversionTaskList. -}
describeConversionTaskListCodec : Codec DescribeConversionTaskList
describeConversionTaskListCodec =
    Codec.list conversionTaskCodec


{-| Codec for DescribeClientVpnTargetNetworksResult. -}
describeClientVpnTargetNetworksResultCodec : Codec DescribeClientVpnTargetNetworksResult
describeClientVpnTargetNetworksResultCodec =
    Codec.object DescribeClientVpnTargetNetworksResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "ClientVpnTargetNetworks" .clientVpnTargetNetworks targetNetworkSetCodec
        |> Codec.buildObject


{-| Codec for DescribeClientVpnTargetNetworksRequest. -}
describeClientVpnTargetNetworksRequestCodec : Codec DescribeClientVpnTargetNetworksRequest
describeClientVpnTargetNetworksRequestCodec =
    Codec.object DescribeClientVpnTargetNetworksRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeClientVpnTargetNetworksMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "AssociationIds" .associationIds valueStringListCodec
        |> Codec.buildObject


{-| Codec for DescribeClientVpnTargetNetworksMaxResults. -}
describeClientVpnTargetNetworksMaxResultsCodec : Codec DescribeClientVpnTargetNetworksMaxResults
describeClientVpnTargetNetworksMaxResultsCodec =
    Codec.build
        (Refined.encoder describeClientVpnTargetNetworksMaxResults)
        (Refined.decoder describeClientVpnTargetNetworksMaxResults)


{-| Codec for DescribeClientVpnRoutesResult. -}
describeClientVpnRoutesResultCodec : Codec DescribeClientVpnRoutesResult
describeClientVpnRoutesResultCodec =
    Codec.object DescribeClientVpnRoutesResult
        |> Codec.field "Routes" .routes clientVpnRouteSetCodec
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.buildObject


{-| Codec for DescribeClientVpnRoutesRequest. -}
describeClientVpnRoutesRequestCodec : Codec DescribeClientVpnRoutesRequest
describeClientVpnRoutesRequestCodec =
    Codec.object DescribeClientVpnRoutesRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeClientVpnRoutesMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for DescribeClientVpnRoutesMaxResults. -}
describeClientVpnRoutesMaxResultsCodec : Codec DescribeClientVpnRoutesMaxResults
describeClientVpnRoutesMaxResultsCodec =
    Codec.build (Refined.encoder describeClientVpnRoutesMaxResults) (Refined.decoder describeClientVpnRoutesMaxResults)


{-| Codec for DescribeClientVpnEndpointsResult. -}
describeClientVpnEndpointsResultCodec : Codec DescribeClientVpnEndpointsResult
describeClientVpnEndpointsResultCodec =
    Codec.object DescribeClientVpnEndpointsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "ClientVpnEndpoints" .clientVpnEndpoints endpointSetCodec
        |> Codec.buildObject


{-| Codec for DescribeClientVpnEndpointsRequest. -}
describeClientVpnEndpointsRequestCodec : Codec DescribeClientVpnEndpointsRequest
describeClientVpnEndpointsRequestCodec =
    Codec.object DescribeClientVpnEndpointsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeClientVpnEndpointMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointIds" .clientVpnEndpointIds valueStringListCodec
        |> Codec.buildObject


{-| Codec for DescribeClientVpnEndpointMaxResults. -}
describeClientVpnEndpointMaxResultsCodec : Codec DescribeClientVpnEndpointMaxResults
describeClientVpnEndpointMaxResultsCodec =
    Codec.build
        (Refined.encoder describeClientVpnEndpointMaxResults)
        (Refined.decoder describeClientVpnEndpointMaxResults)


{-| Codec for DescribeClientVpnConnectionsResult. -}
describeClientVpnConnectionsResultCodec : Codec DescribeClientVpnConnectionsResult
describeClientVpnConnectionsResultCodec =
    Codec.object DescribeClientVpnConnectionsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "Connections" .connections clientVpnConnectionSetCodec
        |> Codec.buildObject


{-| Codec for DescribeClientVpnConnectionsRequest. -}
describeClientVpnConnectionsRequestCodec : Codec DescribeClientVpnConnectionsRequest
describeClientVpnConnectionsRequestCodec =
    Codec.object DescribeClientVpnConnectionsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeClientVpnConnectionsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for DescribeClientVpnConnectionsMaxResults. -}
describeClientVpnConnectionsMaxResultsCodec : Codec DescribeClientVpnConnectionsMaxResults
describeClientVpnConnectionsMaxResultsCodec =
    Codec.build
        (Refined.encoder describeClientVpnConnectionsMaxResults)
        (Refined.decoder describeClientVpnConnectionsMaxResults)


{-| Codec for DescribeClientVpnAuthorizationRulesResult. -}
describeClientVpnAuthorizationRulesResultCodec : Codec DescribeClientVpnAuthorizationRulesResult
describeClientVpnAuthorizationRulesResultCodec =
    Codec.object DescribeClientVpnAuthorizationRulesResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "AuthorizationRules" .authorizationRules authorizationRuleSetCodec
        |> Codec.buildObject


{-| Codec for DescribeClientVpnAuthorizationRulesRequest. -}
describeClientVpnAuthorizationRulesRequestCodec : Codec DescribeClientVpnAuthorizationRulesRequest
describeClientVpnAuthorizationRulesRequestCodec =
    Codec.object DescribeClientVpnAuthorizationRulesRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeClientVpnAuthorizationRulesMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for DescribeClientVpnAuthorizationRulesMaxResults. -}
describeClientVpnAuthorizationRulesMaxResultsCodec : Codec DescribeClientVpnAuthorizationRulesMaxResults
describeClientVpnAuthorizationRulesMaxResultsCodec =
    Codec.build
        (Refined.encoder describeClientVpnAuthorizationRulesMaxResults)
        (Refined.decoder describeClientVpnAuthorizationRulesMaxResults)


{-| Codec for DescribeClassicLinkInstancesResult. -}
describeClassicLinkInstancesResultCodec : Codec DescribeClassicLinkInstancesResult
describeClassicLinkInstancesResultCodec =
    Codec.object DescribeClassicLinkInstancesResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "Instances" .instances classicLinkInstanceListCodec
        |> Codec.buildObject


{-| Codec for DescribeClassicLinkInstancesRequest. -}
describeClassicLinkInstancesRequestCodec : Codec DescribeClassicLinkInstancesRequest
describeClassicLinkInstancesRequestCodec =
    Codec.object DescribeClassicLinkInstancesRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeClassicLinkInstancesMaxResultsCodec
        |> Codec.field "InstanceIds" .instanceIds instanceIdStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeClassicLinkInstancesMaxResults. -}
describeClassicLinkInstancesMaxResultsCodec : Codec DescribeClassicLinkInstancesMaxResults
describeClassicLinkInstancesMaxResultsCodec =
    Codec.build
        (Refined.encoder describeClassicLinkInstancesMaxResults)
        (Refined.decoder describeClassicLinkInstancesMaxResults)


{-| Codec for DescribeCapacityReservationsResult. -}
describeCapacityReservationsResultCodec : Codec DescribeCapacityReservationsResult
describeCapacityReservationsResultCodec =
    Codec.object DescribeCapacityReservationsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "CapacityReservations" .capacityReservations capacityReservationSetCodec
        |> Codec.buildObject


{-| Codec for DescribeCapacityReservationsRequest. -}
describeCapacityReservationsRequestCodec : Codec DescribeCapacityReservationsRequest
describeCapacityReservationsRequestCodec =
    Codec.object DescribeCapacityReservationsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeCapacityReservationsMaxResultsCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CapacityReservationIds" .capacityReservationIds capacityReservationIdSetCodec
        |> Codec.buildObject


{-| Codec for DescribeCapacityReservationsMaxResults. -}
describeCapacityReservationsMaxResultsCodec : Codec DescribeCapacityReservationsMaxResults
describeCapacityReservationsMaxResultsCodec =
    Codec.build
        (Refined.encoder describeCapacityReservationsMaxResults)
        (Refined.decoder describeCapacityReservationsMaxResults)


{-| Codec for DescribeByoipCidrsResult. -}
describeByoipCidrsResultCodec : Codec DescribeByoipCidrsResult
describeByoipCidrsResultCodec =
    Codec.object DescribeByoipCidrsResult
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "ByoipCidrs" .byoipCidrs byoipCidrSetCodec
        |> Codec.buildObject


{-| Codec for DescribeByoipCidrsRequest. -}
describeByoipCidrsRequestCodec : Codec DescribeByoipCidrsRequest
describeByoipCidrsRequestCodec =
    Codec.object DescribeByoipCidrsRequest
        |> Codec.field "NextToken" .nextToken Codec.string
        |> Codec.field "MaxResults" .maxResults describeByoipCidrsMaxResultsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeByoipCidrsMaxResults. -}
describeByoipCidrsMaxResultsCodec : Codec DescribeByoipCidrsMaxResults
describeByoipCidrsMaxResultsCodec =
    Codec.build (Refined.encoder describeByoipCidrsMaxResults) (Refined.decoder describeByoipCidrsMaxResults)


{-| Codec for DescribeBundleTasksResult. -}
describeBundleTasksResultCodec : Codec DescribeBundleTasksResult
describeBundleTasksResultCodec =
    Codec.object DescribeBundleTasksResult
        |> Codec.field "BundleTasks" .bundleTasks bundleTaskListCodec
        |> Codec.buildObject


{-| Codec for DescribeBundleTasksRequest. -}
describeBundleTasksRequestCodec : Codec DescribeBundleTasksRequest
describeBundleTasksRequestCodec =
    Codec.object DescribeBundleTasksRequest
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "BundleIds" .bundleIds bundleIdStringListCodec
        |> Codec.buildObject


{-| Codec for DescribeAvailabilityZonesResult. -}
describeAvailabilityZonesResultCodec : Codec DescribeAvailabilityZonesResult
describeAvailabilityZonesResultCodec =
    Codec.object DescribeAvailabilityZonesResult
        |> Codec.field "AvailabilityZones" .availabilityZones availabilityZoneListCodec
        |> Codec.buildObject


{-| Codec for DescribeAvailabilityZonesRequest. -}
describeAvailabilityZonesRequestCodec : Codec DescribeAvailabilityZonesRequest
describeAvailabilityZonesRequestCodec =
    Codec.object DescribeAvailabilityZonesRequest
        |> Codec.field "ZoneNames" .zoneNames zoneNameStringListCodec
        |> Codec.field "ZoneIds" .zoneIds zoneIdStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DescribeAggregateIdFormatResult. -}
describeAggregateIdFormatResultCodec : Codec DescribeAggregateIdFormatResult
describeAggregateIdFormatResultCodec =
    Codec.object DescribeAggregateIdFormatResult
        |> Codec.field "UseLongIdsAggregated" .useLongIdsAggregated Codec.bool
        |> Codec.field "Statuses" .statuses idFormatListCodec
        |> Codec.buildObject


{-| Codec for DescribeAggregateIdFormatRequest. -}
describeAggregateIdFormatRequestCodec : Codec DescribeAggregateIdFormatRequest
describeAggregateIdFormatRequestCodec =
    Codec.object DescribeAggregateIdFormatRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for DescribeAddressesResult. -}
describeAddressesResultCodec : Codec DescribeAddressesResult
describeAddressesResultCodec =
    Codec.object DescribeAddressesResult |> Codec.field "Addresses" .addresses addressListCodec |> Codec.buildObject


{-| Codec for DescribeAddressesRequest. -}
describeAddressesRequestCodec : Codec DescribeAddressesRequest
describeAddressesRequestCodec =
    Codec.object DescribeAddressesRequest
        |> Codec.field "PublicIps" .publicIps publicIpStringListCodec
        |> Codec.field "Filters" .filters filterListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AllocationIds" .allocationIds allocationIdListCodec
        |> Codec.buildObject


{-| Codec for DescribeAccountAttributesResult. -}
describeAccountAttributesResultCodec : Codec DescribeAccountAttributesResult
describeAccountAttributesResultCodec =
    Codec.object DescribeAccountAttributesResult
        |> Codec.field "AccountAttributes" .accountAttributes accountAttributeListCodec
        |> Codec.buildObject


{-| Codec for DescribeAccountAttributesRequest. -}
describeAccountAttributesRequestCodec : Codec DescribeAccountAttributesRequest
describeAccountAttributesRequestCodec =
    Codec.object DescribeAccountAttributesRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AttributeNames" .attributeNames accountAttributeNameStringListCodec
        |> Codec.buildObject


{-| Codec for DeregisterImageRequest. -}
deregisterImageRequestCodec : Codec DeregisterImageRequest
deregisterImageRequestCodec =
    Codec.object DeregisterImageRequest
        |> Codec.field "ImageId" .imageId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeprovisionByoipCidrResult. -}
deprovisionByoipCidrResultCodec : Codec DeprovisionByoipCidrResult
deprovisionByoipCidrResultCodec =
    Codec.object DeprovisionByoipCidrResult |> Codec.field "ByoipCidr" .byoipCidr byoipCidrCodec |> Codec.buildObject


{-| Codec for DeprovisionByoipCidrRequest. -}
deprovisionByoipCidrRequestCodec : Codec DeprovisionByoipCidrRequest
deprovisionByoipCidrRequestCodec =
    Codec.object DeprovisionByoipCidrRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Cidr" .cidr Codec.string
        |> Codec.buildObject


{-| Codec for DeleteVpnGatewayRequest. -}
deleteVpnGatewayRequestCodec : Codec DeleteVpnGatewayRequest
deleteVpnGatewayRequestCodec =
    Codec.object DeleteVpnGatewayRequest
        |> Codec.field "VpnGatewayId" .vpnGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteVpnConnectionRouteRequest. -}
deleteVpnConnectionRouteRequestCodec : Codec DeleteVpnConnectionRouteRequest
deleteVpnConnectionRouteRequestCodec =
    Codec.object DeleteVpnConnectionRouteRequest
        |> Codec.field "VpnConnectionId" .vpnConnectionId Codec.string
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for DeleteVpnConnectionRequest. -}
deleteVpnConnectionRequestCodec : Codec DeleteVpnConnectionRequest
deleteVpnConnectionRequestCodec =
    Codec.object DeleteVpnConnectionRequest
        |> Codec.field "VpnConnectionId" .vpnConnectionId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteVpcRequest. -}
deleteVpcRequestCodec : Codec DeleteVpcRequest
deleteVpcRequestCodec =
    Codec.object DeleteVpcRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteVpcPeeringConnectionResult. -}
deleteVpcPeeringConnectionResultCodec : Codec DeleteVpcPeeringConnectionResult
deleteVpcPeeringConnectionResultCodec =
    Codec.object DeleteVpcPeeringConnectionResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for DeleteVpcPeeringConnectionRequest. -}
deleteVpcPeeringConnectionRequestCodec : Codec DeleteVpcPeeringConnectionRequest
deleteVpcPeeringConnectionRequestCodec =
    Codec.object DeleteVpcPeeringConnectionRequest
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteVpcEndpointsResult. -}
deleteVpcEndpointsResultCodec : Codec DeleteVpcEndpointsResult
deleteVpcEndpointsResultCodec =
    Codec.object DeleteVpcEndpointsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemSetCodec
        |> Codec.buildObject


{-| Codec for DeleteVpcEndpointsRequest. -}
deleteVpcEndpointsRequestCodec : Codec DeleteVpcEndpointsRequest
deleteVpcEndpointsRequestCodec =
    Codec.object DeleteVpcEndpointsRequest
        |> Codec.field "VpcEndpointIds" .vpcEndpointIds valueStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteVpcEndpointServiceConfigurationsResult. -}
deleteVpcEndpointServiceConfigurationsResultCodec : Codec DeleteVpcEndpointServiceConfigurationsResult
deleteVpcEndpointServiceConfigurationsResultCodec =
    Codec.object DeleteVpcEndpointServiceConfigurationsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemSetCodec
        |> Codec.buildObject


{-| Codec for DeleteVpcEndpointServiceConfigurationsRequest. -}
deleteVpcEndpointServiceConfigurationsRequestCodec : Codec DeleteVpcEndpointServiceConfigurationsRequest
deleteVpcEndpointServiceConfigurationsRequestCodec =
    Codec.object DeleteVpcEndpointServiceConfigurationsRequest
        |> Codec.field "ServiceIds" .serviceIds valueStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteVpcEndpointConnectionNotificationsResult. -}
deleteVpcEndpointConnectionNotificationsResultCodec : Codec DeleteVpcEndpointConnectionNotificationsResult
deleteVpcEndpointConnectionNotificationsResultCodec =
    Codec.object DeleteVpcEndpointConnectionNotificationsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemSetCodec
        |> Codec.buildObject


{-| Codec for DeleteVpcEndpointConnectionNotificationsRequest. -}
deleteVpcEndpointConnectionNotificationsRequestCodec : Codec DeleteVpcEndpointConnectionNotificationsRequest
deleteVpcEndpointConnectionNotificationsRequestCodec =
    Codec.object DeleteVpcEndpointConnectionNotificationsRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ConnectionNotificationIds" .connectionNotificationIds valueStringListCodec
        |> Codec.buildObject


{-| Codec for DeleteVolumeRequest. -}
deleteVolumeRequestCodec : Codec DeleteVolumeRequest
deleteVolumeRequestCodec =
    Codec.object DeleteVolumeRequest
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteTransitGatewayVpcAttachmentResult. -}
deleteTransitGatewayVpcAttachmentResultCodec : Codec DeleteTransitGatewayVpcAttachmentResult
deleteTransitGatewayVpcAttachmentResultCodec =
    Codec.object DeleteTransitGatewayVpcAttachmentResult
        |> Codec.field "TransitGatewayVpcAttachment" .transitGatewayVpcAttachment transitGatewayVpcAttachmentCodec
        |> Codec.buildObject


{-| Codec for DeleteTransitGatewayVpcAttachmentRequest. -}
deleteTransitGatewayVpcAttachmentRequestCodec : Codec DeleteTransitGatewayVpcAttachmentRequest
deleteTransitGatewayVpcAttachmentRequestCodec =
    Codec.object DeleteTransitGatewayVpcAttachmentRequest
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteTransitGatewayRouteTableResult. -}
deleteTransitGatewayRouteTableResultCodec : Codec DeleteTransitGatewayRouteTableResult
deleteTransitGatewayRouteTableResultCodec =
    Codec.object DeleteTransitGatewayRouteTableResult
        |> Codec.field "TransitGatewayRouteTable" .transitGatewayRouteTable transitGatewayRouteTableCodec
        |> Codec.buildObject


{-| Codec for DeleteTransitGatewayRouteTableRequest. -}
deleteTransitGatewayRouteTableRequestCodec : Codec DeleteTransitGatewayRouteTableRequest
deleteTransitGatewayRouteTableRequestCodec =
    Codec.object DeleteTransitGatewayRouteTableRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteTransitGatewayRouteResult. -}
deleteTransitGatewayRouteResultCodec : Codec DeleteTransitGatewayRouteResult
deleteTransitGatewayRouteResultCodec =
    Codec.object DeleteTransitGatewayRouteResult
        |> Codec.field "Route" .route transitGatewayRouteCodec
        |> Codec.buildObject


{-| Codec for DeleteTransitGatewayRouteRequest. -}
deleteTransitGatewayRouteRequestCodec : Codec DeleteTransitGatewayRouteRequest
deleteTransitGatewayRouteRequestCodec =
    Codec.object DeleteTransitGatewayRouteRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for DeleteTransitGatewayResult. -}
deleteTransitGatewayResultCodec : Codec DeleteTransitGatewayResult
deleteTransitGatewayResultCodec =
    Codec.object DeleteTransitGatewayResult
        |> Codec.field "TransitGateway" .transitGateway transitGatewayCodec
        |> Codec.buildObject


{-| Codec for DeleteTransitGatewayRequest. -}
deleteTransitGatewayRequestCodec : Codec DeleteTransitGatewayRequest
deleteTransitGatewayRequestCodec =
    Codec.object DeleteTransitGatewayRequest
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteTrafficMirrorTargetResult. -}
deleteTrafficMirrorTargetResultCodec : Codec DeleteTrafficMirrorTargetResult
deleteTrafficMirrorTargetResultCodec =
    Codec.object DeleteTrafficMirrorTargetResult
        |> Codec.field "TrafficMirrorTargetId" .trafficMirrorTargetId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteTrafficMirrorTargetRequest. -}
deleteTrafficMirrorTargetRequestCodec : Codec DeleteTrafficMirrorTargetRequest
deleteTrafficMirrorTargetRequestCodec =
    Codec.object DeleteTrafficMirrorTargetRequest
        |> Codec.field "TrafficMirrorTargetId" .trafficMirrorTargetId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteTrafficMirrorSessionResult. -}
deleteTrafficMirrorSessionResultCodec : Codec DeleteTrafficMirrorSessionResult
deleteTrafficMirrorSessionResultCodec =
    Codec.object DeleteTrafficMirrorSessionResult
        |> Codec.field "TrafficMirrorSessionId" .trafficMirrorSessionId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteTrafficMirrorSessionRequest. -}
deleteTrafficMirrorSessionRequestCodec : Codec DeleteTrafficMirrorSessionRequest
deleteTrafficMirrorSessionRequestCodec =
    Codec.object DeleteTrafficMirrorSessionRequest
        |> Codec.field "TrafficMirrorSessionId" .trafficMirrorSessionId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteTrafficMirrorFilterRuleResult. -}
deleteTrafficMirrorFilterRuleResultCodec : Codec DeleteTrafficMirrorFilterRuleResult
deleteTrafficMirrorFilterRuleResultCodec =
    Codec.object DeleteTrafficMirrorFilterRuleResult
        |> Codec.field "TrafficMirrorFilterRuleId" .trafficMirrorFilterRuleId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteTrafficMirrorFilterRuleRequest. -}
deleteTrafficMirrorFilterRuleRequestCodec : Codec DeleteTrafficMirrorFilterRuleRequest
deleteTrafficMirrorFilterRuleRequestCodec =
    Codec.object DeleteTrafficMirrorFilterRuleRequest
        |> Codec.field "TrafficMirrorFilterRuleId" .trafficMirrorFilterRuleId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteTrafficMirrorFilterResult. -}
deleteTrafficMirrorFilterResultCodec : Codec DeleteTrafficMirrorFilterResult
deleteTrafficMirrorFilterResultCodec =
    Codec.object DeleteTrafficMirrorFilterResult
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteTrafficMirrorFilterRequest. -}
deleteTrafficMirrorFilterRequestCodec : Codec DeleteTrafficMirrorFilterRequest
deleteTrafficMirrorFilterRequestCodec =
    Codec.object DeleteTrafficMirrorFilterRequest
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteTagsRequest. -}
deleteTagsRequestCodec : Codec DeleteTagsRequest
deleteTagsRequestCodec =
    Codec.object DeleteTagsRequest
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "Resources" .resources resourceIdListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteSubnetRequest. -}
deleteSubnetRequestCodec : Codec DeleteSubnetRequest
deleteSubnetRequestCodec =
    Codec.object DeleteSubnetRequest
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteSpotDatafeedSubscriptionRequest. -}
deleteSpotDatafeedSubscriptionRequestCodec : Codec DeleteSpotDatafeedSubscriptionRequest
deleteSpotDatafeedSubscriptionRequestCodec =
    Codec.object DeleteSpotDatafeedSubscriptionRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for DeleteSnapshotRequest. -}
deleteSnapshotRequestCodec : Codec DeleteSnapshotRequest
deleteSnapshotRequestCodec =
    Codec.object DeleteSnapshotRequest
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteSecurityGroupRequest. -}
deleteSecurityGroupRequestCodec : Codec DeleteSecurityGroupRequest
deleteSecurityGroupRequestCodec =
    Codec.object DeleteSecurityGroupRequest
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteRouteTableRequest. -}
deleteRouteTableRequestCodec : Codec DeleteRouteTableRequest
deleteRouteTableRequestCodec =
    Codec.object DeleteRouteTableRequest
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteRouteRequest. -}
deleteRouteRequestCodec : Codec DeleteRouteRequest
deleteRouteRequestCodec =
    Codec.object DeleteRouteRequest
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationIpv6CidrBlock" .destinationIpv6CidrBlock Codec.string
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for DeletePlacementGroupRequest. -}
deletePlacementGroupRequestCodec : Codec DeletePlacementGroupRequest
deletePlacementGroupRequestCodec =
    Codec.object DeletePlacementGroupRequest
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteNetworkInterfaceRequest. -}
deleteNetworkInterfaceRequestCodec : Codec DeleteNetworkInterfaceRequest
deleteNetworkInterfaceRequestCodec =
    Codec.object DeleteNetworkInterfaceRequest
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteNetworkInterfacePermissionResult. -}
deleteNetworkInterfacePermissionResultCodec : Codec DeleteNetworkInterfacePermissionResult
deleteNetworkInterfacePermissionResultCodec =
    Codec.object DeleteNetworkInterfacePermissionResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for DeleteNetworkInterfacePermissionRequest. -}
deleteNetworkInterfacePermissionRequestCodec : Codec DeleteNetworkInterfacePermissionRequest
deleteNetworkInterfacePermissionRequestCodec =
    Codec.object DeleteNetworkInterfacePermissionRequest
        |> Codec.field "NetworkInterfacePermissionId" .networkInterfacePermissionId Codec.string
        |> Codec.field "Force" .force Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteNetworkAclRequest. -}
deleteNetworkAclRequestCodec : Codec DeleteNetworkAclRequest
deleteNetworkAclRequestCodec =
    Codec.object DeleteNetworkAclRequest
        |> Codec.field "NetworkAclId" .networkAclId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteNetworkAclEntryRequest. -}
deleteNetworkAclEntryRequestCodec : Codec DeleteNetworkAclEntryRequest
deleteNetworkAclEntryRequestCodec =
    Codec.object DeleteNetworkAclEntryRequest
        |> Codec.field "RuleNumber" .ruleNumber Codec.int
        |> Codec.field "NetworkAclId" .networkAclId Codec.string
        |> Codec.field "Egress" .egress Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteNatGatewayResult. -}
deleteNatGatewayResultCodec : Codec DeleteNatGatewayResult
deleteNatGatewayResultCodec =
    Codec.object DeleteNatGatewayResult |> Codec.field "NatGatewayId" .natGatewayId Codec.string |> Codec.buildObject


{-| Codec for DeleteNatGatewayRequest. -}
deleteNatGatewayRequestCodec : Codec DeleteNatGatewayRequest
deleteNatGatewayRequestCodec =
    Codec.object DeleteNatGatewayRequest |> Codec.field "NatGatewayId" .natGatewayId Codec.string |> Codec.buildObject


{-| Codec for DeleteLaunchTemplateVersionsResult. -}
deleteLaunchTemplateVersionsResultCodec : Codec DeleteLaunchTemplateVersionsResult
deleteLaunchTemplateVersionsResultCodec =
    Codec.object DeleteLaunchTemplateVersionsResult
        |> Codec.field
            "UnsuccessfullyDeletedLaunchTemplateVersions"
            .unsuccessfullyDeletedLaunchTemplateVersions
            deleteLaunchTemplateVersionsResponseErrorSetCodec
        |> Codec.field
            "SuccessfullyDeletedLaunchTemplateVersions"
            .successfullyDeletedLaunchTemplateVersions
            deleteLaunchTemplateVersionsResponseSuccessSetCodec
        |> Codec.buildObject


{-| Codec for DeleteLaunchTemplateVersionsResponseSuccessSet. -}
deleteLaunchTemplateVersionsResponseSuccessSetCodec : Codec DeleteLaunchTemplateVersionsResponseSuccessSet
deleteLaunchTemplateVersionsResponseSuccessSetCodec =
    Codec.list deleteLaunchTemplateVersionsResponseSuccessItemCodec


{-| Codec for DeleteLaunchTemplateVersionsResponseSuccessItem. -}
deleteLaunchTemplateVersionsResponseSuccessItemCodec : Codec DeleteLaunchTemplateVersionsResponseSuccessItem
deleteLaunchTemplateVersionsResponseSuccessItemCodec =
    Codec.object DeleteLaunchTemplateVersionsResponseSuccessItem
        |> Codec.field "VersionNumber" .versionNumber Codec.int
        |> Codec.field "LaunchTemplateName" .launchTemplateName Codec.string
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteLaunchTemplateVersionsResponseErrorSet. -}
deleteLaunchTemplateVersionsResponseErrorSetCodec : Codec DeleteLaunchTemplateVersionsResponseErrorSet
deleteLaunchTemplateVersionsResponseErrorSetCodec =
    Codec.list deleteLaunchTemplateVersionsResponseErrorItemCodec


{-| Codec for DeleteLaunchTemplateVersionsResponseErrorItem. -}
deleteLaunchTemplateVersionsResponseErrorItemCodec : Codec DeleteLaunchTemplateVersionsResponseErrorItem
deleteLaunchTemplateVersionsResponseErrorItemCodec =
    Codec.object DeleteLaunchTemplateVersionsResponseErrorItem
        |> Codec.field "VersionNumber" .versionNumber Codec.int
        |> Codec.field "ResponseError" .responseError responseErrorCodec
        |> Codec.field "LaunchTemplateName" .launchTemplateName Codec.string
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteLaunchTemplateVersionsRequest. -}
deleteLaunchTemplateVersionsRequestCodec : Codec DeleteLaunchTemplateVersionsRequest
deleteLaunchTemplateVersionsRequestCodec =
    Codec.object DeleteLaunchTemplateVersionsRequest
        |> Codec.field "Versions" .versions versionStringListCodec
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteLaunchTemplateResult. -}
deleteLaunchTemplateResultCodec : Codec DeleteLaunchTemplateResult
deleteLaunchTemplateResultCodec =
    Codec.object DeleteLaunchTemplateResult
        |> Codec.field "LaunchTemplate" .launchTemplate launchTemplateCodec
        |> Codec.buildObject


{-| Codec for DeleteLaunchTemplateRequest. -}
deleteLaunchTemplateRequestCodec : Codec DeleteLaunchTemplateRequest
deleteLaunchTemplateRequestCodec =
    Codec.object DeleteLaunchTemplateRequest
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteKeyPairRequest. -}
deleteKeyPairRequestCodec : Codec DeleteKeyPairRequest
deleteKeyPairRequestCodec =
    Codec.object DeleteKeyPairRequest
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteInternetGatewayRequest. -}
deleteInternetGatewayRequestCodec : Codec DeleteInternetGatewayRequest
deleteInternetGatewayRequestCodec =
    Codec.object DeleteInternetGatewayRequest
        |> Codec.field "InternetGatewayId" .internetGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteFpgaImageResult. -}
deleteFpgaImageResultCodec : Codec DeleteFpgaImageResult
deleteFpgaImageResultCodec =
    Codec.object DeleteFpgaImageResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for DeleteFpgaImageRequest. -}
deleteFpgaImageRequestCodec : Codec DeleteFpgaImageRequest
deleteFpgaImageRequestCodec =
    Codec.object DeleteFpgaImageRequest
        |> Codec.field "FpgaImageId" .fpgaImageId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteFlowLogsResult. -}
deleteFlowLogsResultCodec : Codec DeleteFlowLogsResult
deleteFlowLogsResultCodec =
    Codec.object DeleteFlowLogsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemSetCodec
        |> Codec.buildObject


{-| Codec for DeleteFlowLogsRequest. -}
deleteFlowLogsRequestCodec : Codec DeleteFlowLogsRequest
deleteFlowLogsRequestCodec =
    Codec.object DeleteFlowLogsRequest
        |> Codec.field "FlowLogIds" .flowLogIds valueStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteFleetsResult. -}
deleteFleetsResultCodec : Codec DeleteFleetsResult
deleteFleetsResultCodec =
    Codec.object DeleteFleetsResult
        |> Codec.field "UnsuccessfulFleetDeletions" .unsuccessfulFleetDeletions deleteFleetErrorSetCodec
        |> Codec.field "SuccessfulFleetDeletions" .successfulFleetDeletions deleteFleetSuccessSetCodec
        |> Codec.buildObject


{-| Codec for DeleteFleetsRequest. -}
deleteFleetsRequestCodec : Codec DeleteFleetsRequest
deleteFleetsRequestCodec =
    Codec.object DeleteFleetsRequest
        |> Codec.field "TerminateInstances" .terminateInstances Codec.bool
        |> Codec.field "FleetIds" .fleetIds fleetIdSetCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteFleetSuccessSet. -}
deleteFleetSuccessSetCodec : Codec DeleteFleetSuccessSet
deleteFleetSuccessSetCodec =
    Codec.list deleteFleetSuccessItemCodec


{-| Codec for DeleteFleetSuccessItem. -}
deleteFleetSuccessItemCodec : Codec DeleteFleetSuccessItem
deleteFleetSuccessItemCodec =
    Codec.object DeleteFleetSuccessItem
        |> Codec.field "PreviousFleetState" .previousFleetState fleetStateCodeCodec
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.field "CurrentFleetState" .currentFleetState fleetStateCodeCodec
        |> Codec.buildObject


{-| Codec for DeleteFleetErrorSet. -}
deleteFleetErrorSetCodec : Codec DeleteFleetErrorSet
deleteFleetErrorSetCodec =
    Codec.list deleteFleetErrorItemCodec


{-| Codec for DeleteFleetErrorItem. -}
deleteFleetErrorItemCodec : Codec DeleteFleetErrorItem
deleteFleetErrorItemCodec =
    Codec.object DeleteFleetErrorItem
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.field "Error" .error deleteFleetErrorCodec
        |> Codec.buildObject


{-| Codec for DeleteFleetErrorCode. -}
deleteFleetErrorCodeCodec : Codec DeleteFleetErrorCode
deleteFleetErrorCodeCodec =
    Codec.build (Enum.encoder deleteFleetErrorCode) (Enum.decoder deleteFleetErrorCode)


{-| Codec for DeleteFleetError. -}
deleteFleetErrorCodec : Codec DeleteFleetError
deleteFleetErrorCodec =
    Codec.object DeleteFleetError
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code deleteFleetErrorCodeCodec
        |> Codec.buildObject


{-| Codec for DeleteEgressOnlyInternetGatewayResult. -}
deleteEgressOnlyInternetGatewayResultCodec : Codec DeleteEgressOnlyInternetGatewayResult
deleteEgressOnlyInternetGatewayResultCodec =
    Codec.object DeleteEgressOnlyInternetGatewayResult
        |> Codec.field "ReturnCode" .returnCode Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteEgressOnlyInternetGatewayRequest. -}
deleteEgressOnlyInternetGatewayRequestCodec : Codec DeleteEgressOnlyInternetGatewayRequest
deleteEgressOnlyInternetGatewayRequestCodec =
    Codec.object DeleteEgressOnlyInternetGatewayRequest
        |> Codec.field "EgressOnlyInternetGatewayId" .egressOnlyInternetGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for DeleteDhcpOptionsRequest. -}
deleteDhcpOptionsRequestCodec : Codec DeleteDhcpOptionsRequest
deleteDhcpOptionsRequestCodec =
    Codec.object DeleteDhcpOptionsRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DhcpOptionsId" .dhcpOptionsId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteCustomerGatewayRequest. -}
deleteCustomerGatewayRequestCodec : Codec DeleteCustomerGatewayRequest
deleteCustomerGatewayRequestCodec =
    Codec.object DeleteCustomerGatewayRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CustomerGatewayId" .customerGatewayId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteClientVpnRouteResult. -}
deleteClientVpnRouteResultCodec : Codec DeleteClientVpnRouteResult
deleteClientVpnRouteResultCodec =
    Codec.object DeleteClientVpnRouteResult
        |> Codec.field "Status" .status clientVpnRouteStatusCodec
        |> Codec.buildObject


{-| Codec for DeleteClientVpnRouteRequest. -}
deleteClientVpnRouteRequestCodec : Codec DeleteClientVpnRouteRequest
deleteClientVpnRouteRequestCodec =
    Codec.object DeleteClientVpnRouteRequest
        |> Codec.field "TargetVpcSubnetId" .targetVpcSubnetId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for DeleteClientVpnEndpointResult. -}
deleteClientVpnEndpointResultCodec : Codec DeleteClientVpnEndpointResult
deleteClientVpnEndpointResultCodec =
    Codec.object DeleteClientVpnEndpointResult
        |> Codec.field "Status" .status clientVpnEndpointStatusCodec
        |> Codec.buildObject


{-| Codec for DeleteClientVpnEndpointRequest. -}
deleteClientVpnEndpointRequestCodec : Codec DeleteClientVpnEndpointRequest
deleteClientVpnEndpointRequestCodec =
    Codec.object DeleteClientVpnEndpointRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for DefaultTargetCapacityType. -}
defaultTargetCapacityTypeCodec : Codec DefaultTargetCapacityType
defaultTargetCapacityTypeCodec =
    Codec.build (Enum.encoder defaultTargetCapacityType) (Enum.decoder defaultTargetCapacityType)


{-| Codec for DefaultRouteTablePropagationValue. -}
defaultRouteTablePropagationValueCodec : Codec DefaultRouteTablePropagationValue
defaultRouteTablePropagationValueCodec =
    Codec.build (Enum.encoder defaultRouteTablePropagationValue) (Enum.decoder defaultRouteTablePropagationValue)


{-| Codec for DefaultRouteTableAssociationValue. -}
defaultRouteTableAssociationValueCodec : Codec DefaultRouteTableAssociationValue
defaultRouteTableAssociationValueCodec =
    Codec.build (Enum.encoder defaultRouteTableAssociationValue) (Enum.decoder defaultRouteTableAssociationValue)


{-| Codec for DateTime. -}
dateTimeCodec : Codec DateTime
dateTimeCodec =
    Codec.string


{-| Codec for DatafeedSubscriptionState. -}
datafeedSubscriptionStateCodec : Codec DatafeedSubscriptionState
datafeedSubscriptionStateCodec =
    Codec.build (Enum.encoder datafeedSubscriptionState) (Enum.decoder datafeedSubscriptionState)


{-| Codec for CustomerGatewayList. -}
customerGatewayListCodec : Codec CustomerGatewayList
customerGatewayListCodec =
    Codec.list customerGatewayCodec


{-| Codec for CustomerGatewayIdStringList. -}
customerGatewayIdStringListCodec : Codec CustomerGatewayIdStringList
customerGatewayIdStringListCodec =
    Codec.list Codec.string


{-| Codec for CustomerGateway. -}
customerGatewayCodec : Codec CustomerGateway
customerGatewayCodec =
    Codec.object CustomerGateway
        |> Codec.field "Type" .type_ Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state Codec.string
        |> Codec.field "IpAddress" .ipAddress Codec.string
        |> Codec.field "CustomerGatewayId" .customerGatewayId Codec.string
        |> Codec.field "BgpAsn" .bgpAsn Codec.string
        |> Codec.buildObject


{-| Codec for CurrencyCodeValues. -}
currencyCodeValuesCodec : Codec CurrencyCodeValues
currencyCodeValuesCodec =
    Codec.build (Enum.encoder currencyCodeValues) (Enum.decoder currencyCodeValues)


{-| Codec for CreditSpecificationRequest. -}
creditSpecificationRequestCodec : Codec CreditSpecificationRequest
creditSpecificationRequestCodec =
    Codec.object CreditSpecificationRequest |> Codec.field "CpuCredits" .cpuCredits Codec.string |> Codec.buildObject


{-| Codec for CreditSpecification. -}
creditSpecificationCodec : Codec CreditSpecification
creditSpecificationCodec =
    Codec.object CreditSpecification |> Codec.field "CpuCredits" .cpuCredits Codec.string |> Codec.buildObject


{-| Codec for CreateVpnGatewayResult. -}
createVpnGatewayResultCodec : Codec CreateVpnGatewayResult
createVpnGatewayResultCodec =
    Codec.object CreateVpnGatewayResult |> Codec.field "VpnGateway" .vpnGateway vpnGatewayCodec |> Codec.buildObject


{-| Codec for CreateVpnGatewayRequest. -}
createVpnGatewayRequestCodec : Codec CreateVpnGatewayRequest
createVpnGatewayRequestCodec =
    Codec.object CreateVpnGatewayRequest
        |> Codec.field "Type" .type_ gatewayTypeCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "AmazonSideAsn" .amazonSideAsn Codec.int
        |> Codec.buildObject


{-| Codec for CreateVpnConnectionRouteRequest. -}
createVpnConnectionRouteRequestCodec : Codec CreateVpnConnectionRouteRequest
createVpnConnectionRouteRequestCodec =
    Codec.object CreateVpnConnectionRouteRequest
        |> Codec.field "VpnConnectionId" .vpnConnectionId Codec.string
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for CreateVpnConnectionResult. -}
createVpnConnectionResultCodec : Codec CreateVpnConnectionResult
createVpnConnectionResultCodec =
    Codec.object CreateVpnConnectionResult
        |> Codec.field "VpnConnection" .vpnConnection vpnConnectionCodec
        |> Codec.buildObject


{-| Codec for CreateVpnConnectionRequest. -}
createVpnConnectionRequestCodec : Codec CreateVpnConnectionRequest
createVpnConnectionRequestCodec =
    Codec.object CreateVpnConnectionRequest
        |> Codec.field "VpnGatewayId" .vpnGatewayId Codec.string
        |> Codec.field "Type" .type_ Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "Options" .options vpnConnectionOptionsSpecificationCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CustomerGatewayId" .customerGatewayId Codec.string
        |> Codec.buildObject


{-| Codec for CreateVpcResult. -}
createVpcResultCodec : Codec CreateVpcResult
createVpcResultCodec =
    Codec.object CreateVpcResult |> Codec.field "Vpc" .vpc vpcCodec |> Codec.buildObject


{-| Codec for CreateVpcRequest. -}
createVpcRequestCodec : Codec CreateVpcRequest
createVpcRequestCodec =
    Codec.object CreateVpcRequest
        |> Codec.field "InstanceTenancy" .instanceTenancy tenancyCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.field "AmazonProvidedIpv6CidrBlock" .amazonProvidedIpv6CidrBlock Codec.bool
        |> Codec.buildObject


{-| Codec for CreateVpcPeeringConnectionResult. -}
createVpcPeeringConnectionResultCodec : Codec CreateVpcPeeringConnectionResult
createVpcPeeringConnectionResultCodec =
    Codec.object CreateVpcPeeringConnectionResult
        |> Codec.field "VpcPeeringConnection" .vpcPeeringConnection vpcPeeringConnectionCodec
        |> Codec.buildObject


{-| Codec for CreateVpcPeeringConnectionRequest. -}
createVpcPeeringConnectionRequestCodec : Codec CreateVpcPeeringConnectionRequest
createVpcPeeringConnectionRequestCodec =
    Codec.object CreateVpcPeeringConnectionRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "PeerVpcId" .peerVpcId Codec.string
        |> Codec.field "PeerRegion" .peerRegion Codec.string
        |> Codec.field "PeerOwnerId" .peerOwnerId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CreateVpcEndpointServiceConfigurationResult. -}
createVpcEndpointServiceConfigurationResultCodec : Codec CreateVpcEndpointServiceConfigurationResult
createVpcEndpointServiceConfigurationResultCodec =
    Codec.object CreateVpcEndpointServiceConfigurationResult
        |> Codec.field "ServiceConfiguration" .serviceConfiguration serviceConfigurationCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateVpcEndpointServiceConfigurationRequest. -}
createVpcEndpointServiceConfigurationRequestCodec : Codec CreateVpcEndpointServiceConfigurationRequest
createVpcEndpointServiceConfigurationRequestCodec =
    Codec.object CreateVpcEndpointServiceConfigurationRequest
        |> Codec.field "NetworkLoadBalancerArns" .networkLoadBalancerArns valueStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "AcceptanceRequired" .acceptanceRequired Codec.bool
        |> Codec.buildObject


{-| Codec for CreateVpcEndpointResult. -}
createVpcEndpointResultCodec : Codec CreateVpcEndpointResult
createVpcEndpointResultCodec =
    Codec.object CreateVpcEndpointResult
        |> Codec.field "VpcEndpoint" .vpcEndpoint vpcEndpointCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateVpcEndpointRequest. -}
createVpcEndpointRequestCodec : Codec CreateVpcEndpointRequest
createVpcEndpointRequestCodec =
    Codec.object CreateVpcEndpointRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "VpcEndpointType" .vpcEndpointType vpcEndpointTypeCodec
        |> Codec.field "SubnetIds" .subnetIds valueStringListCodec
        |> Codec.field "ServiceName" .serviceName Codec.string
        |> Codec.field "SecurityGroupIds" .securityGroupIds valueStringListCodec
        |> Codec.field "RouteTableIds" .routeTableIds valueStringListCodec
        |> Codec.field "PrivateDnsEnabled" .privateDnsEnabled Codec.bool
        |> Codec.field "PolicyDocument" .policyDocument Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateVpcEndpointConnectionNotificationResult. -}
createVpcEndpointConnectionNotificationResultCodec : Codec CreateVpcEndpointConnectionNotificationResult
createVpcEndpointConnectionNotificationResultCodec =
    Codec.object CreateVpcEndpointConnectionNotificationResult
        |> Codec.field "ConnectionNotification" .connectionNotification connectionNotificationCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateVpcEndpointConnectionNotificationRequest. -}
createVpcEndpointConnectionNotificationRequestCodec : Codec CreateVpcEndpointConnectionNotificationRequest
createVpcEndpointConnectionNotificationRequestCodec =
    Codec.object CreateVpcEndpointConnectionNotificationRequest
        |> Codec.field "VpcEndpointId" .vpcEndpointId Codec.string
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ConnectionNotificationArn" .connectionNotificationArn Codec.string
        |> Codec.field "ConnectionEvents" .connectionEvents valueStringListCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateVolumeRequest. -}
createVolumeRequestCodec : Codec CreateVolumeRequest
createVolumeRequestCodec =
    Codec.object CreateVolumeRequest
        |> Codec.field "VolumeType" .volumeType volumeTypeCodec
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "SnapshotId" .snapshotId Codec.string
        |> Codec.field "Size" .size Codec.int
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Iops" .iops Codec.int
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for CreateVolumePermissionModifications. -}
createVolumePermissionModificationsCodec : Codec CreateVolumePermissionModifications
createVolumePermissionModificationsCodec =
    Codec.object CreateVolumePermissionModifications
        |> Codec.field "Remove" .remove createVolumePermissionListCodec
        |> Codec.field "Add" .add createVolumePermissionListCodec
        |> Codec.buildObject


{-| Codec for CreateVolumePermissionList. -}
createVolumePermissionListCodec : Codec CreateVolumePermissionList
createVolumePermissionListCodec =
    Codec.list createVolumePermissionCodec


{-| Codec for CreateVolumePermission. -}
createVolumePermissionCodec : Codec CreateVolumePermission
createVolumePermissionCodec =
    Codec.object CreateVolumePermission
        |> Codec.field "UserId" .userId Codec.string
        |> Codec.field "Group" .group permissionGroupCodec
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayVpcAttachmentResult. -}
createTransitGatewayVpcAttachmentResultCodec : Codec CreateTransitGatewayVpcAttachmentResult
createTransitGatewayVpcAttachmentResultCodec =
    Codec.object CreateTransitGatewayVpcAttachmentResult
        |> Codec.field "TransitGatewayVpcAttachment" .transitGatewayVpcAttachment transitGatewayVpcAttachmentCodec
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayVpcAttachmentRequestOptions. -}
createTransitGatewayVpcAttachmentRequestOptionsCodec : Codec CreateTransitGatewayVpcAttachmentRequestOptions
createTransitGatewayVpcAttachmentRequestOptionsCodec =
    Codec.object CreateTransitGatewayVpcAttachmentRequestOptions
        |> Codec.field "Ipv6Support" .ipv6Support ipv6SupportValueCodec
        |> Codec.field "DnsSupport" .dnsSupport dnsSupportValueCodec
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayVpcAttachmentRequest. -}
createTransitGatewayVpcAttachmentRequestCodec : Codec CreateTransitGatewayVpcAttachmentRequest
createTransitGatewayVpcAttachmentRequestCodec =
    Codec.object CreateTransitGatewayVpcAttachmentRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "SubnetIds" .subnetIds valueStringListCodec
        |> Codec.field "Options" .options createTransitGatewayVpcAttachmentRequestOptionsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayRouteTableResult. -}
createTransitGatewayRouteTableResultCodec : Codec CreateTransitGatewayRouteTableResult
createTransitGatewayRouteTableResultCodec =
    Codec.object CreateTransitGatewayRouteTableResult
        |> Codec.field "TransitGatewayRouteTable" .transitGatewayRouteTable transitGatewayRouteTableCodec
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayRouteTableRequest. -}
createTransitGatewayRouteTableRequestCodec : Codec CreateTransitGatewayRouteTableRequest
createTransitGatewayRouteTableRequestCodec =
    Codec.object CreateTransitGatewayRouteTableRequest
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayRouteResult. -}
createTransitGatewayRouteResultCodec : Codec CreateTransitGatewayRouteResult
createTransitGatewayRouteResultCodec =
    Codec.object CreateTransitGatewayRouteResult
        |> Codec.field "Route" .route transitGatewayRouteCodec
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayRouteRequest. -}
createTransitGatewayRouteRequestCodec : Codec CreateTransitGatewayRouteRequest
createTransitGatewayRouteRequestCodec =
    Codec.object CreateTransitGatewayRouteRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.field "Blackhole" .blackhole Codec.bool
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayResult. -}
createTransitGatewayResultCodec : Codec CreateTransitGatewayResult
createTransitGatewayResultCodec =
    Codec.object CreateTransitGatewayResult
        |> Codec.field "TransitGateway" .transitGateway transitGatewayCodec
        |> Codec.buildObject


{-| Codec for CreateTransitGatewayRequest. -}
createTransitGatewayRequestCodec : Codec CreateTransitGatewayRequest
createTransitGatewayRequestCodec =
    Codec.object CreateTransitGatewayRequest
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "Options" .options transitGatewayRequestOptionsCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for CreateTrafficMirrorTargetResult. -}
createTrafficMirrorTargetResultCodec : Codec CreateTrafficMirrorTargetResult
createTrafficMirrorTargetResultCodec =
    Codec.object CreateTrafficMirrorTargetResult
        |> Codec.field "TrafficMirrorTarget" .trafficMirrorTarget trafficMirrorTargetCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateTrafficMirrorTargetRequest. -}
createTrafficMirrorTargetRequestCodec : Codec CreateTrafficMirrorTargetRequest
createTrafficMirrorTargetRequestCodec =
    Codec.object CreateTrafficMirrorTargetRequest
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "NetworkLoadBalancerArn" .networkLoadBalancerArn Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateTrafficMirrorSessionResult. -}
createTrafficMirrorSessionResultCodec : Codec CreateTrafficMirrorSessionResult
createTrafficMirrorSessionResultCodec =
    Codec.object CreateTrafficMirrorSessionResult
        |> Codec.field "TrafficMirrorSession" .trafficMirrorSession trafficMirrorSessionCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateTrafficMirrorSessionRequest. -}
createTrafficMirrorSessionRequestCodec : Codec CreateTrafficMirrorSessionRequest
createTrafficMirrorSessionRequestCodec =
    Codec.object CreateTrafficMirrorSessionRequest
        |> Codec.field "VirtualNetworkId" .virtualNetworkId Codec.int
        |> Codec.field "TrafficMirrorTargetId" .trafficMirrorTargetId Codec.string
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "SessionNumber" .sessionNumber Codec.int
        |> Codec.field "PacketLength" .packetLength Codec.int
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateTrafficMirrorFilterRuleResult. -}
createTrafficMirrorFilterRuleResultCodec : Codec CreateTrafficMirrorFilterRuleResult
createTrafficMirrorFilterRuleResultCodec =
    Codec.object CreateTrafficMirrorFilterRuleResult
        |> Codec.field "TrafficMirrorFilterRule" .trafficMirrorFilterRule trafficMirrorFilterRuleCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateTrafficMirrorFilterRuleRequest. -}
createTrafficMirrorFilterRuleRequestCodec : Codec CreateTrafficMirrorFilterRuleRequest
createTrafficMirrorFilterRuleRequestCodec =
    Codec.object CreateTrafficMirrorFilterRuleRequest
        |> Codec.field "TrafficMirrorFilterId" .trafficMirrorFilterId Codec.string
        |> Codec.field "TrafficDirection" .trafficDirection trafficDirectionCodec
        |> Codec.field "SourcePortRange" .sourcePortRange trafficMirrorPortRangeRequestCodec
        |> Codec.field "SourceCidrBlock" .sourceCidrBlock Codec.string
        |> Codec.field "RuleNumber" .ruleNumber Codec.int
        |> Codec.field "RuleAction" .ruleAction trafficMirrorRuleActionCodec
        |> Codec.field "Protocol" .protocol Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationPortRange" .destinationPortRange trafficMirrorPortRangeRequestCodec
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateTrafficMirrorFilterResult. -}
createTrafficMirrorFilterResultCodec : Codec CreateTrafficMirrorFilterResult
createTrafficMirrorFilterResultCodec =
    Codec.object CreateTrafficMirrorFilterResult
        |> Codec.field "TrafficMirrorFilter" .trafficMirrorFilter trafficMirrorFilterCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateTrafficMirrorFilterRequest. -}
createTrafficMirrorFilterRequestCodec : Codec CreateTrafficMirrorFilterRequest
createTrafficMirrorFilterRequestCodec =
    Codec.object CreateTrafficMirrorFilterRequest
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateTagsRequest. -}
createTagsRequestCodec : Codec CreateTagsRequest
createTagsRequestCodec =
    Codec.object CreateTagsRequest
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "Resources" .resources resourceIdListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CreateSubnetResult. -}
createSubnetResultCodec : Codec CreateSubnetResult
createSubnetResultCodec =
    Codec.object CreateSubnetResult |> Codec.field "Subnet" .subnet subnetCodec |> Codec.buildObject


{-| Codec for CreateSubnetRequest. -}
createSubnetRequestCodec : Codec CreateSubnetRequest
createSubnetRequestCodec =
    Codec.object CreateSubnetRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Ipv6CidrBlock" .ipv6CidrBlock Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.field "AvailabilityZoneId" .availabilityZoneId Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for CreateSpotDatafeedSubscriptionResult. -}
createSpotDatafeedSubscriptionResultCodec : Codec CreateSpotDatafeedSubscriptionResult
createSpotDatafeedSubscriptionResultCodec =
    Codec.object CreateSpotDatafeedSubscriptionResult
        |> Codec.field "SpotDatafeedSubscription" .spotDatafeedSubscription spotDatafeedSubscriptionCodec
        |> Codec.buildObject


{-| Codec for CreateSpotDatafeedSubscriptionRequest. -}
createSpotDatafeedSubscriptionRequestCodec : Codec CreateSpotDatafeedSubscriptionRequest
createSpotDatafeedSubscriptionRequestCodec =
    Codec.object CreateSpotDatafeedSubscriptionRequest
        |> Codec.field "Prefix" .prefix Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Bucket" .bucket Codec.string
        |> Codec.buildObject


{-| Codec for CreateSnapshotsResult. -}
createSnapshotsResultCodec : Codec CreateSnapshotsResult
createSnapshotsResultCodec =
    Codec.object CreateSnapshotsResult |> Codec.field "Snapshots" .snapshots snapshotSetCodec |> Codec.buildObject


{-| Codec for CreateSnapshotsRequest. -}
createSnapshotsRequestCodec : Codec CreateSnapshotsRequest
createSnapshotsRequestCodec =
    Codec.object CreateSnapshotsRequest
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "InstanceSpecification" .instanceSpecification instanceSpecificationCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "CopyTagsFromSource" .copyTagsFromSource copyTagsFromSourceCodec
        |> Codec.buildObject


{-| Codec for CreateSnapshotRequest. -}
createSnapshotRequestCodec : Codec CreateSnapshotRequest
createSnapshotRequestCodec =
    Codec.object CreateSnapshotRequest
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for CreateSecurityGroupResult. -}
createSecurityGroupResultCodec : Codec CreateSecurityGroupResult
createSecurityGroupResultCodec =
    Codec.object CreateSecurityGroupResult |> Codec.field "GroupId" .groupId Codec.string |> Codec.buildObject


{-| Codec for CreateSecurityGroupRequest. -}
createSecurityGroupRequestCodec : Codec CreateSecurityGroupRequest
createSecurityGroupRequestCodec =
    Codec.object CreateSecurityGroupRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for CreateRouteTableResult. -}
createRouteTableResultCodec : Codec CreateRouteTableResult
createRouteTableResultCodec =
    Codec.object CreateRouteTableResult |> Codec.field "RouteTable" .routeTable routeTableCodec |> Codec.buildObject


{-| Codec for CreateRouteTableRequest. -}
createRouteTableRequestCodec : Codec CreateRouteTableRequest
createRouteTableRequestCodec =
    Codec.object CreateRouteTableRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CreateRouteResult. -}
createRouteResultCodec : Codec CreateRouteResult
createRouteResultCodec =
    Codec.object CreateRouteResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for CreateRouteRequest. -}
createRouteRequestCodec : Codec CreateRouteRequest
createRouteRequestCodec =
    Codec.object CreateRouteRequest
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "TransitGatewayId" .transitGatewayId Codec.string
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "NatGatewayId" .natGatewayId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "GatewayId" .gatewayId Codec.string
        |> Codec.field "EgressOnlyInternetGatewayId" .egressOnlyInternetGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationIpv6CidrBlock" .destinationIpv6CidrBlock Codec.string
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for CreateReservedInstancesListingResult. -}
createReservedInstancesListingResultCodec : Codec CreateReservedInstancesListingResult
createReservedInstancesListingResultCodec =
    Codec.object CreateReservedInstancesListingResult
        |> Codec.field "ReservedInstancesListings" .reservedInstancesListings reservedInstancesListingListCodec
        |> Codec.buildObject


{-| Codec for CreateReservedInstancesListingRequest. -}
createReservedInstancesListingRequestCodec : Codec CreateReservedInstancesListingRequest
createReservedInstancesListingRequestCodec =
    Codec.object CreateReservedInstancesListingRequest
        |> Codec.field "ReservedInstancesId" .reservedInstancesId Codec.string
        |> Codec.field "PriceSchedules" .priceSchedules priceScheduleSpecificationListCodec
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreatePlacementGroupRequest. -}
createPlacementGroupRequestCodec : Codec CreatePlacementGroupRequest
createPlacementGroupRequestCodec =
    Codec.object CreatePlacementGroupRequest
        |> Codec.field "Strategy" .strategy placementStrategyCodec
        |> Codec.field "PartitionCount" .partitionCount Codec.int
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CreateNetworkInterfaceResult. -}
createNetworkInterfaceResultCodec : Codec CreateNetworkInterfaceResult
createNetworkInterfaceResultCodec =
    Codec.object CreateNetworkInterfaceResult
        |> Codec.field "NetworkInterface" .networkInterface networkInterfaceCodec
        |> Codec.buildObject


{-| Codec for CreateNetworkInterfaceRequest. -}
createNetworkInterfaceRequestCodec : Codec CreateNetworkInterfaceRequest
createNetworkInterfaceRequestCodec =
    Codec.object CreateNetworkInterfaceRequest
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "SecondaryPrivateIpAddressCount" .secondaryPrivateIpAddressCount Codec.int
        |> Codec.field "PrivateIpAddresses" .privateIpAddresses privateIpAddressSpecificationListCodec
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses instanceIpv6AddressListCodec
        |> Codec.field "Ipv6AddressCount" .ipv6AddressCount Codec.int
        |> Codec.field "InterfaceType" .interfaceType networkInterfaceCreationTypeCodec
        |> Codec.field "Groups" .groups securityGroupIdStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for CreateNetworkInterfacePermissionResult. -}
createNetworkInterfacePermissionResultCodec : Codec CreateNetworkInterfacePermissionResult
createNetworkInterfacePermissionResultCodec =
    Codec.object CreateNetworkInterfacePermissionResult
        |> Codec.field "InterfacePermission" .interfacePermission networkInterfacePermissionCodec
        |> Codec.buildObject


{-| Codec for CreateNetworkInterfacePermissionRequest. -}
createNetworkInterfacePermissionRequestCodec : Codec CreateNetworkInterfacePermissionRequest
createNetworkInterfacePermissionRequestCodec =
    Codec.object CreateNetworkInterfacePermissionRequest
        |> Codec.field "Permission" .permission interfacePermissionTypeCodec
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AwsService" .awsService Codec.string
        |> Codec.field "AwsAccountId" .awsAccountId Codec.string
        |> Codec.buildObject


{-| Codec for CreateNetworkAclResult. -}
createNetworkAclResultCodec : Codec CreateNetworkAclResult
createNetworkAclResultCodec =
    Codec.object CreateNetworkAclResult |> Codec.field "NetworkAcl" .networkAcl networkAclCodec |> Codec.buildObject


{-| Codec for CreateNetworkAclRequest. -}
createNetworkAclRequestCodec : Codec CreateNetworkAclRequest
createNetworkAclRequestCodec =
    Codec.object CreateNetworkAclRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CreateNetworkAclEntryRequest. -}
createNetworkAclEntryRequestCodec : Codec CreateNetworkAclEntryRequest
createNetworkAclEntryRequestCodec =
    Codec.object CreateNetworkAclEntryRequest
        |> Codec.field "RuleNumber" .ruleNumber Codec.int
        |> Codec.field "RuleAction" .ruleAction ruleActionCodec
        |> Codec.field "Protocol" .protocol Codec.string
        |> Codec.field "PortRange" .portRange portRangeCodec
        |> Codec.field "NetworkAclId" .networkAclId Codec.string
        |> Codec.field "Ipv6CidrBlock" .ipv6CidrBlock Codec.string
        |> Codec.field "IcmpTypeCode" .icmpTypeCode icmpTypeCodeCodec
        |> Codec.field "Egress" .egress Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for CreateNatGatewayResult. -}
createNatGatewayResultCodec : Codec CreateNatGatewayResult
createNatGatewayResultCodec =
    Codec.object CreateNatGatewayResult
        |> Codec.field "NatGateway" .natGateway natGatewayCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateNatGatewayRequest. -}
createNatGatewayRequestCodec : Codec CreateNatGatewayRequest
createNatGatewayRequestCodec =
    Codec.object CreateNatGatewayRequest
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "AllocationId" .allocationId Codec.string
        |> Codec.buildObject


{-| Codec for CreateLaunchTemplateVersionResult. -}
createLaunchTemplateVersionResultCodec : Codec CreateLaunchTemplateVersionResult
createLaunchTemplateVersionResultCodec =
    Codec.object CreateLaunchTemplateVersionResult
        |> Codec.field "LaunchTemplateVersion" .launchTemplateVersion launchTemplateVersionCodec
        |> Codec.buildObject


{-| Codec for CreateLaunchTemplateVersionRequest. -}
createLaunchTemplateVersionRequestCodec : Codec CreateLaunchTemplateVersionRequest
createLaunchTemplateVersionRequestCodec =
    Codec.object CreateLaunchTemplateVersionRequest
        |> Codec.field "VersionDescription" .versionDescription versionDescriptionCodec
        |> Codec.field "SourceVersion" .sourceVersion Codec.string
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateId" .launchTemplateId Codec.string
        |> Codec.field "LaunchTemplateData" .launchTemplateData requestLaunchTemplateDataCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateLaunchTemplateResult. -}
createLaunchTemplateResultCodec : Codec CreateLaunchTemplateResult
createLaunchTemplateResultCodec =
    Codec.object CreateLaunchTemplateResult
        |> Codec.field "LaunchTemplate" .launchTemplate launchTemplateCodec
        |> Codec.buildObject


{-| Codec for CreateLaunchTemplateRequest. -}
createLaunchTemplateRequestCodec : Codec CreateLaunchTemplateRequest
createLaunchTemplateRequestCodec =
    Codec.object CreateLaunchTemplateRequest
        |> Codec.field "VersionDescription" .versionDescription versionDescriptionCodec
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "LaunchTemplateName" .launchTemplateName launchTemplateNameCodec
        |> Codec.field "LaunchTemplateData" .launchTemplateData requestLaunchTemplateDataCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateKeyPairRequest. -}
createKeyPairRequestCodec : Codec CreateKeyPairRequest
createKeyPairRequestCodec =
    Codec.object CreateKeyPairRequest
        |> Codec.field "KeyName" .keyName Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CreateInternetGatewayResult. -}
createInternetGatewayResultCodec : Codec CreateInternetGatewayResult
createInternetGatewayResultCodec =
    Codec.object CreateInternetGatewayResult
        |> Codec.field "InternetGateway" .internetGateway internetGatewayCodec
        |> Codec.buildObject


{-| Codec for CreateInternetGatewayRequest. -}
createInternetGatewayRequestCodec : Codec CreateInternetGatewayRequest
createInternetGatewayRequestCodec =
    Codec.object CreateInternetGatewayRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for CreateInstanceExportTaskResult. -}
createInstanceExportTaskResultCodec : Codec CreateInstanceExportTaskResult
createInstanceExportTaskResultCodec =
    Codec.object CreateInstanceExportTaskResult
        |> Codec.field "ExportTask" .exportTask exportTaskCodec
        |> Codec.buildObject


{-| Codec for CreateInstanceExportTaskRequest. -}
createInstanceExportTaskRequestCodec : Codec CreateInstanceExportTaskRequest
createInstanceExportTaskRequestCodec =
    Codec.object CreateInstanceExportTaskRequest
        |> Codec.field "TargetEnvironment" .targetEnvironment exportEnvironmentCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "ExportToS3Task" .exportToS3Task exportToS3TaskSpecificationCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for CreateImageResult. -}
createImageResultCodec : Codec CreateImageResult
createImageResultCodec =
    Codec.object CreateImageResult |> Codec.field "ImageId" .imageId Codec.string |> Codec.buildObject


{-| Codec for CreateImageRequest. -}
createImageRequestCodec : Codec CreateImageRequest
createImageRequestCodec =
    Codec.object CreateImageRequest
        |> Codec.field "NoReboot" .noReboot Codec.bool
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "BlockDeviceMappings" .blockDeviceMappings blockDeviceMappingRequestListCodec
        |> Codec.buildObject


{-| Codec for CreateFpgaImageResult. -}
createFpgaImageResultCodec : Codec CreateFpgaImageResult
createFpgaImageResultCodec =
    Codec.object CreateFpgaImageResult
        |> Codec.field "FpgaImageId" .fpgaImageId Codec.string
        |> Codec.field "FpgaImageGlobalId" .fpgaImageGlobalId Codec.string
        |> Codec.buildObject


{-| Codec for CreateFpgaImageRequest. -}
createFpgaImageRequestCodec : Codec CreateFpgaImageRequest
createFpgaImageRequestCodec =
    Codec.object CreateFpgaImageRequest
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "LogsStorageLocation" .logsStorageLocation storageLocationCodec
        |> Codec.field "InputStorageLocation" .inputStorageLocation storageLocationCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateFlowLogsResult. -}
createFlowLogsResultCodec : Codec CreateFlowLogsResult
createFlowLogsResultCodec =
    Codec.object CreateFlowLogsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemSetCodec
        |> Codec.field "FlowLogIds" .flowLogIds valueStringListCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateFlowLogsRequest. -}
createFlowLogsRequestCodec : Codec CreateFlowLogsRequest
createFlowLogsRequestCodec =
    Codec.object CreateFlowLogsRequest
        |> Codec.field "TrafficType" .trafficType trafficTypeCodec
        |> Codec.field "ResourceType" .resourceType flowLogsResourceTypeCodec
        |> Codec.field "ResourceIds" .resourceIds valueStringListCodec
        |> Codec.field "LogGroupName" .logGroupName Codec.string
        |> Codec.field "LogDestinationType" .logDestinationType logDestinationTypeCodec
        |> Codec.field "LogDestination" .logDestination Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DeliverLogsPermissionArn" .deliverLogsPermissionArn Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateFleetResult. -}
createFleetResultCodec : Codec CreateFleetResult
createFleetResultCodec =
    Codec.object CreateFleetResult
        |> Codec.field "Instances" .instances createFleetInstancesSetCodec
        |> Codec.field "FleetId" .fleetId Codec.string
        |> Codec.field "Errors" .errors createFleetErrorsSetCodec
        |> Codec.buildObject


{-| Codec for CreateFleetRequest. -}
createFleetRequestCodec : Codec CreateFleetRequest
createFleetRequestCodec =
    Codec.object CreateFleetRequest
        |> Codec.field "ValidUntil" .validUntil dateTimeCodec
        |> Codec.field "ValidFrom" .validFrom dateTimeCodec
        |> Codec.field "Type" .type_ fleetTypeCodec
        |> Codec.field "TerminateInstancesWithExpiration" .terminateInstancesWithExpiration Codec.bool
        |> Codec.field
            "TargetCapacitySpecification"
            .targetCapacitySpecification
            targetCapacitySpecificationRequestCodec
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "SpotOptions" .spotOptions spotOptionsRequestCodec
        |> Codec.field "ReplaceUnhealthyInstances" .replaceUnhealthyInstances Codec.bool
        |> Codec.field "OnDemandOptions" .onDemandOptions onDemandOptionsRequestCodec
        |> Codec.field "LaunchTemplateConfigs" .launchTemplateConfigs fleetLaunchTemplateConfigListRequestCodec
        |> Codec.field
            "ExcessCapacityTerminationPolicy"
            .excessCapacityTerminationPolicy
            fleetExcessCapacityTerminationPolicyCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateFleetInstancesSet. -}
createFleetInstancesSetCodec : Codec CreateFleetInstancesSet
createFleetInstancesSetCodec =
    Codec.list createFleetInstanceCodec


{-| Codec for CreateFleetInstance. -}
createFleetInstanceCodec : Codec CreateFleetInstance
createFleetInstanceCodec =
    Codec.object CreateFleetInstance
        |> Codec.field "Platform" .platform platformValuesCodec
        |> Codec.field "Lifecycle" .lifecycle instanceLifecycleCodec
        |> Codec.field "LaunchTemplateAndOverrides" .launchTemplateAndOverrides launchTemplateAndOverridesResponseCodec
        |> Codec.field "InstanceType" .instanceType instanceTypeCodec
        |> Codec.field "InstanceIds" .instanceIds instanceIdsSetCodec
        |> Codec.buildObject


{-| Codec for CreateFleetErrorsSet. -}
createFleetErrorsSetCodec : Codec CreateFleetErrorsSet
createFleetErrorsSetCodec =
    Codec.list createFleetErrorCodec


{-| Codec for CreateFleetError. -}
createFleetErrorCodec : Codec CreateFleetError
createFleetErrorCodec =
    Codec.object CreateFleetError
        |> Codec.field "Lifecycle" .lifecycle instanceLifecycleCodec
        |> Codec.field "LaunchTemplateAndOverrides" .launchTemplateAndOverrides launchTemplateAndOverridesResponseCodec
        |> Codec.field "ErrorMessage" .errorMessage Codec.string
        |> Codec.field "ErrorCode" .errorCode Codec.string
        |> Codec.buildObject


{-| Codec for CreateEgressOnlyInternetGatewayResult. -}
createEgressOnlyInternetGatewayResultCodec : Codec CreateEgressOnlyInternetGatewayResult
createEgressOnlyInternetGatewayResultCodec =
    Codec.object CreateEgressOnlyInternetGatewayResult
        |> Codec.field "EgressOnlyInternetGateway" .egressOnlyInternetGateway egressOnlyInternetGatewayCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateEgressOnlyInternetGatewayRequest. -}
createEgressOnlyInternetGatewayRequestCodec : Codec CreateEgressOnlyInternetGatewayRequest
createEgressOnlyInternetGatewayRequestCodec =
    Codec.object CreateEgressOnlyInternetGatewayRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateDhcpOptionsResult. -}
createDhcpOptionsResultCodec : Codec CreateDhcpOptionsResult
createDhcpOptionsResultCodec =
    Codec.object CreateDhcpOptionsResult |> Codec.field "DhcpOptions" .dhcpOptions dhcpOptionsCodec |> Codec.buildObject


{-| Codec for CreateDhcpOptionsRequest. -}
createDhcpOptionsRequestCodec : Codec CreateDhcpOptionsRequest
createDhcpOptionsRequestCodec =
    Codec.object CreateDhcpOptionsRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DhcpConfigurations" .dhcpConfigurations newDhcpConfigurationListCodec
        |> Codec.buildObject


{-| Codec for CreateDefaultVpcResult. -}
createDefaultVpcResultCodec : Codec CreateDefaultVpcResult
createDefaultVpcResultCodec =
    Codec.object CreateDefaultVpcResult |> Codec.field "Vpc" .vpc vpcCodec |> Codec.buildObject


{-| Codec for CreateDefaultVpcRequest. -}
createDefaultVpcRequestCodec : Codec CreateDefaultVpcRequest
createDefaultVpcRequestCodec =
    Codec.object CreateDefaultVpcRequest |> Codec.field "DryRun" .dryRun Codec.bool |> Codec.buildObject


{-| Codec for CreateDefaultSubnetResult. -}
createDefaultSubnetResultCodec : Codec CreateDefaultSubnetResult
createDefaultSubnetResultCodec =
    Codec.object CreateDefaultSubnetResult |> Codec.field "Subnet" .subnet subnetCodec |> Codec.buildObject


{-| Codec for CreateDefaultSubnetRequest. -}
createDefaultSubnetRequestCodec : Codec CreateDefaultSubnetRequest
createDefaultSubnetRequestCodec =
    Codec.object CreateDefaultSubnetRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for CreateCustomerGatewayResult. -}
createCustomerGatewayResultCodec : Codec CreateCustomerGatewayResult
createCustomerGatewayResultCodec =
    Codec.object CreateCustomerGatewayResult
        |> Codec.field "CustomerGateway" .customerGateway customerGatewayCodec
        |> Codec.buildObject


{-| Codec for CreateCustomerGatewayRequest. -}
createCustomerGatewayRequestCodec : Codec CreateCustomerGatewayRequest
createCustomerGatewayRequestCodec =
    Codec.object CreateCustomerGatewayRequest
        |> Codec.field "Type" .type_ gatewayTypeCodec
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "BgpAsn" .bgpAsn Codec.int
        |> Codec.buildObject


{-| Codec for CreateClientVpnRouteResult. -}
createClientVpnRouteResultCodec : Codec CreateClientVpnRouteResult
createClientVpnRouteResultCodec =
    Codec.object CreateClientVpnRouteResult
        |> Codec.field "Status" .status clientVpnRouteStatusCodec
        |> Codec.buildObject


{-| Codec for CreateClientVpnRouteRequest. -}
createClientVpnRouteRequestCodec : Codec CreateClientVpnRouteRequest
createClientVpnRouteRequestCodec =
    Codec.object CreateClientVpnRouteRequest
        |> Codec.field "TargetVpcSubnetId" .targetVpcSubnetId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationCidrBlock" .destinationCidrBlock Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CreateClientVpnEndpointResult. -}
createClientVpnEndpointResultCodec : Codec CreateClientVpnEndpointResult
createClientVpnEndpointResultCodec =
    Codec.object CreateClientVpnEndpointResult
        |> Codec.field "Status" .status clientVpnEndpointStatusCodec
        |> Codec.field "DnsName" .dnsName Codec.string
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for CreateClientVpnEndpointRequest. -}
createClientVpnEndpointRequestCodec : Codec CreateClientVpnEndpointRequest
createClientVpnEndpointRequestCodec =
    Codec.object CreateClientVpnEndpointRequest
        |> Codec.field "TransportProtocol" .transportProtocol transportProtocolCodec
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "SplitTunnel" .splitTunnel Codec.bool
        |> Codec.field "ServerCertificateArn" .serverCertificateArn Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DnsServers" .dnsServers valueStringListCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ConnectionLogOptions" .connectionLogOptions connectionLogOptionsCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "ClientCidrBlock" .clientCidrBlock Codec.string
        |> Codec.field "AuthenticationOptions" .authenticationOptions clientVpnAuthenticationRequestListCodec
        |> Codec.buildObject


{-| Codec for CreateCapacityReservationResult. -}
createCapacityReservationResultCodec : Codec CreateCapacityReservationResult
createCapacityReservationResultCodec =
    Codec.object CreateCapacityReservationResult
        |> Codec.field "CapacityReservation" .capacityReservation capacityReservationCodec
        |> Codec.buildObject


{-| Codec for CreateCapacityReservationRequest. -}
createCapacityReservationRequestCodec : Codec CreateCapacityReservationRequest
createCapacityReservationRequestCodec =
    Codec.object CreateCapacityReservationRequest
        |> Codec.field "Tenancy" .tenancy capacityReservationTenancyCodec
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "InstancePlatform" .instancePlatform capacityReservationInstancePlatformCodec
        |> Codec.field "InstanceMatchCriteria" .instanceMatchCriteria instanceMatchCriteriaCodec
        |> Codec.field "InstanceCount" .instanceCount Codec.int
        |> Codec.field "EphemeralStorage" .ephemeralStorage Codec.bool
        |> Codec.field "EndDateType" .endDateType endDateTypeCodec
        |> Codec.field "EndDate" .endDate dateTimeCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "AvailabilityZoneId" .availabilityZoneId Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for CpuOptionsRequest. -}
cpuOptionsRequestCodec : Codec CpuOptionsRequest
cpuOptionsRequestCodec =
    Codec.object CpuOptionsRequest
        |> Codec.field "ThreadsPerCore" .threadsPerCore Codec.int
        |> Codec.field "CoreCount" .coreCount Codec.int
        |> Codec.buildObject


{-| Codec for CpuOptions. -}
cpuOptionsCodec : Codec CpuOptions
cpuOptionsCodec =
    Codec.object CpuOptions
        |> Codec.field "ThreadsPerCore" .threadsPerCore Codec.int
        |> Codec.field "CoreCount" .coreCount Codec.int
        |> Codec.buildObject


{-| Codec for CopyTagsFromSource. -}
copyTagsFromSourceCodec : Codec CopyTagsFromSource
copyTagsFromSourceCodec =
    Codec.build (Enum.encoder copyTagsFromSource) (Enum.decoder copyTagsFromSource)


{-| Codec for CopySnapshotResult. -}
copySnapshotResultCodec : Codec CopySnapshotResult
copySnapshotResultCodec =
    Codec.object CopySnapshotResult |> Codec.field "SnapshotId" .snapshotId Codec.string |> Codec.buildObject


{-| Codec for CopySnapshotRequest. -}
copySnapshotRequestCodec : Codec CopySnapshotRequest
copySnapshotRequestCodec =
    Codec.object CopySnapshotRequest
        |> Codec.field "SourceSnapshotId" .sourceSnapshotId Codec.string
        |> Codec.field "SourceRegion" .sourceRegion Codec.string
        |> Codec.field "PresignedUrl" .presignedUrl Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DestinationRegion" .destinationRegion Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.buildObject


{-| Codec for CopyImageResult. -}
copyImageResultCodec : Codec CopyImageResult
copyImageResultCodec =
    Codec.object CopyImageResult |> Codec.field "ImageId" .imageId Codec.string |> Codec.buildObject


{-| Codec for CopyImageRequest. -}
copyImageRequestCodec : Codec CopyImageRequest
copyImageRequestCodec =
    Codec.object CopyImageRequest
        |> Codec.field "SourceRegion" .sourceRegion Codec.string
        |> Codec.field "SourceImageId" .sourceImageId Codec.string
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "KmsKeyId" .kmsKeyId Codec.string
        |> Codec.field "Encrypted" .encrypted Codec.bool
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for CopyFpgaImageResult. -}
copyFpgaImageResultCodec : Codec CopyFpgaImageResult
copyFpgaImageResultCodec =
    Codec.object CopyFpgaImageResult |> Codec.field "FpgaImageId" .fpgaImageId Codec.string |> Codec.buildObject


{-| Codec for CopyFpgaImageRequest. -}
copyFpgaImageRequestCodec : Codec CopyFpgaImageRequest
copyFpgaImageRequestCodec =
    Codec.object CopyFpgaImageRequest
        |> Codec.field "SourceRegion" .sourceRegion Codec.string
        |> Codec.field "SourceFpgaImageId" .sourceFpgaImageId Codec.string
        |> Codec.field "Name" .name Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for ConversionTaskState. -}
conversionTaskStateCodec : Codec ConversionTaskState
conversionTaskStateCodec =
    Codec.build (Enum.encoder conversionTaskState) (Enum.decoder conversionTaskState)


{-| Codec for ConversionTask. -}
conversionTaskCodec : Codec ConversionTask
conversionTaskCodec =
    Codec.object ConversionTask
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "State" .state conversionTaskStateCodec
        |> Codec.field "ImportVolume" .importVolume importVolumeTaskDetailsCodec
        |> Codec.field "ImportInstance" .importInstance importInstanceTaskDetailsCodec
        |> Codec.field "ExpirationTime" .expirationTime Codec.string
        |> Codec.field "ConversionTaskId" .conversionTaskId Codec.string
        |> Codec.buildObject


{-| Codec for ConversionIdStringList. -}
conversionIdStringListCodec : Codec ConversionIdStringList
conversionIdStringListCodec =
    Codec.list Codec.string


{-| Codec for ContainerFormat. -}
containerFormatCodec : Codec ContainerFormat
containerFormatCodec =
    Codec.build (Enum.encoder containerFormat) (Enum.decoder containerFormat)


{-| Codec for ConnectionNotificationType. -}
connectionNotificationTypeCodec : Codec ConnectionNotificationType
connectionNotificationTypeCodec =
    Codec.build (Enum.encoder connectionNotificationType) (Enum.decoder connectionNotificationType)


{-| Codec for ConnectionNotificationState. -}
connectionNotificationStateCodec : Codec ConnectionNotificationState
connectionNotificationStateCodec =
    Codec.build (Enum.encoder connectionNotificationState) (Enum.decoder connectionNotificationState)


{-| Codec for ConnectionNotificationSet. -}
connectionNotificationSetCodec : Codec ConnectionNotificationSet
connectionNotificationSetCodec =
    Codec.list connectionNotificationCodec


{-| Codec for ConnectionNotification. -}
connectionNotificationCodec : Codec ConnectionNotification
connectionNotificationCodec =
    Codec.object ConnectionNotification
        |> Codec.field "VpcEndpointId" .vpcEndpointId Codec.string
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "ConnectionNotificationType" .connectionNotificationType connectionNotificationTypeCodec
        |> Codec.field "ConnectionNotificationState" .connectionNotificationState connectionNotificationStateCodec
        |> Codec.field "ConnectionNotificationId" .connectionNotificationId Codec.string
        |> Codec.field "ConnectionNotificationArn" .connectionNotificationArn Codec.string
        |> Codec.field "ConnectionEvents" .connectionEvents valueStringListCodec
        |> Codec.buildObject


{-| Codec for ConnectionLogResponseOptions. -}
connectionLogResponseOptionsCodec : Codec ConnectionLogResponseOptions
connectionLogResponseOptionsCodec =
    Codec.object ConnectionLogResponseOptions
        |> Codec.field "Enabled" .enabled Codec.bool
        |> Codec.field "CloudwatchLogStream" .cloudwatchLogStream Codec.string
        |> Codec.field "CloudwatchLogGroup" .cloudwatchLogGroup Codec.string
        |> Codec.buildObject


{-| Codec for ConnectionLogOptions. -}
connectionLogOptionsCodec : Codec ConnectionLogOptions
connectionLogOptionsCodec =
    Codec.object ConnectionLogOptions
        |> Codec.field "Enabled" .enabled Codec.bool
        |> Codec.field "CloudwatchLogStream" .cloudwatchLogStream Codec.string
        |> Codec.field "CloudwatchLogGroup" .cloudwatchLogGroup Codec.string
        |> Codec.buildObject


{-| Codec for ConfirmProductInstanceResult. -}
confirmProductInstanceResultCodec : Codec ConfirmProductInstanceResult
confirmProductInstanceResultCodec =
    Codec.object ConfirmProductInstanceResult
        |> Codec.field "Return" .return Codec.bool
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.buildObject


{-| Codec for ConfirmProductInstanceRequest. -}
confirmProductInstanceRequestCodec : Codec ConfirmProductInstanceRequest
confirmProductInstanceRequestCodec =
    Codec.object ConfirmProductInstanceRequest
        |> Codec.field "ProductCode" .productCode Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for ClientVpnSecurityGroupIdSet. -}
clientVpnSecurityGroupIdSetCodec : Codec ClientVpnSecurityGroupIdSet
clientVpnSecurityGroupIdSetCodec =
    Codec.list Codec.string


{-| Codec for ClientVpnRouteStatusCode. -}
clientVpnRouteStatusCodeCodec : Codec ClientVpnRouteStatusCode
clientVpnRouteStatusCodeCodec =
    Codec.build (Enum.encoder clientVpnRouteStatusCode) (Enum.decoder clientVpnRouteStatusCode)


{-| Codec for ClientVpnRouteStatus. -}
clientVpnRouteStatusCodec : Codec ClientVpnRouteStatus
clientVpnRouteStatusCodec =
    Codec.object ClientVpnRouteStatus
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code clientVpnRouteStatusCodeCodec
        |> Codec.buildObject


{-| Codec for ClientVpnRouteSet. -}
clientVpnRouteSetCodec : Codec ClientVpnRouteSet
clientVpnRouteSetCodec =
    Codec.list clientVpnRouteCodec


{-| Codec for ClientVpnRoute. -}
clientVpnRouteCodec : Codec ClientVpnRoute
clientVpnRouteCodec =
    Codec.object ClientVpnRoute
        |> Codec.field "Type" .type_ Codec.string
        |> Codec.field "TargetSubnet" .targetSubnet Codec.string
        |> Codec.field "Status" .status clientVpnRouteStatusCodec
        |> Codec.field "Origin" .origin Codec.string
        |> Codec.field "DestinationCidr" .destinationCidr Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for ClientVpnEndpointStatusCode. -}
clientVpnEndpointStatusCodeCodec : Codec ClientVpnEndpointStatusCode
clientVpnEndpointStatusCodeCodec =
    Codec.build (Enum.encoder clientVpnEndpointStatusCode) (Enum.decoder clientVpnEndpointStatusCode)


{-| Codec for ClientVpnEndpointStatus. -}
clientVpnEndpointStatusCodec : Codec ClientVpnEndpointStatus
clientVpnEndpointStatusCodec =
    Codec.object ClientVpnEndpointStatus
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code clientVpnEndpointStatusCodeCodec
        |> Codec.buildObject


{-| Codec for ClientVpnEndpoint. -}
clientVpnEndpointCodec : Codec ClientVpnEndpoint
clientVpnEndpointCodec =
    Codec.object ClientVpnEndpoint
        |> Codec.field "VpnProtocol" .vpnProtocol vpnProtocolCodec
        |> Codec.field "TransportProtocol" .transportProtocol transportProtocolCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "Status" .status clientVpnEndpointStatusCodec
        |> Codec.field "SplitTunnel" .splitTunnel Codec.bool
        |> Codec.field "ServerCertificateArn" .serverCertificateArn Codec.string
        |> Codec.field "DnsServers" .dnsServers valueStringListCodec
        |> Codec.field "DnsName" .dnsName Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "DeletionTime" .deletionTime Codec.string
        |> Codec.field "CreationTime" .creationTime Codec.string
        |> Codec.field "ConnectionLogOptions" .connectionLogOptions connectionLogResponseOptionsCodec
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "ClientCidrBlock" .clientCidrBlock Codec.string
        |> Codec.field "AuthenticationOptions" .authenticationOptions clientVpnAuthenticationListCodec
        |> Codec.field "AssociatedTargetNetworks" .associatedTargetNetworks associatedTargetNetworkSetCodec
        |> Codec.buildObject


{-| Codec for ClientVpnConnectionStatusCode. -}
clientVpnConnectionStatusCodeCodec : Codec ClientVpnConnectionStatusCode
clientVpnConnectionStatusCodeCodec =
    Codec.build (Enum.encoder clientVpnConnectionStatusCode) (Enum.decoder clientVpnConnectionStatusCode)


{-| Codec for ClientVpnConnectionStatus. -}
clientVpnConnectionStatusCodec : Codec ClientVpnConnectionStatus
clientVpnConnectionStatusCodec =
    Codec.object ClientVpnConnectionStatus
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code clientVpnConnectionStatusCodeCodec
        |> Codec.buildObject


{-| Codec for ClientVpnConnectionSet. -}
clientVpnConnectionSetCodec : Codec ClientVpnConnectionSet
clientVpnConnectionSetCodec =
    Codec.list clientVpnConnectionCodec


{-| Codec for ClientVpnConnection. -}
clientVpnConnectionCodec : Codec ClientVpnConnection
clientVpnConnectionCodec =
    Codec.object ClientVpnConnection
        |> Codec.field "Username" .username Codec.string
        |> Codec.field "Timestamp" .timestamp Codec.string
        |> Codec.field "Status" .status clientVpnConnectionStatusCodec
        |> Codec.field "IngressPackets" .ingressPackets Codec.string
        |> Codec.field "IngressBytes" .ingressBytes Codec.string
        |> Codec.field "EgressPackets" .egressPackets Codec.string
        |> Codec.field "EgressBytes" .egressBytes Codec.string
        |> Codec.field "ConnectionId" .connectionId Codec.string
        |> Codec.field "ConnectionEstablishedTime" .connectionEstablishedTime Codec.string
        |> Codec.field "ConnectionEndTime" .connectionEndTime Codec.string
        |> Codec.field "CommonName" .commonName Codec.string
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "ClientIp" .clientIp Codec.string
        |> Codec.buildObject


{-| Codec for ClientVpnAuthorizationRuleStatusCode. -}
clientVpnAuthorizationRuleStatusCodeCodec : Codec ClientVpnAuthorizationRuleStatusCode
clientVpnAuthorizationRuleStatusCodeCodec =
    Codec.build (Enum.encoder clientVpnAuthorizationRuleStatusCode) (Enum.decoder clientVpnAuthorizationRuleStatusCode)


{-| Codec for ClientVpnAuthorizationRuleStatus. -}
clientVpnAuthorizationRuleStatusCodec : Codec ClientVpnAuthorizationRuleStatus
clientVpnAuthorizationRuleStatusCodec =
    Codec.object ClientVpnAuthorizationRuleStatus
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code clientVpnAuthorizationRuleStatusCodeCodec
        |> Codec.buildObject


{-| Codec for ClientVpnAuthenticationType. -}
clientVpnAuthenticationTypeCodec : Codec ClientVpnAuthenticationType
clientVpnAuthenticationTypeCodec =
    Codec.build (Enum.encoder clientVpnAuthenticationType) (Enum.decoder clientVpnAuthenticationType)


{-| Codec for ClientVpnAuthenticationRequestList. -}
clientVpnAuthenticationRequestListCodec : Codec ClientVpnAuthenticationRequestList
clientVpnAuthenticationRequestListCodec =
    Codec.list clientVpnAuthenticationRequestCodec


{-| Codec for ClientVpnAuthenticationRequest. -}
clientVpnAuthenticationRequestCodec : Codec ClientVpnAuthenticationRequest
clientVpnAuthenticationRequestCodec =
    Codec.object ClientVpnAuthenticationRequest
        |> Codec.field "Type" .type_ clientVpnAuthenticationTypeCodec
        |> Codec.field "MutualAuthentication" .mutualAuthentication certificateAuthenticationRequestCodec
        |> Codec.field "ActiveDirectory" .activeDirectory directoryServiceAuthenticationRequestCodec
        |> Codec.buildObject


{-| Codec for ClientVpnAuthenticationList. -}
clientVpnAuthenticationListCodec : Codec ClientVpnAuthenticationList
clientVpnAuthenticationListCodec =
    Codec.list clientVpnAuthenticationCodec


{-| Codec for ClientVpnAuthentication. -}
clientVpnAuthenticationCodec : Codec ClientVpnAuthentication
clientVpnAuthenticationCodec =
    Codec.object ClientVpnAuthentication
        |> Codec.field "Type" .type_ clientVpnAuthenticationTypeCodec
        |> Codec.field "MutualAuthentication" .mutualAuthentication certificateAuthenticationCodec
        |> Codec.field "ActiveDirectory" .activeDirectory directoryServiceAuthenticationCodec
        |> Codec.buildObject


{-| Codec for ClientData. -}
clientDataCodec : Codec ClientData
clientDataCodec =
    Codec.object ClientData
        |> Codec.field "UploadStart" .uploadStart dateTimeCodec
        |> Codec.field "UploadSize" .uploadSize Codec.float
        |> Codec.field "UploadEnd" .uploadEnd dateTimeCodec
        |> Codec.field "Comment" .comment Codec.string
        |> Codec.buildObject


{-| Codec for ClientCertificateRevocationListStatusCode. -}
clientCertificateRevocationListStatusCodeCodec : Codec ClientCertificateRevocationListStatusCode
clientCertificateRevocationListStatusCodeCodec =
    Codec.build
        (Enum.encoder clientCertificateRevocationListStatusCode)
        (Enum.decoder clientCertificateRevocationListStatusCode)


{-| Codec for ClientCertificateRevocationListStatus. -}
clientCertificateRevocationListStatusCodec : Codec ClientCertificateRevocationListStatus
clientCertificateRevocationListStatusCodec =
    Codec.object ClientCertificateRevocationListStatus
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code clientCertificateRevocationListStatusCodeCodec
        |> Codec.buildObject


{-| Codec for ClassicLoadBalancersConfig. -}
classicLoadBalancersConfigCodec : Codec ClassicLoadBalancersConfig
classicLoadBalancersConfigCodec =
    Codec.object ClassicLoadBalancersConfig
        |> Codec.field "ClassicLoadBalancers" .classicLoadBalancers classicLoadBalancersCodec
        |> Codec.buildObject


{-| Codec for ClassicLoadBalancers. -}
classicLoadBalancersCodec : Codec ClassicLoadBalancers
classicLoadBalancersCodec =
    Codec.list classicLoadBalancerCodec


{-| Codec for ClassicLoadBalancer. -}
classicLoadBalancerCodec : Codec ClassicLoadBalancer
classicLoadBalancerCodec =
    Codec.object ClassicLoadBalancer |> Codec.field "Name" .name Codec.string |> Codec.buildObject


{-| Codec for ClassicLinkInstanceList. -}
classicLinkInstanceListCodec : Codec ClassicLinkInstanceList
classicLinkInstanceListCodec =
    Codec.list classicLinkInstanceCodec


{-| Codec for ClassicLinkInstance. -}
classicLinkInstanceCodec : Codec ClassicLinkInstance
classicLinkInstanceCodec =
    Codec.object ClassicLinkInstance
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Groups" .groups groupIdentifierListCodec
        |> Codec.buildObject


{-| Codec for ClassicLinkDnsSupportList. -}
classicLinkDnsSupportListCodec : Codec ClassicLinkDnsSupportList
classicLinkDnsSupportListCodec =
    Codec.list classicLinkDnsSupportCodec


{-| Codec for ClassicLinkDnsSupport. -}
classicLinkDnsSupportCodec : Codec ClassicLinkDnsSupport
classicLinkDnsSupportCodec =
    Codec.object ClassicLinkDnsSupport
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "ClassicLinkDnsSupported" .classicLinkDnsSupported Codec.bool
        |> Codec.buildObject


{-| Codec for CidrBlockSet. -}
cidrBlockSetCodec : Codec CidrBlockSet
cidrBlockSetCodec =
    Codec.list cidrBlockCodec


{-| Codec for CidrBlock. -}
cidrBlockCodec : Codec CidrBlock
cidrBlockCodec =
    Codec.object CidrBlock |> Codec.field "CidrBlock" .cidrBlock Codec.string |> Codec.buildObject


{-| Codec for CidrAuthorizationContext. -}
cidrAuthorizationContextCodec : Codec CidrAuthorizationContext
cidrAuthorizationContextCodec =
    Codec.object CidrAuthorizationContext
        |> Codec.field "Signature" .signature Codec.string
        |> Codec.field "Message" .message Codec.string
        |> Codec.buildObject


{-| Codec for CertificateAuthenticationRequest. -}
certificateAuthenticationRequestCodec : Codec CertificateAuthenticationRequest
certificateAuthenticationRequestCodec =
    Codec.object CertificateAuthenticationRequest
        |> Codec.field "ClientRootCertificateChainArn" .clientRootCertificateChainArn Codec.string
        |> Codec.buildObject


{-| Codec for CertificateAuthentication. -}
certificateAuthenticationCodec : Codec CertificateAuthentication
certificateAuthenticationCodec =
    Codec.object CertificateAuthentication
        |> Codec.field "ClientRootCertificateChain" .clientRootCertificateChain Codec.string
        |> Codec.buildObject


{-| Codec for CapacityReservationTenancy. -}
capacityReservationTenancyCodec : Codec CapacityReservationTenancy
capacityReservationTenancyCodec =
    Codec.build (Enum.encoder capacityReservationTenancy) (Enum.decoder capacityReservationTenancy)


{-| Codec for CapacityReservationTargetResponse. -}
capacityReservationTargetResponseCodec : Codec CapacityReservationTargetResponse
capacityReservationTargetResponseCodec =
    Codec.object CapacityReservationTargetResponse
        |> Codec.field "CapacityReservationId" .capacityReservationId Codec.string
        |> Codec.buildObject


{-| Codec for CapacityReservationTarget. -}
capacityReservationTargetCodec : Codec CapacityReservationTarget
capacityReservationTargetCodec =
    Codec.object CapacityReservationTarget
        |> Codec.field "CapacityReservationId" .capacityReservationId Codec.string
        |> Codec.buildObject


{-| Codec for CapacityReservationState. -}
capacityReservationStateCodec : Codec CapacityReservationState
capacityReservationStateCodec =
    Codec.build (Enum.encoder capacityReservationState) (Enum.decoder capacityReservationState)


{-| Codec for CapacityReservationSpecificationResponse. -}
capacityReservationSpecificationResponseCodec : Codec CapacityReservationSpecificationResponse
capacityReservationSpecificationResponseCodec =
    Codec.object CapacityReservationSpecificationResponse
        |> Codec.field "CapacityReservationTarget" .capacityReservationTarget capacityReservationTargetResponseCodec
        |> Codec.field "CapacityReservationPreference" .capacityReservationPreference capacityReservationPreferenceCodec
        |> Codec.buildObject


{-| Codec for CapacityReservationSpecification. -}
capacityReservationSpecificationCodec : Codec CapacityReservationSpecification
capacityReservationSpecificationCodec =
    Codec.object CapacityReservationSpecification
        |> Codec.field "CapacityReservationTarget" .capacityReservationTarget capacityReservationTargetCodec
        |> Codec.field "CapacityReservationPreference" .capacityReservationPreference capacityReservationPreferenceCodec
        |> Codec.buildObject


{-| Codec for CapacityReservationSet. -}
capacityReservationSetCodec : Codec CapacityReservationSet
capacityReservationSetCodec =
    Codec.list capacityReservationCodec


{-| Codec for CapacityReservationPreference. -}
capacityReservationPreferenceCodec : Codec CapacityReservationPreference
capacityReservationPreferenceCodec =
    Codec.build (Enum.encoder capacityReservationPreference) (Enum.decoder capacityReservationPreference)


{-| Codec for CapacityReservationInstancePlatform. -}
capacityReservationInstancePlatformCodec : Codec CapacityReservationInstancePlatform
capacityReservationInstancePlatformCodec =
    Codec.build (Enum.encoder capacityReservationInstancePlatform) (Enum.decoder capacityReservationInstancePlatform)


{-| Codec for CapacityReservationIdSet. -}
capacityReservationIdSetCodec : Codec CapacityReservationIdSet
capacityReservationIdSetCodec =
    Codec.list Codec.string


{-| Codec for CapacityReservation. -}
capacityReservationCodec : Codec CapacityReservation
capacityReservationCodec =
    Codec.object CapacityReservation
        |> Codec.field "TotalInstanceCount" .totalInstanceCount Codec.int
        |> Codec.field "Tenancy" .tenancy capacityReservationTenancyCodec
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "State" .state capacityReservationStateCodec
        |> Codec.field "OwnerId" .ownerId Codec.string
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "InstancePlatform" .instancePlatform capacityReservationInstancePlatformCodec
        |> Codec.field "InstanceMatchCriteria" .instanceMatchCriteria instanceMatchCriteriaCodec
        |> Codec.field "EphemeralStorage" .ephemeralStorage Codec.bool
        |> Codec.field "EndDateType" .endDateType endDateTypeCodec
        |> Codec.field "EndDate" .endDate dateTimeCodec
        |> Codec.field "EbsOptimized" .ebsOptimized Codec.bool
        |> Codec.field "CreateDate" .createDate dateTimeCodec
        |> Codec.field "CapacityReservationId" .capacityReservationId Codec.string
        |> Codec.field "CapacityReservationArn" .capacityReservationArn Codec.string
        |> Codec.field "AvailableInstanceCount" .availableInstanceCount Codec.int
        |> Codec.field "AvailabilityZoneId" .availabilityZoneId Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.buildObject


{-| Codec for CancelledSpotInstanceRequestList. -}
cancelledSpotInstanceRequestListCodec : Codec CancelledSpotInstanceRequestList
cancelledSpotInstanceRequestListCodec =
    Codec.list cancelledSpotInstanceRequestCodec


{-| Codec for CancelledSpotInstanceRequest. -}
cancelledSpotInstanceRequestCodec : Codec CancelledSpotInstanceRequest
cancelledSpotInstanceRequestCodec =
    Codec.object CancelledSpotInstanceRequest
        |> Codec.field "State" .state cancelSpotInstanceRequestStateCodec
        |> Codec.field "SpotInstanceRequestId" .spotInstanceRequestId Codec.string
        |> Codec.buildObject


{-| Codec for CancelSpotInstanceRequestsResult. -}
cancelSpotInstanceRequestsResultCodec : Codec CancelSpotInstanceRequestsResult
cancelSpotInstanceRequestsResultCodec =
    Codec.object CancelSpotInstanceRequestsResult
        |> Codec.field
            "CancelledSpotInstanceRequests"
            .cancelledSpotInstanceRequests
            cancelledSpotInstanceRequestListCodec
        |> Codec.buildObject


{-| Codec for CancelSpotInstanceRequestsRequest. -}
cancelSpotInstanceRequestsRequestCodec : Codec CancelSpotInstanceRequestsRequest
cancelSpotInstanceRequestsRequestCodec =
    Codec.object CancelSpotInstanceRequestsRequest
        |> Codec.field "SpotInstanceRequestIds" .spotInstanceRequestIds spotInstanceRequestIdListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CancelSpotInstanceRequestState. -}
cancelSpotInstanceRequestStateCodec : Codec CancelSpotInstanceRequestState
cancelSpotInstanceRequestStateCodec =
    Codec.build (Enum.encoder cancelSpotInstanceRequestState) (Enum.decoder cancelSpotInstanceRequestState)


{-| Codec for CancelSpotFleetRequestsSuccessSet. -}
cancelSpotFleetRequestsSuccessSetCodec : Codec CancelSpotFleetRequestsSuccessSet
cancelSpotFleetRequestsSuccessSetCodec =
    Codec.list cancelSpotFleetRequestsSuccessItemCodec


{-| Codec for CancelSpotFleetRequestsSuccessItem. -}
cancelSpotFleetRequestsSuccessItemCodec : Codec CancelSpotFleetRequestsSuccessItem
cancelSpotFleetRequestsSuccessItemCodec =
    Codec.object CancelSpotFleetRequestsSuccessItem
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.field "PreviousSpotFleetRequestState" .previousSpotFleetRequestState batchStateCodec
        |> Codec.field "CurrentSpotFleetRequestState" .currentSpotFleetRequestState batchStateCodec
        |> Codec.buildObject


{-| Codec for CancelSpotFleetRequestsResponse. -}
cancelSpotFleetRequestsResponseCodec : Codec CancelSpotFleetRequestsResponse
cancelSpotFleetRequestsResponseCodec =
    Codec.object CancelSpotFleetRequestsResponse
        |> Codec.field "UnsuccessfulFleetRequests" .unsuccessfulFleetRequests cancelSpotFleetRequestsErrorSetCodec
        |> Codec.field "SuccessfulFleetRequests" .successfulFleetRequests cancelSpotFleetRequestsSuccessSetCodec
        |> Codec.buildObject


{-| Codec for CancelSpotFleetRequestsRequest. -}
cancelSpotFleetRequestsRequestCodec : Codec CancelSpotFleetRequestsRequest
cancelSpotFleetRequestsRequestCodec =
    Codec.object CancelSpotFleetRequestsRequest
        |> Codec.field "TerminateInstances" .terminateInstances Codec.bool
        |> Codec.field "SpotFleetRequestIds" .spotFleetRequestIds valueStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for CancelSpotFleetRequestsErrorSet. -}
cancelSpotFleetRequestsErrorSetCodec : Codec CancelSpotFleetRequestsErrorSet
cancelSpotFleetRequestsErrorSetCodec =
    Codec.list cancelSpotFleetRequestsErrorItemCodec


{-| Codec for CancelSpotFleetRequestsErrorItem. -}
cancelSpotFleetRequestsErrorItemCodec : Codec CancelSpotFleetRequestsErrorItem
cancelSpotFleetRequestsErrorItemCodec =
    Codec.object CancelSpotFleetRequestsErrorItem
        |> Codec.field "SpotFleetRequestId" .spotFleetRequestId Codec.string
        |> Codec.field "Error" .error cancelSpotFleetRequestsErrorCodec
        |> Codec.buildObject


{-| Codec for CancelSpotFleetRequestsError. -}
cancelSpotFleetRequestsErrorCodec : Codec CancelSpotFleetRequestsError
cancelSpotFleetRequestsErrorCodec =
    Codec.object CancelSpotFleetRequestsError
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code cancelBatchErrorCodeCodec
        |> Codec.buildObject


{-| Codec for CancelReservedInstancesListingResult. -}
cancelReservedInstancesListingResultCodec : Codec CancelReservedInstancesListingResult
cancelReservedInstancesListingResultCodec =
    Codec.object CancelReservedInstancesListingResult
        |> Codec.field "ReservedInstancesListings" .reservedInstancesListings reservedInstancesListingListCodec
        |> Codec.buildObject


{-| Codec for CancelReservedInstancesListingRequest. -}
cancelReservedInstancesListingRequestCodec : Codec CancelReservedInstancesListingRequest
cancelReservedInstancesListingRequestCodec =
    Codec.object CancelReservedInstancesListingRequest
        |> Codec.field "ReservedInstancesListingId" .reservedInstancesListingId Codec.string
        |> Codec.buildObject


{-| Codec for CancelImportTaskResult. -}
cancelImportTaskResultCodec : Codec CancelImportTaskResult
cancelImportTaskResultCodec =
    Codec.object CancelImportTaskResult
        |> Codec.field "State" .state Codec.string
        |> Codec.field "PreviousState" .previousState Codec.string
        |> Codec.field "ImportTaskId" .importTaskId Codec.string
        |> Codec.buildObject


{-| Codec for CancelImportTaskRequest. -}
cancelImportTaskRequestCodec : Codec CancelImportTaskRequest
cancelImportTaskRequestCodec =
    Codec.object CancelImportTaskRequest
        |> Codec.field "ImportTaskId" .importTaskId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CancelReason" .cancelReason Codec.string
        |> Codec.buildObject


{-| Codec for CancelExportTaskRequest. -}
cancelExportTaskRequestCodec : Codec CancelExportTaskRequest
cancelExportTaskRequestCodec =
    Codec.object CancelExportTaskRequest |> Codec.field "ExportTaskId" .exportTaskId Codec.string |> Codec.buildObject


{-| Codec for CancelConversionRequest. -}
cancelConversionRequestCodec : Codec CancelConversionRequest
cancelConversionRequestCodec =
    Codec.object CancelConversionRequest
        |> Codec.field "ReasonMessage" .reasonMessage Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ConversionTaskId" .conversionTaskId Codec.string
        |> Codec.buildObject


{-| Codec for CancelCapacityReservationResult. -}
cancelCapacityReservationResultCodec : Codec CancelCapacityReservationResult
cancelCapacityReservationResultCodec =
    Codec.object CancelCapacityReservationResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for CancelCapacityReservationRequest. -}
cancelCapacityReservationRequestCodec : Codec CancelCapacityReservationRequest
cancelCapacityReservationRequestCodec =
    Codec.object CancelCapacityReservationRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CapacityReservationId" .capacityReservationId Codec.string
        |> Codec.buildObject


{-| Codec for CancelBundleTaskResult. -}
cancelBundleTaskResultCodec : Codec CancelBundleTaskResult
cancelBundleTaskResultCodec =
    Codec.object CancelBundleTaskResult |> Codec.field "BundleTask" .bundleTask bundleTaskCodec |> Codec.buildObject


{-| Codec for CancelBundleTaskRequest. -}
cancelBundleTaskRequestCodec : Codec CancelBundleTaskRequest
cancelBundleTaskRequestCodec =
    Codec.object CancelBundleTaskRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "BundleId" .bundleId Codec.string
        |> Codec.buildObject


{-| Codec for CancelBatchErrorCode. -}
cancelBatchErrorCodeCodec : Codec CancelBatchErrorCode
cancelBatchErrorCodeCodec =
    Codec.build (Enum.encoder cancelBatchErrorCode) (Enum.decoder cancelBatchErrorCode)


{-| Codec for ByoipCidrState. -}
byoipCidrStateCodec : Codec ByoipCidrState
byoipCidrStateCodec =
    Codec.build (Enum.encoder byoipCidrState) (Enum.decoder byoipCidrState)


{-| Codec for ByoipCidrSet. -}
byoipCidrSetCodec : Codec ByoipCidrSet
byoipCidrSetCodec =
    Codec.list byoipCidrCodec


{-| Codec for ByoipCidr. -}
byoipCidrCodec : Codec ByoipCidr
byoipCidrCodec =
    Codec.object ByoipCidr
        |> Codec.field "StatusMessage" .statusMessage Codec.string
        |> Codec.field "State" .state byoipCidrStateCodec
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "Cidr" .cidr Codec.string
        |> Codec.buildObject


{-| Codec for BundleTaskState. -}
bundleTaskStateCodec : Codec BundleTaskState
bundleTaskStateCodec =
    Codec.build (Enum.encoder bundleTaskState) (Enum.decoder bundleTaskState)


{-| Codec for BundleTaskList. -}
bundleTaskListCodec : Codec BundleTaskList
bundleTaskListCodec =
    Codec.list bundleTaskCodec


{-| Codec for BundleTaskError. -}
bundleTaskErrorCodec : Codec BundleTaskError
bundleTaskErrorCodec =
    Codec.object BundleTaskError
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code Codec.string
        |> Codec.buildObject


{-| Codec for BundleTask. -}
bundleTaskCodec : Codec BundleTask
bundleTaskCodec =
    Codec.object BundleTask
        |> Codec.field "UpdateTime" .updateTime dateTimeCodec
        |> Codec.field "Storage" .storage storageCodec
        |> Codec.field "State" .state bundleTaskStateCodec
        |> Codec.field "StartTime" .startTime dateTimeCodec
        |> Codec.field "Progress" .progress Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "BundleTaskError" .bundleTaskError bundleTaskErrorCodec
        |> Codec.field "BundleId" .bundleId Codec.string
        |> Codec.buildObject


{-| Codec for BundleInstanceResult. -}
bundleInstanceResultCodec : Codec BundleInstanceResult
bundleInstanceResultCodec =
    Codec.object BundleInstanceResult |> Codec.field "BundleTask" .bundleTask bundleTaskCodec |> Codec.buildObject


{-| Codec for BundleInstanceRequest. -}
bundleInstanceRequestCodec : Codec BundleInstanceRequest
bundleInstanceRequestCodec =
    Codec.object BundleInstanceRequest
        |> Codec.field "Storage" .storage storageCodec
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for BundleIdStringList. -}
bundleIdStringListCodec : Codec BundleIdStringList
bundleIdStringListCodec =
    Codec.list Codec.string


{-| Codec for Boolean. -}
booleanCodec : Codec Boolean
booleanCodec =
    Codec.bool


{-| Codec for BlockDeviceMappingRequestList. -}
blockDeviceMappingRequestListCodec : Codec BlockDeviceMappingRequestList
blockDeviceMappingRequestListCodec =
    Codec.list blockDeviceMappingCodec


{-| Codec for BlockDeviceMappingList. -}
blockDeviceMappingListCodec : Codec BlockDeviceMappingList
blockDeviceMappingListCodec =
    Codec.list blockDeviceMappingCodec


{-| Codec for BlockDeviceMapping. -}
blockDeviceMappingCodec : Codec BlockDeviceMapping
blockDeviceMappingCodec =
    Codec.object BlockDeviceMapping
        |> Codec.field "VirtualName" .virtualName Codec.string
        |> Codec.field "NoDevice" .noDevice Codec.string
        |> Codec.field "Ebs" .ebs ebsBlockDeviceCodec
        |> Codec.field "DeviceName" .deviceName Codec.string
        |> Codec.buildObject


{-| Codec for BlobAttributeValue. -}
blobAttributeValueCodec : Codec BlobAttributeValue
blobAttributeValueCodec =
    Codec.object BlobAttributeValue |> Codec.field "Value" .value Codec.string |> Codec.buildObject


{-| Codec for Blob. -}
blobCodec : Codec Blob
blobCodec =
    Codec.string


{-| Codec for BillingProductList. -}
billingProductListCodec : Codec BillingProductList
billingProductListCodec =
    Codec.list Codec.string


{-| Codec for BatchState. -}
batchStateCodec : Codec BatchState
batchStateCodec =
    Codec.build (Enum.encoder batchState) (Enum.decoder batchState)


{-| Codec for AvailableInstanceCapacityList. -}
availableInstanceCapacityListCodec : Codec AvailableInstanceCapacityList
availableInstanceCapacityListCodec =
    Codec.list instanceCapacityCodec


{-| Codec for AvailableCapacity. -}
availableCapacityCodec : Codec AvailableCapacity
availableCapacityCodec =
    Codec.object AvailableCapacity
        |> Codec.field "AvailableVCpus" .availableVcpus Codec.int
        |> Codec.field "AvailableInstanceCapacity" .availableInstanceCapacity availableInstanceCapacityListCodec
        |> Codec.buildObject


{-| Codec for AvailabilityZoneState. -}
availabilityZoneStateCodec : Codec AvailabilityZoneState
availabilityZoneStateCodec =
    Codec.build (Enum.encoder availabilityZoneState) (Enum.decoder availabilityZoneState)


{-| Codec for AvailabilityZoneMessageList. -}
availabilityZoneMessageListCodec : Codec AvailabilityZoneMessageList
availabilityZoneMessageListCodec =
    Codec.list availabilityZoneMessageCodec


{-| Codec for AvailabilityZoneMessage. -}
availabilityZoneMessageCodec : Codec AvailabilityZoneMessage
availabilityZoneMessageCodec =
    Codec.object AvailabilityZoneMessage |> Codec.field "Message" .message Codec.string |> Codec.buildObject


{-| Codec for AvailabilityZoneList. -}
availabilityZoneListCodec : Codec AvailabilityZoneList
availabilityZoneListCodec =
    Codec.list availabilityZoneCodec


{-| Codec for AvailabilityZone. -}
availabilityZoneCodec : Codec AvailabilityZone
availabilityZoneCodec =
    Codec.object AvailabilityZone
        |> Codec.field "ZoneName" .zoneName Codec.string
        |> Codec.field "ZoneId" .zoneId Codec.string
        |> Codec.field "State" .state availabilityZoneStateCodec
        |> Codec.field "RegionName" .regionName Codec.string
        |> Codec.field "Messages" .messages availabilityZoneMessageListCodec
        |> Codec.buildObject


{-| Codec for AutoPlacement. -}
autoPlacementCodec : Codec AutoPlacement
autoPlacementCodec =
    Codec.build (Enum.encoder autoPlacement) (Enum.decoder autoPlacement)


{-| Codec for AutoAcceptSharedAttachmentsValue. -}
autoAcceptSharedAttachmentsValueCodec : Codec AutoAcceptSharedAttachmentsValue
autoAcceptSharedAttachmentsValueCodec =
    Codec.build (Enum.encoder autoAcceptSharedAttachmentsValue) (Enum.decoder autoAcceptSharedAttachmentsValue)


{-| Codec for AuthorizeSecurityGroupIngressRequest. -}
authorizeSecurityGroupIngressRequestCodec : Codec AuthorizeSecurityGroupIngressRequest
authorizeSecurityGroupIngressRequestCodec =
    Codec.object AuthorizeSecurityGroupIngressRequest
        |> Codec.field "ToPort" .toPort Codec.int
        |> Codec.field "SourceSecurityGroupOwnerId" .sourceSecurityGroupOwnerId Codec.string
        |> Codec.field "SourceSecurityGroupName" .sourceSecurityGroupName Codec.string
        |> Codec.field "IpProtocol" .ipProtocol Codec.string
        |> Codec.field "IpPermissions" .ipPermissions ipPermissionListCodec
        |> Codec.field "GroupName" .groupName Codec.string
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "FromPort" .fromPort Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CidrIp" .cidrIp Codec.string
        |> Codec.buildObject


{-| Codec for AuthorizeSecurityGroupEgressRequest. -}
authorizeSecurityGroupEgressRequestCodec : Codec AuthorizeSecurityGroupEgressRequest
authorizeSecurityGroupEgressRequestCodec =
    Codec.object AuthorizeSecurityGroupEgressRequest
        |> Codec.field "ToPort" .toPort Codec.int
        |> Codec.field "SourceSecurityGroupOwnerId" .sourceSecurityGroupOwnerId Codec.string
        |> Codec.field "SourceSecurityGroupName" .sourceSecurityGroupName Codec.string
        |> Codec.field "IpProtocol" .ipProtocol Codec.string
        |> Codec.field "IpPermissions" .ipPermissions ipPermissionListCodec
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "FromPort" .fromPort Codec.int
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "CidrIp" .cidrIp Codec.string
        |> Codec.buildObject


{-| Codec for AuthorizeClientVpnIngressResult. -}
authorizeClientVpnIngressResultCodec : Codec AuthorizeClientVpnIngressResult
authorizeClientVpnIngressResultCodec =
    Codec.object AuthorizeClientVpnIngressResult
        |> Codec.field "Status" .status clientVpnAuthorizationRuleStatusCodec
        |> Codec.buildObject


{-| Codec for AuthorizeClientVpnIngressRequest. -}
authorizeClientVpnIngressRequestCodec : Codec AuthorizeClientVpnIngressRequest
authorizeClientVpnIngressRequestCodec =
    Codec.object AuthorizeClientVpnIngressRequest
        |> Codec.field "TargetNetworkCidr" .targetNetworkCidr Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "AuthorizeAllGroups" .authorizeAllGroups Codec.bool
        |> Codec.field "AccessGroupId" .accessGroupId Codec.string
        |> Codec.buildObject


{-| Codec for AuthorizationRuleSet. -}
authorizationRuleSetCodec : Codec AuthorizationRuleSet
authorizationRuleSetCodec =
    Codec.list authorizationRuleCodec


{-| Codec for AuthorizationRule. -}
authorizationRuleCodec : Codec AuthorizationRule
authorizationRuleCodec =
    Codec.object AuthorizationRule
        |> Codec.field "Status" .status clientVpnAuthorizationRuleStatusCodec
        |> Codec.field "GroupId" .groupId Codec.string
        |> Codec.field "DestinationCidr" .destinationCidr Codec.string
        |> Codec.field "Description" .description Codec.string
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "AccessAll" .accessAll Codec.bool
        |> Codec.buildObject


{-| Codec for AttributeValue. -}
attributeValueCodec : Codec AttributeValue
attributeValueCodec =
    Codec.object AttributeValue |> Codec.field "Value" .value Codec.string |> Codec.buildObject


{-| Codec for AttributeBooleanValue. -}
attributeBooleanValueCodec : Codec AttributeBooleanValue
attributeBooleanValueCodec =
    Codec.object AttributeBooleanValue |> Codec.field "Value" .value Codec.bool |> Codec.buildObject


{-| Codec for AttachmentStatus. -}
attachmentStatusCodec : Codec AttachmentStatus
attachmentStatusCodec =
    Codec.build (Enum.encoder attachmentStatus) (Enum.decoder attachmentStatus)


{-| Codec for AttachVpnGatewayResult. -}
attachVpnGatewayResultCodec : Codec AttachVpnGatewayResult
attachVpnGatewayResultCodec =
    Codec.object AttachVpnGatewayResult
        |> Codec.field "VpcAttachment" .vpcAttachment vpcAttachmentCodec
        |> Codec.buildObject


{-| Codec for AttachVpnGatewayRequest. -}
attachVpnGatewayRequestCodec : Codec AttachVpnGatewayRequest
attachVpnGatewayRequestCodec =
    Codec.object AttachVpnGatewayRequest
        |> Codec.field "VpnGatewayId" .vpnGatewayId Codec.string
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for AttachVolumeRequest. -}
attachVolumeRequestCodec : Codec AttachVolumeRequest
attachVolumeRequestCodec =
    Codec.object AttachVolumeRequest
        |> Codec.field "VolumeId" .volumeId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Device" .device Codec.string
        |> Codec.buildObject


{-| Codec for AttachNetworkInterfaceResult. -}
attachNetworkInterfaceResultCodec : Codec AttachNetworkInterfaceResult
attachNetworkInterfaceResultCodec =
    Codec.object AttachNetworkInterfaceResult
        |> Codec.field "AttachmentId" .attachmentId Codec.string
        |> Codec.buildObject


{-| Codec for AttachNetworkInterfaceRequest. -}
attachNetworkInterfaceRequestCodec : Codec AttachNetworkInterfaceRequest
attachNetworkInterfaceRequestCodec =
    Codec.object AttachNetworkInterfaceRequest
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DeviceIndex" .deviceIndex Codec.int
        |> Codec.buildObject


{-| Codec for AttachInternetGatewayRequest. -}
attachInternetGatewayRequestCodec : Codec AttachInternetGatewayRequest
attachInternetGatewayRequestCodec =
    Codec.object AttachInternetGatewayRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "InternetGatewayId" .internetGatewayId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for AttachClassicLinkVpcResult. -}
attachClassicLinkVpcResultCodec : Codec AttachClassicLinkVpcResult
attachClassicLinkVpcResultCodec =
    Codec.object AttachClassicLinkVpcResult |> Codec.field "Return" .return Codec.bool |> Codec.buildObject


{-| Codec for AttachClassicLinkVpcRequest. -}
attachClassicLinkVpcRequestCodec : Codec AttachClassicLinkVpcRequest
attachClassicLinkVpcRequestCodec =
    Codec.object AttachClassicLinkVpcRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Groups" .groups groupIdStringListCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for AssociationStatusCode. -}
associationStatusCodeCodec : Codec AssociationStatusCode
associationStatusCodeCodec =
    Codec.build (Enum.encoder associationStatusCode) (Enum.decoder associationStatusCode)


{-| Codec for AssociationStatus. -}
associationStatusCodec : Codec AssociationStatus
associationStatusCodec =
    Codec.object AssociationStatus
        |> Codec.field "Message" .message Codec.string
        |> Codec.field "Code" .code associationStatusCodeCodec
        |> Codec.buildObject


{-| Codec for AssociationIdList. -}
associationIdListCodec : Codec AssociationIdList
associationIdListCodec =
    Codec.list Codec.string


{-| Codec for AssociatedTargetNetworkSet. -}
associatedTargetNetworkSetCodec : Codec AssociatedTargetNetworkSet
associatedTargetNetworkSetCodec =
    Codec.list associatedTargetNetworkCodec


{-| Codec for AssociatedTargetNetwork. -}
associatedTargetNetworkCodec : Codec AssociatedTargetNetwork
associatedTargetNetworkCodec =
    Codec.object AssociatedTargetNetwork
        |> Codec.field "NetworkType" .networkType associatedNetworkTypeCodec
        |> Codec.field "NetworkId" .networkId Codec.string
        |> Codec.buildObject


{-| Codec for AssociatedNetworkType. -}
associatedNetworkTypeCodec : Codec AssociatedNetworkType
associatedNetworkTypeCodec =
    Codec.build (Enum.encoder associatedNetworkType) (Enum.decoder associatedNetworkType)


{-| Codec for AssociateVpcCidrBlockResult. -}
associateVpcCidrBlockResultCodec : Codec AssociateVpcCidrBlockResult
associateVpcCidrBlockResultCodec =
    Codec.object AssociateVpcCidrBlockResult
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "Ipv6CidrBlockAssociation" .ipv6CidrBlockAssociation vpcIpv6CidrBlockAssociationCodec
        |> Codec.field "CidrBlockAssociation" .cidrBlockAssociation vpcCidrBlockAssociationCodec
        |> Codec.buildObject


{-| Codec for AssociateVpcCidrBlockRequest. -}
associateVpcCidrBlockRequestCodec : Codec AssociateVpcCidrBlockRequest
associateVpcCidrBlockRequestCodec =
    Codec.object AssociateVpcCidrBlockRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "CidrBlock" .cidrBlock Codec.string
        |> Codec.field "AmazonProvidedIpv6CidrBlock" .amazonProvidedIpv6CidrBlock Codec.bool
        |> Codec.buildObject


{-| Codec for AssociateTransitGatewayRouteTableResult. -}
associateTransitGatewayRouteTableResultCodec : Codec AssociateTransitGatewayRouteTableResult
associateTransitGatewayRouteTableResultCodec =
    Codec.object AssociateTransitGatewayRouteTableResult
        |> Codec.field "Association" .association transitGatewayAssociationCodec
        |> Codec.buildObject


{-| Codec for AssociateTransitGatewayRouteTableRequest. -}
associateTransitGatewayRouteTableRequestCodec : Codec AssociateTransitGatewayRouteTableRequest
associateTransitGatewayRouteTableRequestCodec =
    Codec.object AssociateTransitGatewayRouteTableRequest
        |> Codec.field "TransitGatewayRouteTableId" .transitGatewayRouteTableId Codec.string
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for AssociateSubnetCidrBlockResult. -}
associateSubnetCidrBlockResultCodec : Codec AssociateSubnetCidrBlockResult
associateSubnetCidrBlockResultCodec =
    Codec.object AssociateSubnetCidrBlockResult
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "Ipv6CidrBlockAssociation" .ipv6CidrBlockAssociation subnetIpv6CidrBlockAssociationCodec
        |> Codec.buildObject


{-| Codec for AssociateSubnetCidrBlockRequest. -}
associateSubnetCidrBlockRequestCodec : Codec AssociateSubnetCidrBlockRequest
associateSubnetCidrBlockRequestCodec =
    Codec.object AssociateSubnetCidrBlockRequest
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "Ipv6CidrBlock" .ipv6CidrBlock Codec.string
        |> Codec.buildObject


{-| Codec for AssociateRouteTableResult. -}
associateRouteTableResultCodec : Codec AssociateRouteTableResult
associateRouteTableResultCodec =
    Codec.object AssociateRouteTableResult
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for AssociateRouteTableRequest. -}
associateRouteTableRequestCodec : Codec AssociateRouteTableRequest
associateRouteTableRequestCodec =
    Codec.object AssociateRouteTableRequest
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "RouteTableId" .routeTableId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for AssociateIamInstanceProfileResult. -}
associateIamInstanceProfileResultCodec : Codec AssociateIamInstanceProfileResult
associateIamInstanceProfileResultCodec =
    Codec.object AssociateIamInstanceProfileResult
        |> Codec.field "IamInstanceProfileAssociation" .iamInstanceProfileAssociation iamInstanceProfileAssociationCodec
        |> Codec.buildObject


{-| Codec for AssociateIamInstanceProfileRequest. -}
associateIamInstanceProfileRequestCodec : Codec AssociateIamInstanceProfileRequest
associateIamInstanceProfileRequestCodec =
    Codec.object AssociateIamInstanceProfileRequest
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "IamInstanceProfile" .iamInstanceProfile iamInstanceProfileSpecificationCodec
        |> Codec.buildObject


{-| Codec for AssociateDhcpOptionsRequest. -}
associateDhcpOptionsRequestCodec : Codec AssociateDhcpOptionsRequest
associateDhcpOptionsRequestCodec =
    Codec.object AssociateDhcpOptionsRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "DhcpOptionsId" .dhcpOptionsId Codec.string
        |> Codec.buildObject


{-| Codec for AssociateClientVpnTargetNetworkResult. -}
associateClientVpnTargetNetworkResultCodec : Codec AssociateClientVpnTargetNetworkResult
associateClientVpnTargetNetworkResultCodec =
    Codec.object AssociateClientVpnTargetNetworkResult
        |> Codec.field "Status" .status associationStatusCodec
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.buildObject


{-| Codec for AssociateClientVpnTargetNetworkRequest. -}
associateClientVpnTargetNetworkRequestCodec : Codec AssociateClientVpnTargetNetworkRequest
associateClientVpnTargetNetworkRequestCodec =
    Codec.object AssociateClientVpnTargetNetworkRequest
        |> Codec.field "SubnetId" .subnetId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.buildObject


{-| Codec for AssociateAddressResult. -}
associateAddressResultCodec : Codec AssociateAddressResult
associateAddressResultCodec =
    Codec.object AssociateAddressResult |> Codec.field "AssociationId" .associationId Codec.string |> Codec.buildObject


{-| Codec for AssociateAddressRequest. -}
associateAddressRequestCodec : Codec AssociateAddressRequest
associateAddressRequestCodec =
    Codec.object AssociateAddressRequest
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "AllowReassociation" .allowReassociation Codec.bool
        |> Codec.field "AllocationId" .allocationId Codec.string
        |> Codec.buildObject


{-| Codec for AssignedPrivateIpAddressList. -}
assignedPrivateIpAddressListCodec : Codec AssignedPrivateIpAddressList
assignedPrivateIpAddressListCodec =
    Codec.list assignedPrivateIpAddressCodec


{-| Codec for AssignedPrivateIpAddress. -}
assignedPrivateIpAddressCodec : Codec AssignedPrivateIpAddress
assignedPrivateIpAddressCodec =
    Codec.object AssignedPrivateIpAddress
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.buildObject


{-| Codec for AssignPrivateIpAddressesResult. -}
assignPrivateIpAddressesResultCodec : Codec AssignPrivateIpAddressesResult
assignPrivateIpAddressesResultCodec =
    Codec.object AssignPrivateIpAddressesResult
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "AssignedPrivateIpAddresses" .assignedPrivateIpAddresses assignedPrivateIpAddressListCodec
        |> Codec.buildObject


{-| Codec for AssignPrivateIpAddressesRequest. -}
assignPrivateIpAddressesRequestCodec : Codec AssignPrivateIpAddressesRequest
assignPrivateIpAddressesRequestCodec =
    Codec.object AssignPrivateIpAddressesRequest
        |> Codec.field "SecondaryPrivateIpAddressCount" .secondaryPrivateIpAddressCount Codec.int
        |> Codec.field "PrivateIpAddresses" .privateIpAddresses privateIpAddressStringListCodec
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "AllowReassignment" .allowReassignment Codec.bool
        |> Codec.buildObject


{-| Codec for AssignIpv6AddressesResult. -}
assignIpv6AddressesResultCodec : Codec AssignIpv6AddressesResult
assignIpv6AddressesResultCodec =
    Codec.object AssignIpv6AddressesResult
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "AssignedIpv6Addresses" .assignedIpv6Addresses ipv6AddressListCodec
        |> Codec.buildObject


{-| Codec for AssignIpv6AddressesRequest. -}
assignIpv6AddressesRequestCodec : Codec AssignIpv6AddressesRequest
assignIpv6AddressesRequestCodec =
    Codec.object AssignIpv6AddressesRequest
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "Ipv6Addresses" .ipv6Addresses ipv6AddressListCodec
        |> Codec.field "Ipv6AddressCount" .ipv6AddressCount Codec.int
        |> Codec.buildObject


{-| Codec for ArchitectureValues. -}
architectureValuesCodec : Codec ArchitectureValues
architectureValuesCodec =
    Codec.build (Enum.encoder architectureValues) (Enum.decoder architectureValues)


{-| Codec for ApplySecurityGroupsToClientVpnTargetNetworkResult. -}
applySecurityGroupsToClientVpnTargetNetworkResultCodec : Codec ApplySecurityGroupsToClientVpnTargetNetworkResult
applySecurityGroupsToClientVpnTargetNetworkResultCodec =
    Codec.object ApplySecurityGroupsToClientVpnTargetNetworkResult
        |> Codec.field "SecurityGroupIds" .securityGroupIds clientVpnSecurityGroupIdSetCodec
        |> Codec.buildObject


{-| Codec for ApplySecurityGroupsToClientVpnTargetNetworkRequest. -}
applySecurityGroupsToClientVpnTargetNetworkRequestCodec : Codec ApplySecurityGroupsToClientVpnTargetNetworkRequest
applySecurityGroupsToClientVpnTargetNetworkRequestCodec =
    Codec.object ApplySecurityGroupsToClientVpnTargetNetworkRequest
        |> Codec.field "VpcId" .vpcId Codec.string
        |> Codec.field "SecurityGroupIds" .securityGroupIds clientVpnSecurityGroupIdSetCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "ClientVpnEndpointId" .clientVpnEndpointId Codec.string
        |> Codec.buildObject


{-| Codec for AllowedPrincipalSet. -}
allowedPrincipalSetCodec : Codec AllowedPrincipalSet
allowedPrincipalSetCodec =
    Codec.list allowedPrincipalCodec


{-| Codec for AllowedPrincipal. -}
allowedPrincipalCodec : Codec AllowedPrincipal
allowedPrincipalCodec =
    Codec.object AllowedPrincipal
        |> Codec.field "PrincipalType" .principalType principalTypeCodec
        |> Codec.field "Principal" .principal Codec.string
        |> Codec.buildObject


{-| Codec for AllocationStrategy. -}
allocationStrategyCodec : Codec AllocationStrategy
allocationStrategyCodec =
    Codec.build (Enum.encoder allocationStrategy) (Enum.decoder allocationStrategy)


{-| Codec for AllocationState. -}
allocationStateCodec : Codec AllocationState
allocationStateCodec =
    Codec.build (Enum.encoder allocationState) (Enum.decoder allocationState)


{-| Codec for AllocationIdList. -}
allocationIdListCodec : Codec AllocationIdList
allocationIdListCodec =
    Codec.list Codec.string


{-| Codec for AllocateHostsResult. -}
allocateHostsResultCodec : Codec AllocateHostsResult
allocateHostsResultCodec =
    Codec.object AllocateHostsResult |> Codec.field "HostIds" .hostIds responseHostIdListCodec |> Codec.buildObject


{-| Codec for AllocateHostsRequest. -}
allocateHostsRequestCodec : Codec AllocateHostsRequest
allocateHostsRequestCodec =
    Codec.object AllocateHostsRequest
        |> Codec.field "TagSpecifications" .tagSpecifications tagSpecificationListCodec
        |> Codec.field "Quantity" .quantity Codec.int
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "HostRecovery" .hostRecovery hostRecoveryCodec
        |> Codec.field "ClientToken" .clientToken Codec.string
        |> Codec.field "AvailabilityZone" .availabilityZone Codec.string
        |> Codec.field "AutoPlacement" .autoPlacement autoPlacementCodec
        |> Codec.buildObject


{-| Codec for AllocateAddressResult. -}
allocateAddressResultCodec : Codec AllocateAddressResult
allocateAddressResultCodec =
    Codec.object AllocateAddressResult
        |> Codec.field "PublicIpv4Pool" .publicIpv4Pool Codec.string
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "Domain" .domain domainTypeCodec
        |> Codec.field "AllocationId" .allocationId Codec.string
        |> Codec.buildObject


{-| Codec for AllocateAddressRequest. -}
allocateAddressRequestCodec : Codec AllocateAddressRequest
allocateAddressRequestCodec =
    Codec.object AllocateAddressRequest
        |> Codec.field "PublicIpv4Pool" .publicIpv4Pool Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Domain" .domain domainTypeCodec
        |> Codec.field "Address" .address Codec.string
        |> Codec.buildObject


{-| Codec for Affinity. -}
affinityCodec : Codec Affinity
affinityCodec =
    Codec.build (Enum.encoder affinity) (Enum.decoder affinity)


{-| Codec for AdvertiseByoipCidrResult. -}
advertiseByoipCidrResultCodec : Codec AdvertiseByoipCidrResult
advertiseByoipCidrResultCodec =
    Codec.object AdvertiseByoipCidrResult |> Codec.field "ByoipCidr" .byoipCidr byoipCidrCodec |> Codec.buildObject


{-| Codec for AdvertiseByoipCidrRequest. -}
advertiseByoipCidrRequestCodec : Codec AdvertiseByoipCidrRequest
advertiseByoipCidrRequestCodec =
    Codec.object AdvertiseByoipCidrRequest
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.field "Cidr" .cidr Codec.string
        |> Codec.buildObject


{-| Codec for AddressList. -}
addressListCodec : Codec AddressList
addressListCodec =
    Codec.list addressCodec


{-| Codec for Address. -}
addressCodec : Codec Address
addressCodec =
    Codec.object Address
        |> Codec.field "Tags" .tags tagListCodec
        |> Codec.field "PublicIpv4Pool" .publicIpv4Pool Codec.string
        |> Codec.field "PublicIp" .publicIp Codec.string
        |> Codec.field "PrivateIpAddress" .privateIpAddress Codec.string
        |> Codec.field "NetworkInterfaceOwnerId" .networkInterfaceOwnerId Codec.string
        |> Codec.field "NetworkInterfaceId" .networkInterfaceId Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "Domain" .domain domainTypeCodec
        |> Codec.field "AssociationId" .associationId Codec.string
        |> Codec.field "AllocationId" .allocationId Codec.string
        |> Codec.buildObject


{-| Codec for ActivityStatus. -}
activityStatusCodec : Codec ActivityStatus
activityStatusCodec =
    Codec.build (Enum.encoder activityStatus) (Enum.decoder activityStatus)


{-| Codec for ActiveInstanceSet. -}
activeInstanceSetCodec : Codec ActiveInstanceSet
activeInstanceSetCodec =
    Codec.list activeInstanceCodec


{-| Codec for ActiveInstance. -}
activeInstanceCodec : Codec ActiveInstance
activeInstanceCodec =
    Codec.object ActiveInstance
        |> Codec.field "SpotInstanceRequestId" .spotInstanceRequestId Codec.string
        |> Codec.field "InstanceType" .instanceType Codec.string
        |> Codec.field "InstanceId" .instanceId Codec.string
        |> Codec.field "InstanceHealth" .instanceHealth instanceHealthStatusCodec
        |> Codec.buildObject


{-| Codec for AccountAttributeValueList. -}
accountAttributeValueListCodec : Codec AccountAttributeValueList
accountAttributeValueListCodec =
    Codec.list accountAttributeValueCodec


{-| Codec for AccountAttributeValue. -}
accountAttributeValueCodec : Codec AccountAttributeValue
accountAttributeValueCodec =
    Codec.object AccountAttributeValue |> Codec.field "AttributeValue" .attributeValue Codec.string |> Codec.buildObject


{-| Codec for AccountAttributeNameStringList. -}
accountAttributeNameStringListCodec : Codec AccountAttributeNameStringList
accountAttributeNameStringListCodec =
    Codec.list accountAttributeNameCodec


{-| Codec for AccountAttributeName. -}
accountAttributeNameCodec : Codec AccountAttributeName
accountAttributeNameCodec =
    Codec.build (Enum.encoder accountAttributeName) (Enum.decoder accountAttributeName)


{-| Codec for AccountAttributeList. -}
accountAttributeListCodec : Codec AccountAttributeList
accountAttributeListCodec =
    Codec.list accountAttributeCodec


{-| Codec for AccountAttribute. -}
accountAttributeCodec : Codec AccountAttribute
accountAttributeCodec =
    Codec.object AccountAttribute
        |> Codec.field "AttributeValues" .attributeValues accountAttributeValueListCodec
        |> Codec.field "AttributeName" .attributeName Codec.string
        |> Codec.buildObject


{-| Codec for AcceptVpcPeeringConnectionResult. -}
acceptVpcPeeringConnectionResultCodec : Codec AcceptVpcPeeringConnectionResult
acceptVpcPeeringConnectionResultCodec =
    Codec.object AcceptVpcPeeringConnectionResult
        |> Codec.field "VpcPeeringConnection" .vpcPeeringConnection vpcPeeringConnectionCodec
        |> Codec.buildObject


{-| Codec for AcceptVpcPeeringConnectionRequest. -}
acceptVpcPeeringConnectionRequestCodec : Codec AcceptVpcPeeringConnectionRequest
acceptVpcPeeringConnectionRequestCodec =
    Codec.object AcceptVpcPeeringConnectionRequest
        |> Codec.field "VpcPeeringConnectionId" .vpcPeeringConnectionId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for AcceptVpcEndpointConnectionsResult. -}
acceptVpcEndpointConnectionsResultCodec : Codec AcceptVpcEndpointConnectionsResult
acceptVpcEndpointConnectionsResultCodec =
    Codec.object AcceptVpcEndpointConnectionsResult
        |> Codec.field "Unsuccessful" .unsuccessful unsuccessfulItemSetCodec
        |> Codec.buildObject


{-| Codec for AcceptVpcEndpointConnectionsRequest. -}
acceptVpcEndpointConnectionsRequestCodec : Codec AcceptVpcEndpointConnectionsRequest
acceptVpcEndpointConnectionsRequestCodec =
    Codec.object AcceptVpcEndpointConnectionsRequest
        |> Codec.field "VpcEndpointIds" .vpcEndpointIds valueStringListCodec
        |> Codec.field "ServiceId" .serviceId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for AcceptTransitGatewayVpcAttachmentResult. -}
acceptTransitGatewayVpcAttachmentResultCodec : Codec AcceptTransitGatewayVpcAttachmentResult
acceptTransitGatewayVpcAttachmentResultCodec =
    Codec.object AcceptTransitGatewayVpcAttachmentResult
        |> Codec.field "TransitGatewayVpcAttachment" .transitGatewayVpcAttachment transitGatewayVpcAttachmentCodec
        |> Codec.buildObject


{-| Codec for AcceptTransitGatewayVpcAttachmentRequest. -}
acceptTransitGatewayVpcAttachmentRequestCodec : Codec AcceptTransitGatewayVpcAttachmentRequest
acceptTransitGatewayVpcAttachmentRequestCodec =
    Codec.object AcceptTransitGatewayVpcAttachmentRequest
        |> Codec.field "TransitGatewayAttachmentId" .transitGatewayAttachmentId Codec.string
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject


{-| Codec for AcceptReservedInstancesExchangeQuoteResult. -}
acceptReservedInstancesExchangeQuoteResultCodec : Codec AcceptReservedInstancesExchangeQuoteResult
acceptReservedInstancesExchangeQuoteResultCodec =
    Codec.object AcceptReservedInstancesExchangeQuoteResult
        |> Codec.field "ExchangeId" .exchangeId Codec.string
        |> Codec.buildObject


{-| Codec for AcceptReservedInstancesExchangeQuoteRequest. -}
acceptReservedInstancesExchangeQuoteRequestCodec : Codec AcceptReservedInstancesExchangeQuoteRequest
acceptReservedInstancesExchangeQuoteRequestCodec =
    Codec.object AcceptReservedInstancesExchangeQuoteRequest
        |> Codec.field "TargetConfigurations" .targetConfigurations targetConfigurationRequestSetCodec
        |> Codec.field "ReservedInstanceIds" .reservedInstanceIds reservedInstanceIdSetCodec
        |> Codec.field "DryRun" .dryRun Codec.bool
        |> Codec.buildObject
